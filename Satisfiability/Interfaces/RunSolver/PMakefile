# Oleg Zaikin, 22.1.2021 (Swansea)
# Copyright 2021 Oliver Kullmann
# This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
# it and/or modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation and included in this library; either version 3 of the
# License, or any later version.

# Run a SAT solver on all instances from a directory.

# Version 0.1.3

SHELL := /bin/bash
.SUFFIXES :
.PHONY : all run beginrun runjobs endrun transfer clean cleanall

MAKE_PID := $(shell echo $$PPID)
JOB_FLAG := $(filter -j%, $(subst -j ,-j,$(shell ps T | grep "^\s*$(MAKE_PID).*$(MAKE)")))
ifeq ($(JOB_FLAG),)
  JOBS := 1
else ifeq ($(JOB_FLAG),-j)
  JOBS := INF
else
  JOBS := $(subst -j,,$(JOB_FLAG))
endif

solver_call := SOLVERCALL
extraction_tool := EXTRACT
resultfile := SubinstanceStatistics

joblist := $(shell find ./Instances -type l -name "*.cnf" -exec basename {} .cnf \;)
extjoblist := $(addprefix Results/,$(joblist))
jobnum := $(shell echo $(joblist) | wc -w)
header := $(shell $(extraction_tool) header-only)
satpos := $(shell echo $(header) | awk '{for(i=1;i<=NF;i++)if($$i=="sat")print i}')
tpos := $(shell echo $(header) | awk '{for(i=1;i<=NF;i++)if($$i=="t")print i}')

all : run transfer
run : beginrun runjobs endrun

beginrun :
	echo "$(header)"
	echo "$x"
	echo -e "\nBegin run, PID=$(MAKE_PID)" >> Log
	@date -Ins >> Log
	echo "Parallel: j=$(JOBS)" >> Log
	mkdir -p Results

runjobs : | beginrun
runjobs : $(extjoblist)

endrun : | runjobs
endrun :
	@ps -o "%t" --pid $(MAKE_PID) | tee -a Log
	@echo "End run, PID=$(MAKE_PID)" >> Log
	@date -Ins >> Log

Results/% :
	@$(solver_call) ./Instances/$*.cnf > $*.out; if [[  $$? != 0 && $$? != 10 && $$? != 20 && $$? != 124 ]]; then exit 1; fi
	@sed -i 's@./Instances/@@g' $*.out
	@cat $*.out | $(extraction_tool) data-only > $@
	@rm $*.out

transfer : | run
	@echo $(header) >> $(resultfile)
	@for i in $(joblist); do cat Results/$$i >> $(resultfile); done
	tail -n $(jobnum) $(resultfile) | awk 'BEGIN {unsat=0; sat=0; indet=0; tunsat=0; tsat=0; tindet=0} {if ($$$(satpos)==0) {++unsat; tunsat+=$$$(tpos)} else if ($$$(satpos)==1) {++sat; tsat+=$$$(tpos)} else {++indet; tindet+=$$$(tpos)}} END {print "unsat:" unsat ", " tunsat "s; sat:" sat ", " tsat "s; unknown:" indet ", " tindet "s"}' | tee -a Log

clean :
	- rm Results/*
	@echo -e "\nclean" >> Log
	@date -Ins >> Log

cleanall : clean
	- rm $(resultfile)
	@echo -e "cleanall" >> Log
	@rm *.out
