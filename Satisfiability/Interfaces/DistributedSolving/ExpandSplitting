#!/bin/bash
# Oliver Kullmann, 23.3.2024 (Swansea)
# Copyright 2024 Oliver Kullmann
# This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
# it and/or modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation and included in this library; either version 3 of the
# License, or any later version.

# Expand a given set of partial assignments (read from standard input)
# and a CNF to a Splitting-directory ready to be processed
# by MProcessSplitViaOKsolver.

# USAGE: > ExpandSplitting F.cnf [special-name]
# reads the partial assignments from standard input (one per line),
# creates an experiment-directory using special-name, to be used by
# MProcessSPlitViaOKsolver, with the partial assignments completed by
# r2-reduction (full failed-literal elimination).

# EXAMPLE: splitting the Pandiagonal_N=13 problem into the 348 problems given
# by the possibly placement of "queen 0" (sorting the cubes):
# First creating the initial partial assignments:
# LatinSquares> ./CPandiagonal 13 "" | clasp 0 | ./CP_clasp_first_columns.awk -v N=13 | ./Sort | ./CP_clasp_cubes.awk > SPLIT13
# Then expanding this splitting (performing r2-reduction), using 6 threads
# (default is 1):
# DistributedSolving> time cat SPLIT13 | threads=6 ExpandSplitting P13.cnf
# where P13.cnf has been created by 'Pandiagonal 13 ""'.

# Programs assumed:
#  - ExtractOKsolver
#  - InsertPassAsUnit.awk
#  - OKsolver2002
#  - CountSatResults.awk.


set -o errexit
set -o nounset

script_name=$(basename "$0")
version_number=0.1.1

if [[ $# -eq 0 ]]; then
  echo "ERROR[${script_name}]: At least one parameter needed, the Dimacs-file."
  exit 1
fi

threads=${threads-1}

timestamp=$(date +"%Y-%m-%d-%H%M%S")

echo "${script_name} in version ${version_number} started; threads=${threads}."

filename="$1"
special="${2-_ES_}"

directory="Splitting${special}${timestamp}"

mkdir ${directory}
echo -e "Created directory\n  ${directory}"
cd ${directory}

echo -n "Begin: " > Log
date >> Log
echo "${script_name} in version ${version_number}" >> Log
echo "Process id = $$" >> Log
echo -e "Filename = \"${filename}\"" >> Log
echo -e "SpecialName = \"${special}\"" >> Log
echo "threads=$threads" >> Log

echo "${script_name} ${version_number}" > Version

uname -a > Environment
echo >> Environment
cat /proc/cpuinfo >> Environment
echo >> Environment
free -m >> Environment

cp ../$filename F

mkdir Instances
ExtractOKsolver header-only > ReductionStatistics

i=0
while IFS=$'\n' read -r line; do
  ((++i))
  tempfile="TEMP$i.cnf"
  (
   echo "$line" | cat - F | InsertPassAsUnit.awk > $tempfile
   OKsolver2002 -S=Instances/$i -D0 -SF -SD $tempfile | ExtractOKsolver data-only > Instances/$i.R
   rm $tempfile
   rm Instances/${i}_decisions
  ) &
  if [[ $(jobs -r -p | wc -l) -ge $threads ]]; then
    wait -n
  fi
done
wait

echo -n "Completed creation of cubes: " >> Log
date >> Log
echo "$i$" > N

unsat=0
for (( j=1; j <= i; ++j )); do
  if [ ! -s Instances/$j ]; then
     ((++unsat))
     rm Instances/$j
  fi
done
echo "Total=$i UNSAT=$unsat" | tee -a Log

for (( j=1; j <= i; ++j )); do
  echo -n "$j " >> ReductionStatistics
  cat Instances/$j.R >> ReductionStatistics
  rm Instances/$j.R
done

CountSatResults.awk ReductionStatistics | tee -a Log

# For compatibility with current version of MProcessSplitViaOKsolver:
localname="$(basename $filename)"
mv F $localname
echo "$localname" > F
