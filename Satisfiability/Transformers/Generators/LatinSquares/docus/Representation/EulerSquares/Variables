// Oliver Kullmann, 24.8.2020 (Swansea)
/* Copyright 2020 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

A) UNREDUCED

The primary variables for the euler-squares are

  enc(i,j,{x,y},{p,q}),

where now 0 <= x, y < N yield the values of a square (with indices i,j),
while 0 <= p < q < k is the index of the euler-square.
(Note that here the curly brackets are used as in the C++ code, not as
in Mathematics (for sets).)
So per euler-square there are N^2 * N^2 = N^4 primary variables (again for
the full form). In total that makes

  npes = binomial(k, 2) * N^4.

In total:

  n ~ k*N^3 + 3/2 binomial(k,2)*N^4


B) REDUCED

Now considering the es-variables ("euler-square-variables")
  enc(i,j,{x,y},{p,q}).
A necessery condition for its extension at the fixedpoint (always using
strongest possible inference) is that
  both enc(i,j,x,p), enc(i,j,y,q) are unassigned.
If further es-variables are eliminated, then they must be set false (by
euler-amo), and these are exactly those with i!=0 and x=y.
These false es-variables yield each a single binary clause as remainder
from the euler-equivalence.

The different cases per euler-field as given by i,j,{p,q} (running through
{x,y}) are:

p = 0:

i = 0: all es-variables assigned

i >= 1:

  j = 0: all es-variables eliminated, and exactly the euler-equivalences
    enc(i,0,{i,y},{0,q}) <-> enc(i,0,i,0) && enc(i,0,y,q)
  for y != i are left, with enc(i,0,i,0)=true, yielding
    enc(i,0,{i,y},{0,q} <-> enc(i,0,y,q),
  where the lhs is universally replaced by the rhs.
  So we have N-2 "pseudo-es-variables" here (for y != 0,i) (to be taken
  into account for the euler-amo, for the value (i,y)).

  j >= 1: for ls(0) there are two cases: diagonal i=j and non-diagonal:
             diagonal have x != i, making N-1 possibilities;
             non-diagonal have x != i, j, making N-2 possibilities;
          for ls(q) all fields have y != j, making N-1 possibilities;
          additionally we have x != y.

          Thus for diagonal euler-fields i = j we have
            x, y != i, x != y: makes (N-1)^2 - (N-1) = (N-1)(N-2) variables
            for such a field.
          There are N-1 such euler-fields.
          While for non-diagonal euler-fields i != j we have
            x != i,j, y != j, x != y: makes (N-2)*(N-1) - (N-2) = (N-2)^2
            variables for such a field.
          There are (N-1)^2 - (N-1) = (N-1)(N-2) such fields.

  In total

  nbes1 = (N-1) (N-1)(N-2) + (N-1)(N-2) (N-2)^2 = (N-1)^2(N-2) + (N-1)(N-2)^3
        = (N-1)(N-2)(N^2 - 3N + 3).

p >= 1:

i = 0: all es-variables assigned.

i >= 1:

  j = 0:  x, y != i, 0, x != y: makes (N-2)^2 - (N-2) = (N-2)(N-3) variables
          for such a field.
          There are N-1 such fields.
  j >= 1: x, y != j, x != y: makes (N-1)^2 - (N-1) = (N-1)(N-2) variables
          for such a field.
          There are (N-1)^2 such fields.

  In total

  nbes2 = (N-1)(N-2)(N-3) + (N-1)^3 (N-2) = (N-2)^2 (N^2 - 1).

We get

  npes = (k-1) nbes1 + binom(k-1,2) nbes2
       = 1/2 (k-1) (N-1)(N-2) (kN^2 - kN - 4N - 2k + 10).


For the auxiliary variables we have the following amo-clauses over {x,y}:

  p = 0:

    {0,y}, y != 0: occurs in every of the (N-1)^2 inner fields, except for
                   the N-1 cases with y=j, which makes
                     (N-1)^2 - (N-1) = (N-1)(N-2)
                   occurrences;
                   there are N-1 such pairs.
    {x,0}, x != 0: occurs in every of the (N-1)^2 inner fields, except for
                   N-1 cases with x=i and N-1 cases with x=j, which makes
                     (N-1)^2 - 2(N-1) + 1 = (N-2)^2
                   occurrences;
                   there are N-1 such pairs.
    {x,y}, x, y != 0, x != y: occurs in each of the inner fields, except
                   for row x and for columns x, y, while in column j=0 there
                   are only occurrences in row i=x; this makes
                     (N-1)^2 - 3(N-1) + 2 + 1 = (N-2)(N-3) + 1
                   occurrences;
                   there are (N-1)^2 - (N-1) = (N-1)(N-2) such pairs.

  p >= 1:

    {0,y}, y != 0: occurs in the (N-1)^2 inner fields, except for column
                   j=y, which makes
                     (N-1)^2 - (N-1) = (N-1)(N-2)
                   occurrences;
                   there are N-1 such pairs.
    {x,0}, x != 0: occurs in the (N-1)^2 inner fields, except for column
                   j=x, which makes
                     (N-1)^2 - (N-1) = (N-1)(N-2)
                   occurrences;
                   there are N-1 such pairs.
    {x,y}, x != y, x,y != 0: occurs in all (N-1)N fields, except for
                   columns x, y, and except for column j=0 when x=i or y=i,
                   which makes
                     (N-1)N - 2(N-1) - 2 = N(N-3);
                   there are (N-1)^2 - (N-1) = (N-1)(N-2) such pairs.


XXX

For the es-variables ("euler-squares") this yields in summary:

  Via the euler-definitions, for all {p,q}:

    enc(0,j,{j,j},{p,q}) -> true for all j
    enc(0,j,{i,j},{p,q}) -> false for all i != j

    enc(i,j,{j,y},{p,q}) -> false for i != 0 and all j, y
    enc(i,j,{x,j},{p,q}) -> false for i != 0 and all j, x


  Via euler-amo, for all {p,q}:

    enc(i,j,{x,x},{p,q}) -> false for all i != 0, and all j, x

  This yields by the euler-definitions (now treated as additional constraints):

    not enc(i,j,x,p) or not enc(i,j,x,q) for all i,j != 0, and all x != j,
                                             where in case p=0 also x != i.


  Via the euler-definitions, for p=0:

    enc(i,0,{i,y},{0,q}) = enc(i,0,y,q) for all i != 0 and all y != 0
    enc(i,0,{x,y},{0,q}) -> false for all i != 0 and x != i

    enc(i,j,{i,y},{0,q}) -> false for all i,j != 0 and all y.


And the new es-variables enc(i,j,(x,y),(p,q)) are:

  i != 0
  x, y != j
  x != y
  x, y != i for j=0 (p >= 1).

In case of p = 0 we additionally have:

  x != i
  j = 0: enc(i,0,(x,y),(0,q)) only for x=i, where it becomes
         enc(i,0,(i,y),(0,q)) = enc(i,0,y,q) (substitution);
         so all variables for j=0 are dispensed, but in the constraints
         involving enc(i,0,(i,y),(0,q)) use enc(i,0,y,q) instead.

That makes

  npes = 1/2 (k-1)(N-2)(N-1) (kN^2 - k*N - 4*N + 6).

As before, we can use

  naux ~ 1/2 npes

since the auxiliary variables come from a scheme, which due to being roughly
size-linear, can be considered size-wise as a big amo over the primary
es-variables, where the amo-seco-scheme uses roughly m/2 auxiliary variables
for an input of m literals.
