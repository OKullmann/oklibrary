# Oliver Kullmann, 24.4.2020 (Swansea)

OLD:

Timing 17/3/2019

csltok (gcc 8.3.0):
NicolosiCounting> time ./qcount_ct
14772512 355451208
real    0m16.799s
user    0m16.670s
sys     0m0.081s

With new optimisation-options
  -Ofast -DNDEBUG -march=native -fwhole-program -static
compared to old ones
  -Ofast -DNDEBUG -ffinite-math-only -funroll-loops -fwhole-program -fno-math-errno -funsafe-loop-optimizations
we get
NicolosiCounting> time ./qcount_ct
14772512 355451208
real    0m16.911s
user    0m16.868s
sys     0m0.002s

There seems to be a slowdown.

Playing with options:
 - "-static" might yield some slowdown
 - "-funroll-loops" might yield some slowdown
 - "-funsafe-loop-optimizations" might yield some speedup

Unclear whether -static has an effect on qcount; so let's leave it out here.

cs-wsok:
NicolosiCounting> time ./qcount_ct
14772512 355451208
real    0m12.677s
user    0m12.668s
sys     0m0.002s

With new options:
csoliver@cs-wsok:~/OKplatform/OKsystem/OKlib/Satisfiability/Transformers/Generators/Queens/NicolosiCounting> time ./qcount_ct
14772512 355451208
real    0m12.320s
user    0m12.312s
sys     0m0.000s

Possibly small improvement.

Without -static:
NicolosiCounting> time ./qcount_ct
14772512 355451208
real    0m12.584s
user    0m12.574s
sys     0m0.001s

This might have relevance.

NicolosiCounting> rm qcount_ct; make CXXFLAGS="-static" qcount_ct
g++ -DNN=16 --std=c++17 -pedantic -fmax-errors=5 -Wall -Wextra -Ofast -DNDEBUG -march=native -fwhole-program -funsafe-loop-optimizations  -static NQueens_ct.cpp -o qcount_ct
csoliver@cs-wsok:~/OKplatform/OKsystem/OKlib/Satisfiability/Transformers/Generators/Queens/NicolosiCounting> time ./qcount_ct14772512 355451208
real    0m12.326s
user    0m12.317s
sys     0m0.000s

So on this platform, -static might have some positive effect.


csverify:
NicolosiCounting$ time ./qcount_ct
14772512 355451208
real    0m10.153s
user    0m10.149s
sys     0m0.004s

With new options:
NicolosiCounting$ time ./qcount_ct
14772512 355451208
real    0m9.209s
user    0m9.205s
sys     0m0.004s

This should be an improvement.

Seems unchanged by +- static and +- unsafe-loop-optimizations.


24.4.2020

csltok:
SimpleBacktracking> ./RunTime ./qcount_ct
MIN + MAX user times:
17.28 17.61
MIN + MAX wallclock times:
17.34 17.70
MIN + MAX system times:
0.00 0.06


csltok2:
SimpleBacktracking$ ./RunTime ./qcount_ct
MIN + MAX user times:
7.86 8.11
MIN + MAX wallclock times:
7.86 8.11
MIN + MAX system times:
0.00 0.00


cs-wsok:
> ./RunTime ./qcount_ct
MIN + MAX user times:
12.60 12.69
MIN + MAX wallclock times:
12.62 12.69
MIN + MAX system times:
0.00 0.00


csverify:

(7 processes already running:

$ ./RunTime ./qcount_ct
MIN + MAX user times:
11.11 11.29
MIN + MAX wallclock times:
11.11 11.29
MIN + MAX system times:
0.00 0.00

Idle machine:

> ./RunTime ./qcount_ct
MIN + MAX user times:
8.68 8.75
MIN + MAX wallclock times:
8.68 8.75
MIN + MAX system times:
0.00 0.00


cs-kullmann-server (81 processes already running):

> ./RunTime ./qcount_ct
MIN + MAX user times:
9.87 14.05
MIN + MAX wallclock times:
9.87 14.05
MIN + MAX system times:
0.00 0.00
Repeated:
MIN + MAX user times:
12.61 14.41
MIN + MAX wallclock times:
12.61 14.41
MIN + MAX system times:
0.00 0.00

> N=60 ./RunTime ./qcount_ct
MIN + MAX user times:
12.62 14.30
MIN + MAX wallclock times:
12.63 14.30
MIN + MAX system times:
0.00 0.00


---

New version, with ProgramInfo:

csltok:

program name:       NQueens_ct
 version:           0.9.0
 last change:       24.4.2020
 git-id:            eea9e4f1e51505630e7c59a73b881e144ba26918
machine name:       csltok.swansea.ac.uk
 bogomips:          4787.85
compiler version:   g++ 9.3.0
 date:              Apr_24_2020 23:39:48
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -funsafe-loop-optimizations -fno-finite-math-only -DNN=16"
 NDEBUG:            defined
 OPTIMIZE:          on
MIN + MAX user times:
17.37 17.70
MIN + MAX wallclock times:
17.44 17.75
MIN + MAX system times:
0.00 0.05


csltok2:

program name:       NQueens_ct
 version:           0.9.0
 last change:       24.4.2020
 git-id:            bdf7e67b3518f57835654c0776f9dcc4b4fc6be5
machine name:       csltok2
 bogomips:          5808
compiler version:   g++ 9.3.0
 date:              Apr_25_2020 00:06:56
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -funsafe-loop-optimizations -fno-finite-math-only -DNN=16"
 NDEBUG:            defined
 OPTIMIZE:          on
MIN + MAX user times:
9.61 9.86
MIN + MAX wallclock times:
9.61 9.86
MIN + MAX system times:
0.00 0.03

A slowdown (from using Environment::ProgramInfo) by 25%.


cs-wsok:

SimpleBacktracking> ./RunTime ./qcount_ct
program name:       NQueens_ct
 version:           0.9.0
 last change:       24.4.2020
 git-id:            25facdaaae725a8f9c6a440833fdbf2e6b4f815e
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Apr_25_2020 00:16:19
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -funsafe-loop-optimizations -fno-finite-math-only -DNN=16"
 NDEBUG:            defined
 OPTIMIZE:          on
MIN + MAX user times:
12.57 12.66
MIN + MAX wallclock times:
12.58 12.66
MIN + MAX system times:
0.00 0.00

Basically unchanged.


csverify:
$ ./RunTime ./qcount_ct
program name:       NQueens_ct
 version:           0.9.0
 last change:       24.4.2020
 git-id:            25facdaaae725a8f9c6a440833fdbf2e6b4f815e
machine name:       csverify
 bogomips:          7182.86
compiler version:   g++ 8.3.0
 date:              Apr_25_2020 00:15:06
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -funsafe-loop-optimizations -fno-finite-math-only -DNN=16"
 NDEBUG:            defined
 OPTIMIZE:          on
MIN + MAX user times:
8.17 8.23
MIN + MAX wallclock times:
8.17 8.23
MIN + MAX system times:
0.00 0.00

Here actually a speed-up.


cs-kullmann-server (81 processes already running):

SimpleBacktracking> N=60 ./RunTime ./qcount_ct
program name:       NQueens_ct
 version:           0.9.0
 last change:       24.4.2020
 git-id:            25facdaaae725a8f9c6a440833fdbf2e6b4f815e
machine name:       cs-kullmann-server.swan.ac.uk
 bogomips:          5400
compiler version:   g++ 8.2.1 20180831 [gcc-8-branch revision 264010]
 date:              Apr_25_2020 00:18:30
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -funsafe-loop-optimizations -fno-finite-math-only -DNN=16"
 NDEBUG:            defined
 OPTIMIZE:          on
MIN + MAX user times:
10.49 14.61
MIN + MAX wallclock times:
10.49 14.62
MIN + MAX system times:
0.00 0.00

Unclear (but slowdown possible).
