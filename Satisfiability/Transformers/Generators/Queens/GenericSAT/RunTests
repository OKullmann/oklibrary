#!/bin/bash
set -o errexit
set -o nounset

program="RunTests"
version="0.1.5"

error="ERROR[${program}]: "

maxN=8

S="./program_debug"
echo "Testcase: $S"
result="$($S)"
expected=$'c solutions                             2\nc nodes                                 1\nc height                                0\nc max_unodes                            0\nc max_snodes                            1\nc HortonStrahler                        0'
if [[ "$result" != "$expected" ]]; then
  echo -e "${error}program_debug without arguments:\n${result}\n${expected}"
  exit 1
fi
echo "Testcase: $S 2"
result="$($S 2)"
expected=$'c solutions                             16\nc nodes                                 1\nc height                                0\nc max_unodes                            0\nc max_snodes                            1\nc HortonStrahler                        0'
if [[ "$result" != "$expected" ]]; then
  echo -e "${error}program_debug with argument 1:\n${result}\n${expected}"
  exit 1
fi

# program1="valgrind -q --exit-on-first-error=yes ./SimTaw_debug"
program1="./SimTaw"
program2="valgrind -q ./SimTaw_debug"
program3="./ExpQueens"
declare -a programs=("${program1}" "${program2}" "${program3}")

declare -a outcomes=(0 "1 1 0 0 1 0" "0 3 1 3 0 1" "0 5 2 5 0 1" "2 7 3 1 3 1" "10 19 5 0 19 2" "4 51 8 5 1 3" "40 155 11 3 3 4" "92 453 17 9 3 4")

for S in "${programs[@]}"; do
  for (( N=1; N<=maxN; ++N )); do
    echo "Testcase: ${S} ${N}"
    result=$(echo "$(${S} ${N})" | grep -o -E '[0-9]+'| tr '\n' ' '| xargs)
    expected="${outcomes[$N]}"
    if [[ "$result" != "$expected" ]]; then
      echo -e "${error}\"${S} ${N}\" yields \"${result}\", but should yield ${expected}."
      exit $N
    fi
  done

done

program1="./ExpQueens"
program2="valgrind -q ./ExpQueens_debug"
declare -a programs=("${program1}" "${program2}")

declare -a outcomes=(0 "1 1 0 0 1 0" "0 3 1 3 0 1" "0 5 2 5 0 1" "2 11 4 3 1 2" "10 27 6 1 3 2" "4 75 9 13 1 3" "40 209 12 5 3 4" "92 783 17 31 9 5")

for S in "${programs[@]}"; do
  for (( N=1; N<=maxN; ++N )); do
    echo "Testcase: ${S} ${N} 2"
    result=$(echo "$(${S} ${N} 2)" | grep -o -E '[0-9]+'| tr '\n' ' '| xargs)
    expected="${outcomes[$N]}"
    if [[ "$result" != "$expected" ]]; then
      echo -e "${error}\"${S} ${N}\" yields \"${result}\", but should yield ${expected}."
      exit $N
    fi
  done

done

