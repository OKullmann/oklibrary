# Oliver Kullmann, 31.3.2019 (Swansea)

$ ./RunTime ./TimingBernoulli2
program name:       TimingBernoulli2
 version:           0.2.3
 last change:       19.3.2019
 git-id:            ab7c0e5bddce380d43b683649f90df701d1a3a64
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_19_2019 21:05:20
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
1000000000 3 1
()
124997746 0.124997746
1e+09 0.125
MIN + MAX user times:
2.39 2.44

Roughly 1e9 / 2.39 ~  418e6 generations per sec, 418 / 492 ~ 85%
of the bernoulli-speed.
A surprising drop.

New version:
Random$ ./RunTime ./TimingBernoulli2
program name:       TimingBernoulli2
 version:           0.3.0
 last change:       21.3.2019
 git-id:            efd3a73bdaecf88852ec2e5cbda2dfc5c225d460
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_21_2019 21:35:46
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
1000000000 3 1
()
124997746 0.124997746 0.82935909643158182823
1e+09 0.125
MIN + MAX user times:
2.39 2.45


Newer version:

Random$ ./RunTime ./TimingBernoulli2
** Information on the program:

author:             "Oliver Kullmann"
 url:               "https://github.com/OKullmann/oklibrary/blob/master/Satisfiability/Transformers/Generators/Random/TimingBernoulli2.cpp"
 license:           "GPL v3"
program name:       TimingBernoulli2
 version:           0.3.11
 last change:       12.4.2019
 git-id:            edc6340b678901b68e3e6c28bb782f3d71c1c5cc
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Apr_12_2019 22:55:29
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only"

** Current date, time, and ticks since the Unix epoch (1.1.1970):
  12.04.2019 22:56:40_+0100 1555106200085634847
  The number of ticks per nanosecond is 1.
Output program:
s 1000000000 3 1 ()
124997746 0.124997746 0.82935909643158182823
1e+09 0.125
MIN + MAX user times:
2.38 2.45
MIN + MAX wallclock times:
2.38 2.45
MIN + MAX system times:
0.00 0.00

Different from csltok, here no changes.


Newest version:
Random$ ./RunTime ./TimingBernoulli2
** Information on the program:

author:             "Oliver Kullmann"
 url:               "https://github.com/OKullmann/oklibrary/blob/master/Satisfiability/Transformers/Generators/Random/TimingBernoulli2.cpp"
 license:           "GPL v3"
program name:       TimingBernoulli2
 version:           0.3.12
 last change:       12.4.2019
 git-id:            9a9695b65b02f0b135b969c50edea64b2a4243e5
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Apr_12_2019 23:27:48
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only"

** Current date, time, and ticks since the Unix epoch (1.1.1970):
  12.04.2019 23:28:43_+0100 1555108123140281338
  The number of ticks per nanosecond is 1.
Output program:
s 1000000000 3 1 ()
124997746 0.124997746 0.82935909643158182823
1e+09 0.125
MIN + MAX user times:
2.34 2.41
MIN + MAX wallclock times:
2.34 2.41
MIN + MAX system times:
0.00 0.00


As usual, rather stable (different from csltok and cs-wsok).


With profiling:
Random$ ./RunTime ./TimingBernoulli2_-p
** Information on the program:

author:             "Oliver Kullmann"
 url:               "https://github.com/OKullmann/oklibrary/blob/master/Satisfiability/Transformers/Generators/Random/TimingBernoulli2.cpp"
 license:           "GPL v3"
program name:       TimingBernoulli2
 version:           0.3.12
 last change:       12.4.2019
 git-id:            9a9695b65b02f0b135b969c50edea64b2a4243e5
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Apr_12_2019 23:33:41
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fprofile-use"

** Current date, time, and ticks since the Unix epoch (1.1.1970):
  12.04.2019 23:34:44_+0100 1555108484551683097
  The number of ticks per nanosecond is 1.
Output program:
s 1000000000 3 1 ()
124997746 0.124997746 0.82935909643158182823
1e+09 0.125
MIN + MAX user times:
2.20 2.29
MIN + MAX wallclock times:
2.20 2.29
MIN + MAX system times:
0.00 0.00


A small improvement.
