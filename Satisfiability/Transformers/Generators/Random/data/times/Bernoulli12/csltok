A) *** Run-level 0 ***


A.1) Without profiling:

Random> ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.3.2
 last change:       19.3.2019
 git-id:            0e33bd127e3ef9e78912f8c8a900413d59382c25
machine name:       csltok.swansea.ac.uk
 bogomips:          4788.21
compiler version:   g++ 8.3.0
 date:              Mar_19_2019 20:37:29
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
3000000000 0
()
1499919941 0.49997331366666666666
3e+09 0
MIN + MAX user times:
15.97 16.25

Roughly 3e9 / 15.97 ~ 188e6 generations per sec, which is
188 / 225 ~ 84% of pure generation speed.
And this is 188 / 207 ~ 91% of the speed of the previous version,
where just trivial changes took place -- the compilation is "all over
the place".

Newer version:
Random> ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.4.0
 last change:       21.3.2019
 git-id:            e130527c6a50f5016461088eeffdee7e29961895
machine name:       csltok.swansea.ac.uk
 bogomips:          4788.21
compiler version:   g++ 8.3.0
 date:              Mar_21_2019 19:27:32
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
16.08 16.37

Newer version:
Random> ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.4.2
 last change:       23.3.2019
 git-id:            7c8043676e280f5987d26ffb9aadd02958aaa971
machine name:       csltok.swansea.ac.uk
 bogomips:          4788.21
compiler version:   g++ 8.3.0
 date:              Mar_23_2019 16:29:45
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
16.31 16.59

One sees that just adding further options (not touching the above computation)
make the program slower.

Or is it just random? A newer version:
Random> ./RunTime ./TimingBernoulli12
author:             "Oliver Kullmann"
 url:               "https://github.com/OKullmann/oklibrary/blob/master/Satisfiability/Transformers/Generators/Random/TimingBernoulli12.cpp"
 license:           "GPL v3"
program name:       TimingBernoulli12
 version:           0.4.4
 last change:       24.3.2019
 git-id:            a329a5a355fc552595f155d2234efb7269e83f29
machine name:       csltok.swansea.ac.uk
 bogomips:          4788.21
compiler version:   g++ 8.3.0
 date:              Mar_24_2019 19:01:47
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
15.89 16.15

A newer version:
Random> ./RunTime ./TimingBernoulli12
author:             "Oliver Kullmann"
 url:               "https://github.com/OKullmann/oklibrary/blob/master/Satisfiability/Transformers/Generators/Random/TimingBernoulli12.cpp"
 license:           "GPL v3"
program name:       TimingBernoulli12
 version:           0.4.6
 last change:       25.3.2019
 git-id:            a0a988f7f98e7ecab55eacc2fa546ef064ee8573
machine name:       csltok.swansea.ac.uk
 bogomips:          4788.21
compiler version:   g++ 8.3.0
 date:              Mar_25_2019 15:30:06
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only"
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
17.89 18.44

Just repackaged, and 10% slower.


A.2) With profiling:

rm TimingBernoulli12
make CXXFLAGS="-fprofile-generate" TimingBernoulli12
./TimingBernoulli12
rm TimingBernoulli12
make CXXFLAGS="-fprofile-use" TimingBernoulli12

Random> ./RunTime ./TimingBernoulli12
author:             "Oliver Kullmann"
 url:               "https://github.com/OKullmann/oklibrary/blob/master/Satisfiability/Transformers/Generators/Random/TimingBernoulli12.cpp"
 license:           "GPL v3"
program name:       TimingBernoulli12
 version:           0.4.4
 last change:       24.3.2019
 git-id:            429bfa9d1561ca45a276c4ef4eca817eaf1d09d4
machine name:       csltok.swansea.ac.uk
 bogomips:          4788.21
compiler version:   g++ 8.3.0
 date:              Mar_24_2019 19:23:00
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
13.87 14.18

A significant speedup.
The above options-output is wrong above, should include CXXFLAGS (DONE).

With profiling on the run-level-2 run:
Random> ./RunTime ./TimingBernoulli12
author:             "Oliver Kullmann"
 url:               "https://github.com/OKullmann/oklibrary/blob/master/Satisfiability/Transformers/Generators/Random/TimingBernoulli12.cpp"
 license:           "GPL v3"
program name:       TimingBernoulli12
 version:           0.4.4
 last change:       24.3.2019
 git-id:            429bfa9d1561ca45a276c4ef4eca817eaf1d09d4
machine name:       csltok.swansea.ac.uk
 bogomips:          4788.21
compiler version:   g++ 8.3.0
 date:              Mar_24_2019 19:55:07
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
18.35 18.70

Worse than the original, unprofiled version.

Now using profiling via the "-p"-option:
Random> ./RunTime ./TimingBernoulli12
author:             "Oliver Kullmann"
 url:               "https://github.com/OKullmann/oklibrary/blob/master/Satisfiability/Transformers/Generators/Random/TimingBernoulli12.cpp"
 license:           "GPL v3"
program name:       TimingBernoulli12
 version:           0.4.6
 last change:       25.3.2019
 git-id:            a0a988f7f98e7ecab55eacc2fa546ef064ee8573
machine name:       csltok.swansea.ac.uk
 bogomips:          4788.21
compiler version:   g++ 8.3.0
 date:              Mar_25_2019 15:51:11
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fprofile-use"
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
18.26 18.70

Slightly worse than the unprofiled version.


B) *** Run-level 1 ***

B.2) With profiling:

Profiling via "-p":
Random> ./RunTime ./TimingBernoulli12 1
author:             "Oliver Kullmann"
 url:               "https://github.com/OKullmann/oklibrary/blob/master/Satisfiability/Transformers/Generators/Random/TimingBernoulli12.cpp"
 license:           "GPL v3"
program name:       TimingBernoulli12
 version:           0.4.6
 last change:       25.3.2019
 git-id:            a0a988f7f98e7ecab55eacc2fa546ef064ee8573
machine name:       csltok.swansea.ac.uk
 bogomips:          4788.21
compiler version:   g++ 8.3.0
 date:              Mar_25_2019 15:51:11
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fprofile-use"
Output program:
"1,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
1499992345 0.7799646876543496644
3e+09 0
MIN + MAX user times:
32.14 32.56



C) *** Run-level 2 ***

C.1) Without profiling:

Random> ./RunTime ./TimingBernoulli12 2
program name:       TimingBernoulli12
 version:           0.4.2
 last change:       23.3.2019
 git-id:            7c8043676e280f5987d26ffb9aadd02958aaa971
machine name:       csltok.swansea.ac.uk
 bogomips:          4788.21
compiler version:   g++ 8.3.0
 date:              Mar_23_2019 16:29:45
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"2,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
1499992345 0.7799646876543496644
30 30.8151
3e+09 0
MIN + MAX user times:
34.82 35.38


C.2) With profiling:

With profiling on the run-level-0 (default) program:
Random> ./RunTime ./TimingBernoulli12 2
author:             "Oliver Kullmann"
 url:               "https://github.com/OKullmann/oklibrary/blob/master/Satisfiability/Transformers/Generators/Random/TimingBernoulli12.cpp"
 license:           "GPL v3"
program name:       TimingBernoulli12
 version:           0.4.4
 last change:       24.3.2019
 git-id:            429bfa9d1561ca45a276c4ef4eca817eaf1d09d4
machine name:       csltok.swansea.ac.uk
 bogomips:          4788.21
compiler version:   g++ 8.3.0
 date:              Mar_24_2019 19:23:00
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"2,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
1499992345 0.7799646876543496644
30 30.8151
3e+09 0
MIN + MAX user times:
57.32 58.04

An enormous slowdown.
Now profiling on the run-level-2 run:
Random> ./RunTime ./TimingBernoulli12 2
author:             "Oliver Kullmann"
 url:               "https://github.com/OKullmann/oklibrary/blob/master/Satisfiability/Transformers/Generators/Random/TimingBernoulli12.cpp"
 license:           "GPL v3"
program name:       TimingBernoulli12
 version:           0.4.4
 last change:       24.3.2019
 git-id:            429bfa9d1561ca45a276c4ef4eca817eaf1d09d4
machine name:       csltok.swansea.ac.uk
 bogomips:          4788.21
compiler version:   g++ 8.3.0
 date:              Mar_24_2019 19:55:07
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"2,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
1499992345 0.7799646876543496644
30 30.8151
3e+09 0
MIN + MAX user times:
33.06 33.34

Also improving the original runtime.

Profiling via "-p":
Random> ./RunTime ./TimingBernoulli12 2
author:             "Oliver Kullmann"
 url:               "https://github.com/OKullmann/oklibrary/blob/master/Satisfiability/Transformers/Generators/Random/TimingBernoulli12.cpp"
 license:           "GPL v3"
program name:       TimingBernoulli12
 version:           0.4.6
 last change:       25.3.2019
 git-id:            a0a988f7f98e7ecab55eacc2fa546ef064ee8573
machine name:       csltok.swansea.ac.uk
 bogomips:          4788.21
compiler version:   g++ 8.3.0
 date:              Mar_25_2019 15:51:11
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fprofile-use"
Output program:
"2,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
1499992345 0.7799646876543496644
30 30.8151
3e+09 0
MIN + MAX user times:
33.76 34.11

Similar to the original run-time (somewhat worse than the best).
