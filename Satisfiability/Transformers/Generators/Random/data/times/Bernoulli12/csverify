# Oliver Kullmann, 31.3.2019 (Swansea)

History

A) *** Run-level 0 ***


A.1) Without profiling:

Random$ ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.3.2
 last change:       19.3.2019
 git-id:            0e33bd127e3ef9e78912f8c8a900413d59382c25
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_19_2019 20:42:57
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
3000000000 0
()
1499919941 0.49997331366666666666
3e+09 0
MIN + MAX user times:
6.10 6.39

Roughly 3e9 / 6.1 ~ 492e6 generations per sec, which is
492 / 568 ~ 86.6% of pure generation-speed.
And this is 492 / 522 ~ 94% of the speed of the previous version,

Newer version:
Random$ ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.4.0
 last change:       21.3.2019
 git-id:            e130527c6a50f5016461088eeffdee7e29961895
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_21_2019 19:45:42
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
6.13 6.42

Basically the same.

Newer version:
Random$ ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.4.2
 last change:       23.3.2019
 git-id:            7c8043676e280f5987d26ffb9aadd02958aaa971
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_23_2019 16:42:22
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
6.24 6.50

Newer version:
Random$ ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.4.4
 last change:       24.3.2019
 git-id:            52c36b83a4b0c3945ad267a0a67d1cfebe06d0d4
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_24_2019 19:11:22
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
6.29 6.56

Newest version:
Random$ ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.4.6
 last change:       25.3.2019
 git-id:            a0a988f7f98e7ecab55eacc2fa546ef064ee8573
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_25_2019 15:33:03
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only"
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
10.54 10.83

Just repackaged, and 50% slower.


A.2) With profiling:

Random$ ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.4.4
 last change:       24.3.2019
 git-id:            52c36b83a4b0c3945ad267a0a67d1cfebe06d0d4
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_24_2019 19:28:18
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
5.72 5.83

Also here a significant speedup.
With profiling on the run-level-2 run:
Random$ ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.4.4
 last change:       24.3.2019
 git-id:            52c36b83a4b0c3945ad267a0a67d1cfebe06d0d4
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_24_2019 19:58:36
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
10.43 10.51

Significantly slower than without profiling.

With profiling via "-p"-option:
Random$ ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.4.6
 last change:       25.3.2019
 git-id:            a0a988f7f98e7ecab55eacc2fa546ef064ee8573
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_25_2019 15:52:40
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fprofile-use"
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
10.43 10.73

As bad as via run-level-2 profiling; as bad as the much worsened
run-time for the newest version.


B) *** Run-level 1 ***

B.2) With profiling:

Profiling via "-p":
Random$ ./RunTime ./TimingBernoulli12 1
program name:       TimingBernoulli12
 version:           0.4.6
 last change:       25.3.2019
 git-id:            a0a988f7f98e7ecab55eacc2fa546ef064ee8573
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_25_2019 15:52:40
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fprofile-use"
Output program:
"1,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
1499992345 0.7799646876543496644
3e+09 0
MIN + MAX user times:
18.48 18.80


C) *** Run-level 2 ***

C.1) Without profiling:

Random$ ./RunTime ./TimingBernoulli12 2
program name:       TimingBernoulli12
 version:           0.4.2
 last change:       23.3.2019
 git-id:            7c8043676e280f5987d26ffb9aadd02958aaa971
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_23_2019 16:42:22
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"2,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
1499992345 0.7799646876543496644
30 30.8151
3e+09 0
MIN + MAX user times:
19.12 19.34

Surprising, how that little addition of counting runs and the maximum length
increases the runtime by 300%.


C.2) With profiling:

With profiling on the run-level-0 (default) program:
Random$ ./RunTime ./TimingBernoulli12 2
program name:       TimingBernoulli12
 version:           0.4.4
 last change:       24.3.2019
 git-id:            52c36b83a4b0c3945ad267a0a67d1cfebe06d0d4
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_24_2019 19:28:18
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"2,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
1499992345 0.7799646876543496644
30 30.8151
3e+09 0
MIN + MAX user times:
36.13 36.16

An enormous slowdown.
Now profiling on the run-level-2 run:
Random$ ./RunTime ./TimingBernoulli12 2
program name:       TimingBernoulli12
 version:           0.4.4
 last change:       24.3.2019
 git-id:            52c36b83a4b0c3945ad267a0a67d1cfebe06d0d4
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_24_2019 19:58:36
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"2,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
1499992345 0.7799646876543496644
30 30.8151
3e+09 0
MIN + MAX user times:
18.02 18.10

Much better, also improving on the original time.

Profiling via "-p":
Random$ ./RunTime ./TimingBernoulli12 2
program name:       TimingBernoulli12
 version:           0.4.6
 last change:       25.3.2019
 git-id:            a0a988f7f98e7ecab55eacc2fa546ef064ee8573
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_25_2019 15:52:40
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fprofile-use"
Output program:
"2,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
1499992345 0.7799646876543496644
30 30.8151
3e+09 0
MIN + MAX user times:
19.27 19.58

Similar to the original run-time, but slower than the best.


***************************************************************

A) Without profiling

for (( level=0; level<=2; ++level )); do ./RunTime ./TimingBernoulli12 ${level} | tee Out${level}; done

Random$ cat Out0
program name:       TimingBernoulli12
 version:           0.5.1
 last change:       30.3.2019
 git-id:            58c1b2226e670fb668a82f29ae50fcce55c87857
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_31_2019 05:01:24
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fno-fast-math"
Output program:
"0,s,min" 3000000000 0 ()
1499919941 0.49997331366666666666 0.0034629664979143074965
3e+09 0
MIN + MAX user times:
10.17 10.44

Random$ cat Out1
program name:       TimingBernoulli12
 version:           0.5.1
 last change:       30.3.2019
 git-id:            58c1b2226e670fb668a82f29ae50fcce55c87857
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_31_2019 05:01:24
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fno-fast-math"
Output program:
"1,s,min" 3000000000 0 ()
1499919941 0.49997331366666666666 0.0034629664979143074965
1499992345 0.77996468765434966445
3e+09 0
MIN + MAX user times:
17.79 18.09

Random$ cat Out2
program name:       TimingBernoulli12
 version:           0.5.1
 last change:       30.3.2019
 git-id:            58c1b2226e670fb668a82f29ae50fcce55c87857
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_31_2019 05:01:24
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fno-fast-math"
Output program:
"2,s,min" 3000000000 0 ()
1499919941 0.49997331366666666666 0.0034629664979143074965
1499992345 0.77996468765434966445
29 30
3e+09 0
MIN + MAX user times:
17.88 18.12


B) With profiling

for (( level=0; level<=2; ++level )); do ./RunTime ./TimingBernoulli12 ${level} | tee OutP${level}; done

Random$ cat OutP0
program name:       TimingBernoulli12
 version:           0.5.1
 last change:       30.3.2019
 git-id:            31765ff128c5d8888ecf9c52474c749bed55394d
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_31_2019 05:33:16
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fno-fast-math -fprofile-use"
Output program:
"0,s,min" 3000000000 0 ()
1499919941 0.49997331366666666666 0.0034629664979143074965
3e+09 0
MIN + MAX user times:
10.79 11.12

Random$ cat OutP1
program name:       TimingBernoulli12
 version:           0.5.1
 last change:       30.3.2019
 git-id:            31765ff128c5d8888ecf9c52474c749bed55394d
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_31_2019 05:33:16
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fno-fast-math -fprofile-use"
Output program:
"1,s,min" 3000000000 0 ()
1499919941 0.49997331366666666666 0.0034629664979143074965
1499992345 0.77996468765434966445
3e+09 0
MIN + MAX user times:
17.79 18.13

Random$ cat OutP2
program name:       TimingBernoulli12
 version:           0.5.1
 last change:       30.3.2019
 git-id:            31765ff128c5d8888ecf9c52474c749bed55394d
machine name:       csverify
 bogomips:          7183.87
compiler version:   g++ 8.2.0
 date:              Mar_31_2019 05:33:16
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fno-fast-math -fprofile-use"
Output program:
"2,s,min" 3000000000 0 ()
1499919941 0.49997331366666666666 0.0034629664979143074965
1499992345 0.77996468765434966445
29 30
3e+09 0
MIN + MAX user times:
18.13 18.44
