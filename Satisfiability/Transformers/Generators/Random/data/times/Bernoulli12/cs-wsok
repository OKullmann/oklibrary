# Oliver Kullmann, 31.3.2019 (Swansea)

History

A) *** Run-level 0 ***


A.1) Without profiling:

Random> ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.3.2
 last change:       19.3.2019
 git-id:            0e33bd127e3ef9e78912f8c8a900413d59382c25
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_19_2019 20:41:28
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
3000000000 0
()
1499919941 0.49997331366666666666
3e+09 0
MIN + MAX user times:
11.90 12.00

Roughly 3e9 / 11.9 ~ 252e6 generations per sec, which is
252 / 317 ~ 79.5% of pure generation-speed.
And this is 252 / 291 ~ 87% of the speed of the previous version,

Newer version:
Random> ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.4.0
 last change:       21.3.2019
 git-id:            e130527c6a50f5016461088eeffdee7e29961895
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_21_2019 19:42:15
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
11.87 12.02

Basically the same.

Newer version:
Random> ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.4.2
 last change:       23.3.2019
 git-id:            7c8043676e280f5987d26ffb9aadd02958aaa971
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_23_2019 16:41:40
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
12.08 12.26

Newer version:
Random> ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.4.4
 last change:       24.3.2019
 git-id:            52c36b83a4b0c3945ad267a0a67d1cfebe06d0d4
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_24_2019 19:09:47
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
12.07 12.24

Newest version:
csoliver@cs-wsok:~/OKplatform/OKsystem/OKlib/Satisfiability/Transformers/Generators/Random> ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.4.6
 last change:       25.3.2019
 git-id:            a0a988f7f98e7ecab55eacc2fa546ef064ee8573
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_25_2019 15:32:26
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only"
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
14.66 14.87

Just repackaged, and 20% slower.


A.2) With profiling:

Random> ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.4.4
 last change:       24.3.2019
 git-id:            52c36b83a4b0c3945ad267a0a67d1cfebe06d0d4
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_24_2019 19:27:02
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
10.02 10.14

Also a significant speedup.
With profiling on the run-level-2 run:
Random> ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.4.4
 last change:       24.3.2019
 git-id:            52c36b83a4b0c3945ad267a0a67d1cfebe06d0d4
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_24_2019 19:54:19
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
14.09 14.22

Worse than the original, unprofiled version.

With profiling via "-p"-option:
Random> ./RunTime ./TimingBernoulli12
program name:       TimingBernoulli12
 version:           0.4.6
 last change:       25.3.2019
 git-id:            a0a988f7f98e7ecab55eacc2fa546ef064ee8573
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_25_2019 15:51:55
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fprofile-use"
Output program:
"0,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
3e+09 0
MIN + MAX user times:
13.91 14.06

Slightly better than the much worsened run-time for the newest version,
but doesn't undo the worsening by repackaging.


B) *** Run-level 1 ***

B.2) With profiling:

Profiling via "-p":
Random> ./RunTime ./TimingBernoulli12 1
program name:       TimingBernoulli12
 version:           0.4.6
 last change:       25.3.2019
 git-id:            a0a988f7f98e7ecab55eacc2fa546ef064ee8573
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_25_2019 15:51:55
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fprofile-use"
Output program:
"1,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
1499992345 0.7799646876543496644
3e+09 0
MIN + MAX user times:
25.38 25.56


C) *** Run-level 2 ***

C.1) Without profiling:

Random> ./RunTime ./TimingBernoulli12 2
program name:       TimingBernoulli12
 version:           0.4.2
 last change:       23.3.2019
 git-id:            7c8043676e280f5987d26ffb9aadd02958aaa971
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_23_2019 16:41:40
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"2,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
1499992345 0.7799646876543496644
30 30.8151
3e+09 0
MIN + MAX user times:
27.07 27.32


C.2) With profiling:

With profiling on the run-level-0 (default) program:
Random> ./RunTime ./TimingBernoulli12 2
program name:       TimingBernoulli12
 version:           0.4.4
 last change:       24.3.2019
 git-id:            52c36b83a4b0c3945ad267a0a67d1cfebe06d0d4
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_24_2019 19:27:02
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"2,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
1499992345 0.7799646876543496644
30 30.8151
3e+09 0
MIN + MAX user times:
45.23 45.49

An enormous slowdown.
Now profiling on the run-level-2 run:
Random> ./RunTime ./TimingBernoulli12 2
program name:       TimingBernoulli12
 version:           0.4.4
 last change:       24.3.2019
 git-id:            52c36b83a4b0c3945ad267a0a67d1cfebe06d0d4
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_24_2019 19:54:19
 options:           --std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static   -fno-finite-math-only
Output program:
"2,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
1499992345 0.7799646876543496644
30 30.8151
3e+09 0
MIN + MAX user times:
25.74 26.02

Much better, also improving the original runtime.

Profiling via "-p":
andom> ./RunTime ./TimingBernoulli12 2
program name:       TimingBernoulli12
 version:           0.4.6
 last change:       25.3.2019
 git-id:            a0a988f7f98e7ecab55eacc2fa546ef064ee8573
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_25_2019 15:51:55
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fprofile-use"
Output program:
"2,s,min" 3000000000 0
()
1499919941 0.49997331366666666666 0.0034629664979143074932
1499992345 0.7799646876543496644
30 30.8151
3e+09 0
MIN + MAX user times:
26.25 26.49

Somewhat slower than the best compilation.


***************************************************************

A) Without profiling

for (( level=0; level<=2; ++level )); do ./RunTime ./TimingBernoulli12 ${level} | tee Out${level}; done

Random> cat Out0
program name:       TimingBernoulli12
 version:           0.5.1
 last change:       30.3.2019
 git-id:            58c1b2226e670fb668a82f29ae50fcce55c87857
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_31_2019 04:58:39
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fno-fast-math"
Output program:
"0,s,min" 3000000000 0 ()
1499919941 0.49997331366666666666 0.0034629664979143074965
3e+09 0
MIN + MAX user times:
14.59 14.73

Random> cat Out1
program name:       TimingBernoulli12
 version:           0.5.1
 last change:       30.3.2019
 git-id:            58c1b2226e670fb668a82f29ae50fcce55c87857
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_31_2019 04:58:39
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fno-fast-math"
Output program:
"1,s,min" 3000000000 0 ()
1499919941 0.49997331366666666666 0.0034629664979143074965
1499992345 0.77996468765434966445
3e+09 0
MIN + MAX user times:
26.34 26.49

Random> cat Out2
program name:       TimingBernoulli12
 version:           0.5.1
 last change:       30.3.2019
 git-id:            58c1b2226e670fb668a82f29ae50fcce55c87857
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_31_2019 04:58:39
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fno-fast-math"
Output program:
"2,s,min" 3000000000 0 ()
1499919941 0.49997331366666666666 0.0034629664979143074965
1499992345 0.77996468765434966445
29 30
3e+09 0
MIN + MAX user times:
26.80 27.30


B) With profiling

for (( level=0; level<=2; ++level )); do ./RunTime ./TimingBernoulli12 ${level} | tee OutP${level}; done

Random> cat OutP0
program name:       TimingBernoulli12
 version:           0.5.1
 last change:       30.3.2019
 git-id:            31765ff128c5d8888ecf9c52474c749bed55394d
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_31_2019 05:33:56
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fno-fast-math -fprofile-use"
Output program:
"0,s,min" 3000000000 0 ()
1499919941 0.49997331366666666666 0.0034629664979143074965
3e+09 0
MIN + MAX user times:
13.98 14.12

Random> cat OutP1
program name:       TimingBernoulli12
 version:           0.5.1
 last change:       30.3.2019
 git-id:            31765ff128c5d8888ecf9c52474c749bed55394d
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_31_2019 05:33:56
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fno-fast-math -fprofile-use"
Output program:
"1,s,min" 3000000000 0 ()
1499919941 0.49997331366666666666 0.0034629664979143074965
1499992345 0.77996468765434966445
3e+09 0
MIN + MAX user times:
25.28 25.46

Random> cat OutP2
program name:       TimingBernoulli12
 version:           0.5.1
 last change:       30.3.2019
 git-id:            31765ff128c5d8888ecf9c52474c749bed55394d
machine name:       cs-wsok
 bogomips:          5986.74
compiler version:   g++ 8.3.0
 date:              Mar_31_2019 05:33:56
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-finite-math-only -fno-fast-math -fprofile-use"
Output program:
"2,s,min" 3000000000 0 ()
1499919941 0.49997331366666666666 0.0034629664979143074965
1499992345 0.77996468765434966445
29 30
3e+09 0
MIN + MAX user times:
25.64 25.81

