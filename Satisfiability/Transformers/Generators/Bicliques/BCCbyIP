#!/usr/bin/env bash
# Niyozbek Obidov, 6.7.2023 (Swansea)
# Copyright 2023 Oliver Kullmann
# This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
# it and/or modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation and included in this library; either version 3 of the
# License, or any later version. */

# EXAMPLES:
# Bicliques> ./GraphGen clique 3 | ./Graph2Matrix | ./BCCbyIP matrix
# Bicliques> ./GraphGen clique 3 | ./BCCbyIP adjacency
# Input format: adjacency
# Executing Graph2Matrix...
# Saving matrix in a temporary file...
# Executing nonnegrank...
# Read 3x3 matrix with 6 nonzeros and 0 fooling pairs.
# Computing <rectangle covering> bound using maximal rectangles.
#   Enumerating maximal rectangles. Computed 6 rectangles (time: 0s)
#
#   Initialized IP with 6 variables and 6 constraints.
# done.
# Statistics:
#   Fooling pairs: 0
#   Maximal rectangles: 6 (time: 0s)
# Lower bound <rectangle covering>: 3 (time: 0.013s)
# Set parameter Threads to value 1
# Gurobi Optimizer version 10.0.1 build v10.0.1rc0 (linux64)
#
# CPU model: 11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz, instruction set [SSE2|AVX|AVX2|AVX512]
# Thread count: 4 physical cores, 8 logical processors, using up to 1 threads
#
# Academic license - for non-commercial use only - registered to niyozbek.obidov@swansea.ac.uk
# Optimize a model with 6 rows, 6 columns and 12 nonzeros
# Model fingerprint: 0xa556b025
# Variable types: 0 continuous, 6 integer (0 binary)
# Coefficient statistics:
#   Matrix range     [1e+00, 1e+00]
#   Objective range  [1e+00, 1e+00]
#   Bounds range     [1e+00, 1e+00]
#   RHS range        [1e+00, 1e+00]
# Found heuristic solution: objective 3.0000000
# Presolve time: 0.00s
# Presolved: 6 rows, 6 columns, 12 nonzeros
# Variable types: 0 continuous, 6 integer (6 binary)
#
# Root relaxation: cutoff, 5 iterations, 0.00 seconds (0.00 work units)
#
#     Nodes    |    Current Node    |     Objective Bounds      |     Work
#  Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time
#
#      0     0     cutoff    0         3.00000    3.00000  0.00%     -    0s
#
# Explored 1 nodes (5 simplex iterations) in 0.00 seconds (0.00 work units)
# Thread count was 1 (of 8 available processors)
#
# Solution count 1: 3
#
# Optimal solution found (tolerance 1.00e-04)
# Best objective 3.000000000000e+00, best bound 3.000000000000e+00, gap 0.0000%

set -o errexit
set -o nounset

program="BCCbyIP"
errorm="ERROR[${program}]:"
version="0.1.0"

if [[ $# != 1 ]]; then
  echo -e "ERROR[${program}]: Exactly one parameter is needed:
  The format can be passed as adjacency or matrix"
  exit 1
fi

if ! [[ $1 == adjacency || $1 == matrix ]]; then
  echo $errorm "Argument \"$1\" not correct."
  exit 1
fi

format="$1"

: ${graphtomatrixprog:=./Graph2Matrix}
: ${ipprog:=~/nonnegrank/build/src/nonnegrank}

input=$(</dev/stdin)
matrix=""

if [[ $format == matrix ]]; then
  matrix=$input
else
  if [[ $format == adjacency ]]; then
    matrix="$(echo "$input" | $graphtomatrixprog)"
  fi
fi

echo "$matrix" > temp.mat

echo "$($ipprog temp.mat rc)"

rm temp.mat

