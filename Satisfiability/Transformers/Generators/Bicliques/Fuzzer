#!/usr/bin/env bash
# Oliver Kullmann, 23.10.2019 (Swansea)
# Copyright 2019, 2023 Oliver Kullmann
# This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
# it and/or modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation and included in this library; either version 3 of the
# License, or any later version. */

# Fuzzing GSM

# USAGE:

# Return code 130 when interrupted by SIGINT or SIGUSR1.

# EXAMPLE:

# ./Fuzzer "a10 10" "10*2,4" "" t

# See plans/general.txt for examples.


set -o errexit
set -o nounset

program="Fuzzer"
version="0.2.1"

: ${command1:="./GSM_debug"}
: ${argument1:=}
: ${argument2:=}
: ${command2:="./GCGeq_debug"}
: ${generator:="QBRG"}

fuzzdir="Fuzzing"
mkdir -p ${fuzzdir}

echo "${program}, PID=$$, directory ${fuzzdir}:"
echo "arguments= $*"
echo "argument1= ${argument1}"
echo "argument2= ${argument2}"

genfile=${fuzzdir}/Generated_$$
rep1file=${fuzzdir}/Replaced1_$$
rep2file=${fuzzdir}/Replaced2_$$
rep3file=${fuzzdir}/Replaced3_$$
rep4file=${fuzzdir}/Replaced4_$$
rep5file=${fuzzdir}/Replaced5_$$
rep6file=${fuzzdir}/Replaced6_$$
outfile=${fuzzdir}/Output_$$

counter=0

handler() {
  echo "Aborting ${program}, PID=$$: no errors observed. ${counter} runs, wallclock = $SECONDS s."
  children="$(pgrep -P $$)"
  pkill --signal SIGKILL --parent $$ true
  for childid in ${children}; do
    pkill --signal SIGKILL --parent ${childid} true
    rm -f SystemCalls_Popen_err_*_${childid}
    rm -f SystemCalls_Popen_out_*_${childid}
  done
  rm -f ${genfile} ${rep1file} ${rep2file} ${rep3file} ${rep4file} ${rep5file} ${rep6file} ${outfile}
  kill -SIGINT $$
}

trap handler SIGINT SIGUSR1

while [ 0 ]; do

  ${generator} "$@" -${genfile}

  cat ${genfile} | ${command1} "down,${argument1}" "${argument2}" "" "" > ${rep1file} &
  cat ${genfile} | ${command1} "up,${argument1}" "${argument2}" "" "" > ${rep2file} &
  cat ${genfile} | ${command1} "binsearch,${argument1}" "${argument2}" "" "" > ${rep3file} &
  cat ${genfile} | ${command1} "down,-ssb,${argument1}" "${argument2}" "" "" > ${rep4file} &
  cat ${genfile} | ${command1} "up,-ssb,${argument1}" "${argument2}" "" "" > ${rep5file} &
  cat ${genfile} | ${command1} "binsearch,-ssb,${argument1}" "${argument2}" "" "" > ${rep6file} &
  wait

  cat ${genfile} ${rep1file} ${rep2file} ${rep3file} ${rep4file} ${rep5file} ${rep6file} | ${command2} "+7" > ${outfile}

  rm ${genfile} ${rep1file} ${rep2file} ${rep3file} ${rep4file} ${rep5file} ${rep6file} ${outfile}

  ((++counter)); printf "\r%d" ${counter}

done
