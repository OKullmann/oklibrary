#!/bin/bash
# Matthew Gwynne, 24.10.2010 (Swansea)
# Copyright 2010 Oliver Kullmann
# This file is part of the OKlibrary. OKlibrary is free software; you can redistribute 
# it and/or modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation and included in this library; either version 3 of the 
# License, or any later version.

# "CNF2WeightedMaxSATOptimVars" computes the DIMACS weighted MaxSAT 
# clause-set, on STDOUT, such that the maximum weighting of satisfied 
# clauses in the output is achieved when the minimum number of variables are 
# set to 1 and the original problem is satisfied. 
#
# This is achieved by adding unit clauses for each variable from STDIN (in the 
# lexicographical order) which are weighted 1, and weighting all original
# clauses numvars+1 (ensuring it is never profitable to falsify an original
# clause from STDIN over new clauses).
# 
# The standard weight MaxSAT DIMACS files (see 
# http://www.maxsat.udl.cat/08/index.php?disp=requirements) have the same
# format as a standard DIMACS CNF file, except the parameter line states
# "wcnf" rather than "cnf", and the beginning of each clause (before any 
# literals) is the non-negative integer weight of the clause (between 1 and 
# 2^31).

script_name="CNF2WeightedMaxSATOptimVars"

if [[ $# != 0 ]]; then
  echo "ERROR[${script_name}]:
  No parameters are necessary.
  A DIMACS CNF is taken on STDIN and a DIMACS weighted MaxSAT
  CNF is output on STDOUT, such that the assignments which
  satisfy the weighted MaxSAT CNF with maximum weight are
  those that satisfy the input CNF with the minimal number
  of variables set to 1 (true)."
  exit 1
fi

# The number of variables etc are initially unknown and set
# when we find the p-line.
num_vars=''
num_clauses=''
num_weighted_clauses=''
hard_weight=''

last_line_was_zero=1 # Check whether we have finished a clause
# Add weights to original clauses
while read line; do 
  # Beginning of clause
  if [[ (${last_line_was_zero} == "1") && 
	(`echo "${line}" | grep -v '^\(p\|c\)'` != '') ]]; then
    # Clause
    echo ${hard_weight} "${line}"
  else 
    # P Line
    if [[ `echo "${line}" | grep "^p"` != '' ]]; then
      num_vars=`echo "${line}" | awk '{ print $3 }'`
      num_clauses=`echo "${line}" | awk '{ print $4 }'`
      num_weighted_clauses=`expr ${num_clauses} + ${num_vars}`
      hard_weight=`expr ${num_vars} + 1`
      echo p wcnf ${num_vars} ${num_weighted_clauses}
    else
      # Comment line or continuation of clause
      # Check we have a p-line
      echo ${line}
    fi
  fi
  # Work out whether this line closed the clause
  if [[ `echo "${line}" | grep " +0 *$"` != '' ]]; then
    last_line_was_zero=0
  else
    last_line_was_zero=1
  fi
done

# Print new minimisation clauses
for i in `seq 1 ${num_vars}`; do
  echo 1 $i 0
done
