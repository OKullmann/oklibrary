A) testN6


> LSRG 6,2 "-co" "1*0,0,12;1*0,0,0" 1628808251117432880,1628808263227713690,0,0 | python symmetry-breaking-pair.py | Euler 0 0 la,val
N k m1 m2 brt brsrc brm brsol bregr brpr prp t sat nds inds inds2 inds3 lvs ulvs sol 1chld chcs taus sbps chct taut sbpt ptime prog vers
6 2 12 6 la val mu0 one eager prun dom 1.9386 0 575 188 81 16 387 387 0 677 575 10919 84121 1.9242 0.0440 0.2643 0.0002 Euler 0.9.10

There are 387 leaves if mu0 is used.


i) Optimizing the number of leaves, with weigth 0 for domain-size 1

OLD:
MOLS> cat data/Weights/N6/testN6 | time ./Euler 0 0 val "" dom "1,100,100,100"
N k m1 m2 brt brsrc brsol bregr brpr bro prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime prog vers
6 2 12 6 la val one eager prun given dom 0.4667 0 132 54 0 37 11 78 78 0 149 132 2230 30844 0.4645 0.0101 0.0765 0.0001 Euler 0.14.0
0.47user 0.02system 0:00.50elapsed 100%CPU (0avgtext+0avgdata 6840maxresident)k
0inputs+0outputs (0major+337minor)pagefaults 0swaps
NEW:
> cat data/Weights/N6/inst/0 | time ./Euler 0 0 "" "" "" "0,1,100,100,100"
N k m1 m2 brt brsrc brsol bregr brpr bro out prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime wghts prog vers
6 2 12 6 la val one eager prun given noout dom 0.4658 0 132 54 0 37 11 78 78 0 132 132 2230 30521 0.4639 0.0099 0.0765 0.0001 0.0000,1.0000,100.0000,100.0000,100.0000 Euler 0.17.0
0.46user 0.01system 0:00.48elapsed 99%CPU (0avgtext+0avgdata 7056maxresident)k
0inputs+0outputs (0major+344minor)pagefaults 0swaps


OLD:
MOLS> cat ./data/weights/testN6 | time ./Euler_BBOpt 10 2 3 1 data/weights/Para2 val dom
(12.5047,104.99320000000000001,99.999999999999999993,500.05000000000000002),77
real	3m10.894s
user	3m2.009s
sys	0m8.829s

OLD:
MOLS> cat data/Weights/N6/testN6 | time ./Euler 0 0 val "" dom "12.5047,104.99320000000000001,99.999999999999999993,500.05000000000000002"
N k m1 m2 brt brsrc brsol bregr brpr bro prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime prog vers
6 2 12 6 la val one eager prun given dom 0.4742 0 131 54 0 38 10 77 77 0 147 131 2229 31085 0.4720 0.0098 0.0786 0.0000 Euler 0.14.0
0.47user 0.02system 0:00.49elapsed 100%CPU (0avgtext+0avgdata 6700maxresident)k
0inputs+0outputs (0major+329minor)pagefaults 0swaps
NEW:
MOLS> cat data/Weights/N6/inst/0 | time ./Euler 0 0 "" "" "" "0,12.5047,104.99320000000000001,99.999999999999999993,500.05000000000000002"
N k m1 m2 brt brsrc brsol bregr brpr bro out prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime wghts prog vers
6 2 12 6 la val one eager prun given noout dom 0.4841 0 131 54 0 38 10 77 77 0 130 131 2229 30762 0.4821 0.0094 0.0799 0.0001 0.0000,12.5047,104.9932,100.0000,500.0500 Euler 0.17.0
0.49user 0.00system 0:00.49elapsed 100%CPU (0avgtext+0avgdata 7040maxresident)k
0inputs+0outputs (0major+343minor)pagefaults 0swaps


OLD:
MOLS> cat data/Weights/N6/testN6 | time ./Euler 0 0 val "" dom "0.1,300,300,150.05000000000000000278"
N k m1 m2 brt brsrc brsol bregr brpr bro prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime prog vers
6 2 12 6 la val one eager prun given dom 0.4756 0 131 53 0 35 12 78 78 0 149 131 2202 30686 0.4732 0.0096 0.0783 0.0001 Euler 0.14.0
0.47user 0.02system 0:00.50elapsed 99%CPU (0avgtext+0avgdata 6724maxresident)k
0inputs+0outputs (0major+332minor)pagefaults 0swaps
NEW:
MOLS> cat data/Weights/N6/inst/0 | time ./Euler 0 0 "" "" "" "0,0.1,300,300,150.05000000000000000278"
N k m1 m2 brt brsrc brsol bregr brpr bro out prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime wghts prog vers
6 2 12 6 la val one eager prun given noout dom 0.4704 0 131 53 0 35 12 78 78 0 135 131 2202 30484 0.4686 0.0101 0.0777 0.0000 0.0000,0.1000,300.0000,300.0000,150.0500 Euler 0.17.0
0.47user 0.02system 0:00.49elapsed 99%CPU (0avgtext+0avgdata 6968maxresident)k
0inputs+0outputs (0major+344minor)pagefaults 0swaps



ii) Optimizing the number of leaves.

Version 0.6.0 of Euler_BBOpt:

MOLS> cat ./data/Weights/N6/inst/0 | time ./Euler_BBOpt 4 1 1 1 ./data/Weights/N6/ParaN6 "" val dom
(0.94999999999999999999,1.00000000000000000000,75.25000000000000000000,75.25000000000000000000,50.50000000000000000000),78.00000000000000000000
23.28user 0.98system 0:24.33elapsed 99%CPU (0avgtext+0avgdata 6924maxresident)k
0inputs+0outputs (0major+883minor)pagefaults 0swaps


Version 0.6.1 of Euler_BBOpt (log-scaling):

MOLS> cat ./data/Weights/N6/testN6 | time ./Euler_BBOpt 4 1 1 1 ./data/Weights/N6/ParaN6 "" val dom
(-1.00000000000000000000,1.00000000000000000000,100.00000000000000000000,100.00000000000000000000,75.25000000000000000000),78.00000000000000000000
16.43user 0.62system 0:17.16elapsed 99%CPU (0avgtext+0avgdata 6828maxresident)k
0inputs+0outputs (0major+842minor)pagefaults 0swaps

MOLS$ cat ./data/Weights/N6/testN6 | time ./Euler_BBOpt 10 2 3 6 ./data/Weights/N6/ParaN6 "" val dom

(-0.39999999999999999998,14.26060000000000000005,72.77499999999999999445,65.34999999999999999861,60.39999999999999999445),77.00000000000000000000
187.33user 10.61system 0:42.61elapsed 464%CPU (0avgtext+0avgdata 10628maxresident)k
0inputs+0outputs (0major+2398minor)pagefaults 0swaps


These results are likely mostly meaningless, since with many parameter values
one seems to be able to reach that number of leaves.



iii) Optimising the number of prop-calls, with w1=0:

MOLS$ cat ./data/Weights/N6/testN6 | time ./Euler_BBOpt 1 1 1 1 ./data/Weights/N6/ParaN6_best "" val dom laprp
(0.10000000000000000000,0.01000000000000000000,150.00000000000000000000,0.10000000000000000000),30592.00000000000000000000
10.42user 0.44system 0:10.96elapsed 99%CPU (0avgtext+0avgdata 6856maxresident)k
0inputs+0outputs (0major+473minor)pagefaults 0swaps

MOLS> cat data/Weights/N6/testN6 | time ./Euler 0 0 val "" dom "0.1,0.01,150,0.1"
N k m1 m2 brt brsrc brsol bregr brpr bro prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime prog vers
6 2 12 6 la val one eager prun given dom 0.4536 0 172 71 0 55 3 101 101 0 223 172 2672 30592 0.4503 0.0098 0.0766 0.0001 Euler 0.14.0
0.45user 0.03system 0:00.49elapsed 99%CPU (0avgtext+0avgdata 6864maxresident)k
0inputs+0outputs (0major+328minor)pagefaults 0swaps


OLD:
MOLS> cat ./data/Weights/N6/testN6 | time ./Euler_BBOpt 10 2 10 12 ./data/Weights/N6/ParaN6_scan_test4 "0" val dom laprp
(27.82670505833997251326,85.30125996635118659772,78.71256127033811311050,63.64432398929486596126),30211.00000000000000000000
100421.17user 7812.91system 2:41:49elapsed 1114%CPU (0avgtext+0avgdata 14956maxresident)k
0inputs+0outputs (0major+174210minor)pagefaults 0swaps

OLD:
MOLS> cat data/Weights/N6/testN6 | time ./Euler 0 0 val "" dom "27.82670505833997251326,85.30125996635118659772,78.71256127033811311050,63.64432398929486596126"
N k m1 m2 brt brsrc brsol bregr brpr bro prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime prog vers
6 2 12 6 la val one eager prun given dom 0.4506 0 135 56 0 40 10 79 79 0 149 135 2317 30211 0.4483 0.0098 0.0744 0.0001 Euler 0.14.0
0.45user 0.02system 0:00.48elapsed 100%CPU (0avgtext+0avgdata 6736maxresident)k
0inputs+0outputs (0major+329minor)pagefaults 0swaps
NEW:
MOLS> cat data/Weights/N6/inst/0 | time ./Euler 0 0 "" "" "" "0,27.82670505833997251326,85.30125996635118659772,78.71256127033811311050,63.64432398929486596126"
N k m1 m2 brt brsrc brsol bregr brpr bro out prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime wghts prog vers
6 2 12 6 la val one eager prun given noout dom 0.9857 0 135 56 0 40 10 79 79 0 125 135 2317 30030 0.9815 0.0170 0.1703 0.0000 0.0000,27.8267,85.3013,78.7126,63.6443 Euler 0.17.0



B) testN6_2


Exploration:

MOLS> cat data/Weights/testN6_2 | time ./Euler_BBOpt 10 1 1 1 data/Weights/ParaN6_scan val dom
(120.05999999999999999778,0.10000000000000000000,150.05000000000000000278,150.05000000000000000278),2832.00000000000000000000
15315.78user 791.42system 4:28:28elapsed 99%CPU (0avgtext+0avgdata 6208maxresident)k
0inputs+0outputs (0major+6407minor)pagefaults 0swaps
Recomputation with newer version yields same result:
MOLS> cat data/Weights/testN6_2 | time ./Euler_BBOpt 10 1 1 1 data/Weights/ParaN6_scan val dom
(120.05999999999999999778,0.10000000000000000000,150.05000000000000000278,150.05000000000000000278),2832.00000000000000000000
15179.13user 777.05system 4:25:57elapsed 99%CPU (0avgtext+0avgdata 6156maxresident)k
0inputs+0outputs (0major+542minor)pagefaults 0swaps

Rerunning with parallel version:
MOLS> cat data/Weights/testN6_2 | time ./Euler_BBOpt 10 1 1 9 data/Weights/ParaN6_scan val dom
(120.05999999999999999778,0.10000000000000000000,150.05000000000000000278,150.05000000000000000278),2832.00000000000000000000
88327.98user 102087.49system 6:30:00elapsed 813%CPU (0avgtext+0avgdata 12016maxresident)k
0inputs+0outputs (0major+6394minor)pagefaults 0swaps

Something is wrong here! The system-time seems to destroy performance.


MOLS> cat data/Weights/testN6_2 | time ./Euler_BBOpt 20 2 8 1 ./data/Weights/ParaN6_best val dom
(116.25124999999999999417,0.08010841796875000001,150.00000000000000000000,150.00000000000000000000),2832.00000000000000000000
16977.19user 847.79system 4:57:06elapsed 99%CPU (0avgtext+0avgdata 6248maxresident)k
0inputs+0outputs (0major+22749minor)pagefaults 0swaps

No further improvement.


Current best weights and number of leaves :


Set 1, obtained for testN6_2:

   116.25124999999999999417,
   0.08010841796875000001,
   150,
   150,

   2832

MOLS> cat ./data/Weights/testN6_2 | ./Euler 0 0 val "" dom 116.25124999999999999417,0.08010841796875000001,150,150
N k m1 m2 brt brsrc brsol bregr brpr prp t sat nds inds inds2 inds3 lvs ulvs sol 1chld chcs taus sbps chct taut sbpt ptime prog vers
6 2 11 6 la val one eager prun dom 13.4069 0 5085 2253 1940 48 2832 2832 0 7674 5085 102989 1014664 13.3241 0.4664 2.5880 0.0000 Euler 0.12.2


For comparison:

MOLS> cat ./data/Weights/testN6_2 | ./Euler 0 0 mindr,val "" dom 116.25124999999999999417,0.08010841796875000001,150,150
N k m1 m2 brt brsrc brsol bregr brpr prp t sat nds inds inds2 inds3 lvs ulvs sol 1chld chcs taus sbps chct taut sbpt ptime prog vers
6 2 11 6 mindr val one eager prun dom 53.2956 0 56347 18715 9208 98 37632 37632 0 57311 56347 0 3907369 52.4977 0.0000 8.9059 0.0001 Euler 0.12.2

MOLS> cat ./data/Weights/testN6_2 | ./Euler 0 0 mind,val "" dom 116.25124999999999999417,0.08010841796875000001,150,150

N k m1 m2 brt brsrc brsol bregr brpr prp t sat nds inds inds2 inds3 lvs ulvs sol 1chld chcs taus sbps chct taut sbpt ptime prog vers
6 2 11 6 mind val one eager prun dom 14.2110 0 1187407 560917 504754 46754 626490 626490 0 0 560917 0 0 0.3803 0.0000 0.0000 0.0001 Euler 0.12.2


Applying new scanning:

MOLS> cat data/Weights/N6/testN6_2 | time ./Euler_BBOpt 5 1 5 12 data/Weights/N6/ParaN6_scan_test4 "0" val dom
(320.95448800380677548127,14.56378204515560714858,40.82786716403984473081,246.95389946175163202458),2784.00000000000000000000
373341.47user 31352.72system 9:55:22elapsed 1132%CPU (0avgtext+0avgdata 13196maxresident)k
0inputs+0outputs (0major+47058minor)pagefaults 0swaps

MOLS> cat data/Weights/N6/testN6_2 | time ./Euler 0 0 val "" dom "320.95448800380677548127,14.56378204515560714858,40.82786716403984473081,246.95389946175163202458"
N k m1 m2 brt brsrc brsol bregr brpr bro prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime prog vers
6 2 11 6 la val one eager prun given dom 14.1512 0 5253 2469 0 2268 88 2784 2784 0 4524 5253 112785 1042576 14.0711 0.5439 2.6252 0.0001 Euler 0.14.0
14.15user 0.66system 0:14.81elapsed 100%CPU (0avgtext+0avgdata 6888maxresident)k
0inputs+0outputs (0major+358minor)pagefaults 0swaps

Better, and very different; let's see what further optimisation yields:

MOLS> cat data/Weights/N6/testN6_2 | time ./Euler_BBOpt 11 1 10 12 data/Weights/N6/ParaN6_best2 "0" val dom
(315.67967700828913518718,14.36698712706172550903,39.43588020440618851711,245.58472255093371870716),2784.00000000000000000000
15159.79user 1278.78system 23:30.84elapsed 1165%CPU (0avgtext+0avgdata 12472maxresident)k
0inputs+0outputs (0major+35632minor)pagefaults 0swaps

MOLS> cat data/Weights/N6/testN6_2 | time ./Euler 0 0 val "" dom "315.67967700828913518718,14.36698712706172550903,39.43588020440618851711,245.58472255093371870716"
N k m1 m2 brt brsrc brsol bregr brpr bro prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime prog vers
6 2 11 6 la val one eager prun given dom 14.4082 0 5253 2469 0 2268 88 2784 2784 0 4696 5253 112785 1051754 14.3288 0.5494 2.6518 0.0000 Euler 0.14.0
14.40user 0.68system 0:15.09elapsed 100%CPU (0avgtext+0avgdata 6880maxresident)k
0inputs+0outputs (0major+350minor)pagefaults 0swaps

No improvement.


Optimising the number of prop-calls:

MOLS> cat data/Weights/N6/testN6_2 | time ./Euler_BBOpt 5 1 5 12 data/Weights/N6/ParaN6_scan_test4 "0" val dom laprp
(73.56376899535322097523,0.76840876397086916411,191.33683173355793126491,230.74853411715196692400),836499.00000000000000000000
365346.60user 31434.52system 9:47:23elapsed 1125%CPU (0avgtext+0avgdata 13364maxresident)k
0inputs+0outputs (0major+40173minor)pagefaults 0swaps

MOLS> cat data/Weights/N6/testN6_2 | time ./Euler 0 0 val "" dom "73.56376899535322097523,0.76840876397086916411,191.33683173355793126491,230.748534117151966924"
N k m1 m2 brt brsrc brsol bregr brpr bro prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime prog vers
6 2 11 6 la val one eager prun given dom 11.1773 0 4973 2033 0 1512 136 2940 2940 0 5023 4973 87573 836499 11.0908 0.3739 2.1081 0.0001 Euler 0.14.0
11.18user 0.51system 0:11.69elapsed 100%CPU (0avgtext+0avgdata 6952maxresident)k
0inputs+0outputs (0major+349minor)pagefaults 0swaps

Further optimisation:

MOLS> cat data/Weights/N6/testN6_2 | time ./Euler_BBOpt +11 1 10 12 data/Weights/N6/ParaN6_best3 "0" val dom laprp
(74.25331873050731212871,0.78190477050284845975,191.33683173355793126491,249.13752429538556674993),836467.00000000000000000000
12429.93user 1050.60system 20:35.72elapsed 1090%CPU (0avgtext+0avgdata 11824maxresident)k
0inputs+0outputs (0major+33168minor)pagefaults 0swaps

Not much of a difference.



Binary branching:

MOLS> cat data/Weights/testN6_2 | time ./Euler_BBOpt 10 1 1 1 data/Weights/ParaN6_scan eq dom
(270.01000000000000000888,180.03999999999999999389,120.05999999999999999778,150.05000000000000000278),3077.00000000000000000000
34094.40user 2205.49system 10:05:25elapsed 99%CPU (0avgtext+0avgdata 6692maxresident)k
0inputs+0outputs (0major+3525minor)pagefaults 0swaps

MOLS> cat data/Weights/testN6_2 | time ./Euler 0 0 eq "" dom 270.01000000000000000888,180.03999999999999999389,120.05999999999999999778,150.05000000000000000278
N k m1 m2 brt brsrc brsol bregr brpr prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime prog vers
6 2 11 6 la eq one eager prun dom 22.1117 0 6153 3076 0 3076 0 3077 3077 0 5617 6153 508903 1876612 22.0261 1.4156 4.8196 0.0000 Euler 0.13.2
22.11user 1.34system 0:23.45elapsed 99%CPU (0avgtext+0avgdata 6800maxresident)k
0inputs+0outputs (0major+382minor)pagefaults 0swaps

Leaf-count similar to value-branching, but the weights seem very different.

Refining:
MOLS> cat data/Weights/testN6_2 | time ./Euler_BBOpt 10 1 8 1 data/Weights/ParaN6_eq_1 "" eq dom
(264.61937500000000000888,181.13374999999999999389,111.07562499999999999778,180.00000000000000000000),2957.00000000000000000000
6970.33user 445.13system 2:03:35elapsed 99%CPU (0avgtext+0avgdata 7272maxresident)k
0inputs+0outputs (0major+6153minor)pagefaults 0swaps

MOLS> cat data/Weights/testN6_2 | time ./Euler 0 0 eq "" dom 264.61937500000000000888,181.13374999999999999389,111.07562499999999999778,180.00000000000000000000
N k m1 m2 brt brsrc brsol bregr brpr prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime prog vers
6 2 11 6 la eq one eager prun dom 21.0698 0 5913 2956 0 2956 0 2957 2957 0 5520 5913 482689 1809114 20.9891 1.3349 4.6438 0.0001 Euler 0.13.2
21.07user 1.33system 0:22.40elapsed 99%CPU (0avgtext+0avgdata 6616maxresident)k
0inputs+0outputs (0major+379minor)pagefaults 0swaps

Small refinement.

Optimising for number of p-calls:

MOLS> cat data/Weights/testN6_2 | time ./Euler_BBOpt 10 1 8 1 data/Weights/ParaN6_eq_1 "" eq dom  laprp
(344.92187500000000000000,181.91499999999999999389,98.82812500000000000000,180.00000000000000000000),1810825.00000000000000000000
7373.48user 479.89system 2:10:54elapsed 99%CPU (0avgtext+0avgdata 7304maxresident)k
0inputs+0outputs (0major+7753minor)pagefaults 0swaps

MOLS> cat data/Weights/testN6_2 | time ./Euler 0 0 eq "" dom 344.921875,181.91499999999999999389,98.828125,180
N k m1 m2 brt brsrc brsol bregr brpr prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime prog vers
6 2 11 6 la eq one eager prun dom 21.6632 0 6245 3122 0 3122 0 3123 3123 0 5723 6245 488625 1810825 21.5753 1.3792 4.7385 0.0002 Euler 0.13.2
21.66user 1.36system 0:23.02elapsed 100%CPU (0avgtext+0avgdata 6860maxresident)k
0inputs+0outputs (0major+388minor)pagefaults 0swaps

Not much of a difference.


The number of leaves is similar to value-branching, but the number of p-calls
is significantly higher, and accordingly the run-time.
So perhaps just the internal organisation is less efficient for binary
branching.
