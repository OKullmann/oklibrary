# Oleg Zaikin, 10.1.2022 (Swansea)

A)

Order 6.
The instance ./OKlib-MOLS/Satisfiability/Solvers/Gecode/MOLS/data/Weights/testN6_2 was used for otpimisation
(no givens, only symmetry breaking is applied to both squares).

Value branching:

okserver
Wall timeout 1 hour.

End of log:

Number of finished generations: 150
Last winner genome Id: 2410
Last winner objective: 18.57785
Last winner genome: {"w1": 86.25729616872681, "w2": 6.451472797210517, "w3": 295.6748815408528, "w4": 255.0200966781085}
Last winner command:
/usr/bin/sh ./examples/Euler_N6/wrapper.sh <instance> <cutoff> <seed> 86.25729616872681 6.451472797210517 295.6748815408528 255.0200966781085

So the best found weights are
  86.25729616872681,6.451472797210517,295.6748815408528,255.0200966781085

$MOLS/data/Weights> cat testN6_2 | Euler 0 0 la,val -sol dom 86.25729616872681,6.451472797210517,295.6748815408528,255.0200966781085
N k m1 m2 brt brsrc brsol bregr brpr prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime prog vers
6 2 11 6 la val one eager prun dom 18.7047 0 5545 2341 0 1792 236 3204 3204 0 6347 5545 90089 858858 18.5550 0.4654 3.0613 0.0002 Euler 0.13.0

For comparison, on Set1 found by Euler_BBOpt:

MOLS/data/Weights> cat testN6_2 | Euler 0 0 la,val -sol dom 116.25124999999999999417,0.08010841796875000001,150.00000000000000000000,150.00000000000000000000
N k m1 m2 brt brsrc brsol bregr brpr prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime prog vers
6 2 11 6 la val one eager prun dom 23.4691 0 5085 2253 0 1940 48 2832 2832 0 4842 5085 102989 1014664 23.3253 0.6413 3.6410 0.0000 Euler 0.13.0

On the PyDGGA-weights, the runtime is better (18.7 vs 23.5 seconds), while on the Euler_BBOpt-weights
the number of leaves is lower (2832 vs 3204)

Binary branching:

okserver
Wall timeout 1 hour.

Number of finished generations: 90
Last winner genome Id: 186
Last winner objective: 35.34049
Last winner genome: {"w1": 175.28277076334498, "w2": 92.52275518117129, "w3": 87.36298680535492, "w4": 104.22268040135963}
Last winner command:
/usr/bin/sh ./examples/Euler_N6_eq/wrapper.sh <instance> <cutoff> <seed> 175.28277076334498 92.52275518117129 87.36298680535492 104.22268040135963

So the best found weights are
  175.28277076334498,92.52275518117129,87.36298680535492,104.22268040135963

MOLS/data/Weights> cat testN6_2 | Euler 0 0 la,eq -sol dom 175.28277076334498,92.52275518117129,87.36298680535492,104.22268040135963
N k m1 m2 brt brsrc brsol bregr brpr prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime prog vers
6 2 11 6 la eq one eager prun dom 35.7785 0 6189 3094 0 3094 0 3095 3095 0 5731 6189 492644 1815566 35.6372 1.8284 6.3252 0.0004 Euler 0.13.1

For comparison, on the weights found by Euler_BBOpt:

MOLS/data/Weights> cat testN6_2 | Euler 0 0 la,eq -sol dom 270.01000000000000000888,180.03999999999999999389,120.05999999999999999778,150.05000000000000000278
N k m1 m2 brt brsrc brsol bregr brpr prp t sat nds inds inds1 inds2 inds3 lvs ulvs sol rdc1 chcs taus sbps chct taut sbpt ptime prog vers
6 2 11 6 la eq one eager prun dom 37.1449 0 6153 3076 0 3076 0 3077 3077 0 5617 6153 508903 1876612 37.0018 1.9015 6.5038 0.0004 Euler 0.13.1

Again, the runtime on PyDGGA-weights is better (35.7785 vs 37.1449 seconds), but the number of leaves is worse
(3095 vs 3077). However, here the difference is very small compared to the value-branching.


B) Order 7

Value-branching

okserver


i) Optimising N-2 weights.

Wall timeout was 12 hours, but PyDGGA finished after 1 hour 5 minutes.

Number of finished generations: 150
Last winner genome Id: 135
Last winner objective: 6.82029
Last winner genome: {"w1": 253.82671755369242, "w2": 234.48046614233334, "w3": 164.51980118788464, "w4": 162.3268996024532, "w5": 240.15378335297032}
Last winner command:
/usr/bin/sh ./examples/Euler_N7/wrapper.sh <instance> <cutoff> <seed> 253.82671755369242 234.48046614233334 164.51980118788464 162.3268996024532 240.15378335297032

So the best found weights are:

253.82671755369242,
234.48046614233334,
164.51980118788464,
162.3268996024532,
240.15378335297032


ii) Optimising N-1 weights.

program name:       Euler
 version:           0.17.0
 last change:       15.3.2022
 git-id:            7cd31b858729d416374956f62d2fc98aa1af16e8
machine name:       cs-kullmann-server.swan.ac.uk
 bogomips:          5400
compiler version:   g++ 10.2.0

Number of finished generations: 150
Last winner genome Id: 2746
Last winner objective: 4.1158025
Last winner genome: {"w1": 0.44474780363300065, "w2": 127.05572394647109, "w3": 286.4775201988955, "w4": 75.55151466191789, "w5": 35.557763074397364, "w6": 186.4888248385148}
Last winner command:
/usr/bin/sh ./examples/Euler_N7_val_addweight/wrapper.sh <instance> <cutoff> <seed> 0.44474780363300065 127.05572394647109 286.4775201988955 75.55151466191789 35.557763074397364 186.4888248385148

So the best weights are:

0.44474780363300065
127.05572394647109
286.4775201988955
75.55151466191789
35.557763074397364
186.4888248385148

Comments:
1. Compared to the N-2 weights optimisation, now the best runtime is 4.12
vs 6.82 seconds, so it improved by about 40 %.
2. The best w1 is 0.44, while a much closer to 0 value was expected.
3. Compared to the N-2 weights optimisation, all found weights are different.


Binary-branching

okserver


i) Optimising N-2 weights.

Wall timeout was 12 hours, but PyDGGA finished after 2 hours 24 minutes.

Number of finished generations: 150
Last winner genome Id: 2412
Last winner objective: 10.870481999999999
Last winner genome: {"w1": 113.36897524623168, "w2": 25.104389571307273, "w3": 7.6168744208513335, "w4": 6.543970334699964, "w5": 244.15580467219542}
Last winner command:
/usr/bin/sh ./examples/Euler_N7_eq/wrapper.sh <instance> <cutoff> <seed> 113.36897524623168 25.104389571307273 7.6168744208513335 6.543970334699964 244.15580467219542

So the best found weights are:

113.36897524623168,
25.104389571307273,
7.6168744208513335,
6.543970334699964,
244.15580467219542


ii) Optimising N-1 weights.

program name:       Euler
 version:           0.17.0
 last change:       15.3.2022
 git-id:            7cd31b858729d416374956f62d2fc98aa1af16e8
machine name:       cs-kullmann-server.swan.ac.uk
 bogomips:          5400
compiler version:   g++ 10.2.0

Wall timeout was 12 hours, but PyDGGA finished after 2 hours 24 minutes.

Number of finished generations: 150
Last winner genome Id: 2507
Last winner objective: 13.7157615
Last winner genome: {"w1": -0.41084584916273126, "w2": 50.85001917513755, "w3": 25.104389571307273, "w4": 7.6168744208513335, "w5": 1.9320622742014248, "w6": 254.32311459103744}
Last winner command:
/usr/bin/sh ./examples/Euler_N7_eq_addweight/wrapper.sh <instance> <cutoff> <seed> -0.41084584916273126 50.85001917513755 25.104389571307273 7.6168744208513335 1.9320622742014248 254.32311459103744

So the best found weights are:

-0.41084584916273126
50.85001917513755
25.104389571307273
7.6168744208513335
1.9320622742014248
254.32311459103744

Comments:
1. Compared to the N-2 weights optimisation, now the best runtime is 13.72
vs 10.87 seconds, so it impared by about 26 %. Perhaps a longer experiment is
needed, e.g. with 1000 genetic algorithm generations instead of 150 ones.
2. The best w1 is -0.41, while a much closer to 0 value was expected.
3. Compared to the N-2 weights optimisation, w3, w4, and w6 have similar
values, while w2 and 25 are very different.


C) Order 8

Value branching

okserver

PyDGGA finished after 3 hours 18 minutes.

Number of finished generations: 150
Last winner genome Id: 1651
Last winner objective: 12.583090000000002
Last winner genome: {"w1": 75.54995031637289, "w2": 9.445110717809413, "w3": 6.982071616492492, "w4": 153.3134767691621, "w5": 128.7607733439955, "w6": 259.8767969620833}
Last winner command:
/usr/bin/sh ./examples/Euler_N8_7_val/wrapper.sh <instance> <cutoff> <seed> 75.54995031637289 9.445110717809413 6.982071616492492 153.3134767691621 128.7607733439955 259.8767969620833

So the best found weights are:
75.54995031637289,
9.445110717809413,
6.982071616492492,
153.3134767691621,
128.7607733439955,
259.8767969620833


Binary branching

okserver

i) Optimising N-2 weights.

Finished due to the timeout 4 hours.

[13-01-2022 16:03:51 - INFO] Triggering termination due to wall-clock time cutoff.
********************************************************************************
Number of finished generations: 102
Last winner genome Id: 1100
Last winner objective: 41.10834399999999
Last winner genome: {"w1": 298.36662057286696, "w2": 189.61898696734778, "w3": 24.200791004751945, "w4": 122.1809457690778, "w5": 168.37722924347517, "w6": 224.55359178593687}
Last winner command:
/usr/bin/sh ./examples/Euler_N8_7_eq/wrapper.sh <instance> <cutoff> <seed> 298.36662057286696 189.61898696734778 24.200791004751945 122.1809457690778 168.37722924347517 224.55359178593687

So the best found weights are:

298.36662057286696,
189.61898696734778,
24.200791004751945,
122.1809457690778,
168.37722924347517,
224.55359178593687


ii) Optimising N-1 weights.

program name:       Euler
 version:           0.17.0
 last change:       15.3.2022
 git-id:            7cd31b858729d416374956f62d2fc98aa1af16e8
machine name:       cs-kullmann-server.swan.ac.uk
 bogomips:          5400
compiler version:   g++ 10.2.0

Finished after 3 hours 25 minutes.

Number of finished generations: 150
Last winner genome Id: 2408
Last winner objective: 18.097376
Last winner genome: {"w1": 0.6600945527651553, "w2": 181.9249589924625, "w3": 161.75046593692275, "w4": 155.4076312912718, "w5": 154.95981101756217, "w6": 4.156540739813735, "w7": 44.24258317584835}
Last winner command:
/usr/bin/sh ./examples/Euler_N8_7_eq_addweight/wrapper.sh <instance> <cutoff> <seed> 0.6600945527651553 181.9249589924625 161.75046593692275 155.4076312912718 154.95981101756217 4.156540739813735 44.24258317584835

So the best found weights are:

0.6600945527651553
181.9249589924625
161.75046593692275
155.4076312912718
154.95981101756217
4.156540739813735
44.24258317584835

Comments:
1. Compared to the N-2 weights optimisation, now the best runtime is 18.1
vs 41.11 seconds, so the improvement is about 2.4x.
2. The best w1 is 0.66, while a much closer to 0 value was expected.
