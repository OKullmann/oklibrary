# Oleg Zaikin, 9.1.2022 (Swansea)
# Copyright 2022 Oliver Kullmann
# This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
# it and/or modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation and included in this library; either version 3 of the
# License, or any later version.

# Run Euler on all instances from a directory.

# Version 0.0.2

SHELL := /bin/bash
.SUFFIXES :
.PHONY : all run beginrun runjobs endrun transfer clean cleanall

MAKE_PID := $(shell echo $$PPID)
JOB_FLAG := $(filter -j%, $(subst -j ,-j,$(shell ps T | grep "^\s*$(MAKE_PID).*$(MAKE)")))
ifeq ($(JOB_FLAG),)
  JOBS := 1
else ifeq ($(JOB_FLAG),-j)
  JOBS := INF
else
  JOBS := $(subst -j,,$(JOB_FLAG))
endif

solver_call := SOLVERCALL
resultfile := SubinstanceStatistics

joblist := $(shell find ./Instances -type l -name "b*" -exec basename {} \;)
extjoblist := $(addprefix Results/,$(joblist))
jobnum := $(shell echo $(joblist) | wc -w)

all : run transfer
run : beginrun runjobs endrun

beginrun :
	echo -e "\nBegin run, PID=$(MAKE_PID)" >> Log
	@date -Ins >> Log
	echo "Parallel: j=$(JOBS)" >> Log
	mkdir -p Results

runjobs : | beginrun
runjobs : $(extjoblist)

endrun : | runjobs
endrun :
	@ps -o "%t" --pid $(MAKE_PID) | tee -a Log
	@echo "End run, PID=$(MAKE_PID)" >> Log
	@date -Ins >> Log

Results/% :
	@cat ./Instances/$* | $(solver_call) > $@; if [[  $$? != 0 && $$? != 124 ]]; then exit 1; fi

transfer : | run
	@Euler --header > $(resultfile)
	@for i in $(joblist); do cat Results/$$i >> $(resultfile); done

clean :
	- rm Results/*
	@echo -e "\nclean" >> Log
	@date -Ins >> Log

cleanall : clean
	- rm $(resultfile)
	@echo -e "cleanall" >> Log
	@rm *.out
