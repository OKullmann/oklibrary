# Counts for N >= 2:
# 0, 0, 2, 4, 0, 14832, 337928232, >= 1, >= 1
# >= 1, >= 1, >= 1, >= 1, >= 1, >= 1, ?, >= 1, >= 1, ?

# Known as "Sudoku X".
# Possibly (values-prop, max-deg/dom-var, desc) is best for counting:
# MOLS> ./gcMols 8 data/SpecsCollection/Sudokudiag "" count val maxdegdom "" ""
# values-prop max-deg/dom-var bin-branch-min 337928232 5921.383 28986888621 1003602967 2683062397 41
#
# Finding a single solution for N=36 seems challenging for value-prop,
# but not for domain-prop; for the latter N=81 seems challenging (while
# N=64 is solved for all four orders in 5 resp. 9 sec).
# Are all N >= 7 solvable? N=17 is challenging:
# MOLS> ./gcMols 17 data/SpecsCollection/Sudokudiag "" satd dom maxdegdom "" ""
# didn't succeed after 9 hours. Definitely an interesting benchmark.
# For sat-solving larger square-N perhaps the combination dom-prop+max-deg is best.
# Disabling "rred A" might help for sat-decision, but sometimes it is needed.
# Sometimes maxdom helps.

# On okserver, 16 threads:
# MOLS> ./gcMols 17 data/SpecsCollection/Sudokudiag "" satd dom maxdegdom "" 16
# Didn't succeed after 64 hours wall-clock, still running.

squares A
rred A
ls A
box A
diag A
antidiag A
