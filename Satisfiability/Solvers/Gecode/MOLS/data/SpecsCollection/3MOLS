# Counts for N >= 2:
# 0, 0, 2, 36, 0, >= 8

# gcMols:
# MOLS> time ./gcMols 7 data/SpecsCollection/3MOLS "" +count dom enu maxdegdom desc 1 12
# aborted after 8 min wallclock-time without finding a solution.


# QUESTION: what is the relation to 3MOLSinv (regarding solutions and solving-
# time)?


# rlaMols:
# MOLS> time ./rlaMols 7 data/SpecsCollection/3MOLS "" +count dom enu maxdegdom "" "" 1 12
# aborted after 90s wallclock-time (8 solutions found).
# As 3MOLSsymmb, this seems to be one of the rare case where plain rlaMols is better than gcMols.



# Comparison with laMols of version 0.2.1 (without pruning):
# MOLS$ ./laMols 6 data/SpecsCollection/3MOLS "" satd dom bineag "" 0,2,3,4,5 1
# domain-prop binary-eager bin-branch-min 0 751.327 5031484 17799 53396 23
# MOLS$ ./gcMols 6 data/SpecsCollection/3MOLS "" satd dom maxdegdom "" 1
# domain-prop max-deg/dom-var bin-branch-min 0 2.920 13948856 60113 120225 19
# On N=6, 17799 la-leaves vs 60113 gc-leaves.


squares A B C AB AC BC
ls A B C AB AC BC
red A
rred B C
rprod B AB A # thus A = AB^-1 B
rprod C AC A # thus A = AC^-1 C
rprod C BC B # AB^-1 B = AC^-1 C => BC = AC AB^-1

# Redundant condition:
# rprod BC   AC         c132 AB
