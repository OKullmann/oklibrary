C:      count achieved
CE:     count envisaged
U:      unsatisfiability achieved
UE:     unsatisfiability envisaged (known to be UNSAT)
S:      satisfiability achieved
SE:     satisfiability envisaged (known to be SAT)
?:      unknown


N:              6       7       8       9       10      11      12

basis           U       C       SE      SE      ?       SE      SE
symmb           U       C       SE      SE      ?       SE      SE
diag            U       C       S       SE      ?       SE      ?
sudokudiag      U       C       S       SE      ?       SE      ?
pandiag         U       C       U       U       U       CE      UE
pandiagsudoku   U       C       U       U       U       C       UE


Results:

1) basis

All solvers solve N=6.

N=7 solved by rlaMols (enu+maxdegdom) and with half the leaves by laMols
(with newvars).


2) symmb

All solvers solve N=6.

gcMols unsuccessful for N=7.
newvars, rlaMols (enu+maxdegdom), wdL can solve N=7 (in this order).
newvars has 50% leafcount of rlaMols, which has 30% leafcount of wdL.


3) diag

All solvers solve N=7.
rlaMols (enu+mindom) has the usual 2 orders of magnitude lower leafcount than
gcMols (enu+mindom).
wdL similar to rlaMols, newvars somewhat better.


4) sudoku

N=6 solved by all solvers.
N=7 seems too hard.


5) sudokudiag

All solvers solve N=7.
rlaMols (first) has 25x better nodecount than gcMols(mindom),
wdL and newvars have 30% of leafcount of rlaMols.


6) sudokudiagfull

N <= 7 easy,while N=8 seems too hard (at least for now).


7) pandiag

N <= 10 solved by all solvers, N=11 seems too hard to enumerate.

N=10: rlaMols (enu+mindom) 5 orders of magnitude lower leafcount than
gcMols (bin+mindom); roughly 20x faster.
laMols with wdL and newv even lower node-count.


8) pandiagsudoku

N <= 9 solved quickly by all solvers.

N=10 hard for gcMols, but still trivial for rlaMols and laMols (all
defaults).

N=11 also easy for rlaMols and laMols (all defaults).
