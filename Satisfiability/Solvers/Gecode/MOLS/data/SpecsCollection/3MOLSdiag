# Counts for N >= 2:
# 0, 0, 0, 0, 0, 192, >= 40

# The maximal numbers k with kMOLSdiag known are
# https://oeis.org/A328873
# For N >= 1: 1, 0, 0, 2, 2, 1, 4, 6, 6.
# So 3MOLSdiag is satisfiable for 2 <= N <= 9 iff N >= 7.

# QUESTION: at least some elementary symmetry-breaking is needed to
# break the symmetries between the 3! = 6 order of A, B, C.



# gcMols:

# N=7:

# MOLS> ./gcMols 7 data/SpecsCollection/3MOLSdiag "" count dom enu mindom asc 1 12 ""
#   N       rt  pl  bt        bv   bo  gcd        satc           t           ppc        flvs        gnds     gd st
#   7    count dom enu    mindom  asc    1         192      61.207     160405765      589058     1143000     22  0

# N=8:

# MOLS> ./gcMols 8 data/SpecsCollection/3MOLSdiag "" count dom - - - 1 12 "t,60"
# no satisfying assignment found; allowing roughly 100x more nodes:
# MOLS> ./gcMols 8 data/SpecsCollection/3MOLSdiag "" count dom - - - 1 16 "gnds,100000000" > AUS_gc_--- &
# exactly two runs found solutions (40 in both cases), namely first+desc, both for bin and enu:
#   N       rt  pl  bt        bv   bo  gcd        satc           t           ppc        flvs        gnds     gd st
#   8    count dom bin     first desc    1          40   73637.163  144938428209   789694330  1579388963     35  1
#   8    count dom enu     first desc    1          40  114503.188  196853523679  1105418962  1570445546     34  1

# N=9:

# MOLS> ./gcMols 9 data/SpecsCollection/3MOLSdiag "" +count dom bin first desc 1 16 "t,100000" > OUT_1655862862704230604 &
# server 43439 XXX



# rlaMols:

# N=7:

# MOLS> ./rlaMols 7 data/SpecsCollection/3MOLSdiag "" +count dom enu mindom asc relpr 1 12 {}
#   N       rt  pl  bt        bv   bo    lar  gcd       satc           t        ppc     flvs     gnds    gd st      nds      lvs
#   7   +count dom enu    mindom  asc  relpr    1        192    2361.255    1909619    10913    32128    13  0    21215    10913
#     mu0  qfppc  pprunes  pmprune   pprobes  rounds   solc     tr  pelvals
# 955.956  1.236    6.904   69.815   159.655   1.909  0.009  1.271    3.707
# 593.000  0.000    0.000    0.000     0.234   1.000  0.000  0.000    0.000
#1224.000  3.333   70.833  125.692  1022.302  10.000  1.000  8.811   17.349
#  45.785  0.366    4.223   53.168   108.806   0.904  0.095  0.912    3.393
# MOLS> ./rlaMols 7 data/SpecsCollection/3MOLSdiag "" count dom - - - relpr 1 16 nds,25000 > AUS_rla_--- &
# indeed mindom with bin or enu is best.

# N=8:

# MOLS> ./rlaMols 8 data/SpecsCollection/3MOLSdiag "" count dom enu mindom - relpr 1 16 nds,100000 > AUS_rla8 &
# no solution found.
# MOLS> ./rlaMols 8 data/SpecsCollection/3MOLSdiag "" count dom enu mindom - relpr 1 16 nds,2000000 > AUS_rla8 &
# no solution found:
#   N       rt  pl  bt        bv   bo    lar  gcd       satc           t        ppc     flvs     gnds    gd st      nds      lvs
#   8    count dom enu    mindom  asc  relpr    1          0  111219.148  187738232  1428508  3428524    30  1  2000016  1428514
#       vals       props      elvals       prunes       mprune       probes    rounds      solc          t   qelvals   qprunes
#   1759.301       4.781      10.034      168.913      557.049      404.300     1.030     0.000      0.886     0.006     0.152
#   1553.000       0.000       0.000        0.000        0.000        3.000     1.000     0.000      0.001     0.000     0.000
#   2358.000     101.000     158.000     1396.000     2310.000     6509.000     5.000     0.000     14.345     0.091     0.623
#     49.574       6.676      11.224      270.052      739.965      486.964     0.174     0.000      1.059     0.006     0.248
#   N       rt  pl  bt        bv   bo    lar  gcd       satc           t        ppc     flvs     gnds    gd st      nds      lvs
#   8    count dom enu    mindom desc  relpr    1          0   95768.017  186155241  1428506  3428522    30  1  2000016  1428511
#       vals       props      elvals       prunes       mprune       probes    rounds      solc          t   qelvals   qprunes
#   1759.016       5.056      10.376      168.722      559.619      410.860     1.030     0.000      0.763     0.006     0.152
#   1454.000       0.000       0.000        0.000        0.000        2.000     1.000     0.000      0.000     0.000     0.000
#   2358.000     109.000     164.000     1525.000     2310.000     6163.000     5.000     0.000     14.201     0.095     0.623
#     49.982       7.204      12.025      269.702      738.831      483.626     0.175     0.000      0.904     0.007     0.247




# laMols with wdL:

# MOLS> ./laMols 7 data/SpecsCollection/3MOLSdiag "" +count dom enu wdL "" relpr 1 12 "" ""
# Hardly any difference between A and L:
#   weights: A -> 0 0 1 2 3 4 5 6
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd st      nds      lvs    inds
#  7   +count dom enu  wdL   asc  relpr   1      192    5546.657    9464822    33324    84833    13  0    51509    33324   18185
#     mu0  qfppc  pprunes  pmprune   pprobes  rounds   solc     tr  pelvals
# 877.586  1.397    3.783   51.104   115.283   1.614  0.004  0.925    3.629
# 447.000  0.000    0.000    0.000     0.305   1.000  0.000  0.000    0.000
#1224.000  6.000   33.333  126.882  1011.785   9.000  1.000  9.106   20.255
#  79.746  0.522    2.420   54.592   113.823   0.856  0.061  0.923    3.637
#     mu1      w   ltau     mind    meand     maxd      sdd      dp     tb
# 937.589  2.832  0.023   28.282   58.410   86.364   25.323   8.355  0.942
# 738.000  2.000  0.007    4.000   17.500   18.000    0.000   0.000  0.146
#1224.000  6.000  0.060  101.000  267.667  478.000  182.220  12.000  1.676
#  49.272  0.617  0.009   12.461   29.511   59.308   26.989   1.270  0.125



# laMols with newv:

# N=7:

# MOLS> ./laMols 7 data/SpecsCollection/3MOLSdiag "" +count dom enu newv "" relpr 1 12 "" ""
# Best is "O":
#   weights: O -> 0 0 1 1 1 1 1 1
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd st      nds      lvs    inds
#  7   +count dom enu newv   asc  relpr   1      192    5360.623    8738424    30356    77868    13  0    47512    30356   17156
#     mu0  qfppc  pprunes  pmprune  pprobes  rounds   solc     tr  pelvals
# 881.042  1.379    3.736   52.253  121.914   1.654  0.004  0.961    3.902
# 460.000  0.000    0.000    0.000    0.421   1.000  0.000  0.000    0.000
#1224.000  6.000   28.571  126.910  873.472   9.000  1.000  7.511   21.082
#  79.437  0.505    2.318   54.520  115.093   0.872  0.063  0.925    3.804
#    mu1      w   ltau     mind    meand     maxd     sdd      dp     tb
#538.450  2.769  0.028   25.599   44.648   62.889  16.483   8.292  0.931
#471.000  2.000  0.007    5.000   16.000   16.000   0.000   0.000  0.035
#641.000  5.000  0.078  101.000  124.667  225.000  96.500  12.000  1.641
# 18.563  0.569  0.012   10.412   19.001   37.177  17.129   1.258  0.157
# Optimisation for blocks of size 1:
# MOLS> ./laMols 7 data/SpecsCollection/3MOLSdiag "" count dom enu newv "" relpr 1 16 "0,a,0" "nds,47512" > AUS_0a0 &
# a=8 yields a small improvement:
#   weights: 0 8 0 0 0 0 -> 0 0 256 256 256 256 256 0
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd st      nds      lvs    inds
#  7    count dom enu newv   asc  relpr   1      192    6170.261    8679821    29947    76930    13  0    46983    29947   17036
#       vals       props      elvals      prunes       mprune       probes    rounds      solc         tr   qelvals   qprunes
#   1174.264      25.285      34.400      55.016      492.144     1137.854     1.662     0.004      1.301     0.029     0.037
#    745.000       0.000       0.000       0.000        0.000        2.000     1.000     0.000      0.000     0.000     0.000
#   1518.000     158.000     196.000     716.000     1476.000     8965.000     9.000     1.000     15.214     0.160     0.286
#     80.198      26.210      34.422      66.266      522.132     1076.887     0.877     0.064      1.327     0.029     0.023
#         mu         w      ltau          mind         meand          maxd           sdd         dp        tb
#   1231.708     2.758     0.000      6000.057     10315.876     14426.302      3727.219      8.302     1.210
#   1046.000     2.000     0.000      1025.000      3841.000      3841.000         0.000      0.000     0.274
#   1518.000     5.000     0.000     22796.000     28089.667     47145.000     20751.500     12.000     2.675
#     50.485     0.557     0.000      2411.712      4285.366      8349.982      3863.200      1.263     0.392
# MOLS> ./laMols 7 data/SpecsCollection/3MOLSdiag "" count dom enu newv "" relpr 1 16 "0,0,a,0" "nds,47512" > AUS_00a0 &
# a=-6 yields an improvement
#   weights: 0 0 -6 0 0 0 -> 0 0 1 0.015625 0.015625 0.015625 0.015625 0
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd st      nds      lvs    inds
#  7    count dom enu newv   asc  relpr   1      192    6149.301    6950979    25528    68841    13  0    43313    25528   17785
#       vals       props      elvals      prunes       mprune       probes    rounds      solc         tr   qelvals   qprunes
#   1184.024      27.878      37.048      66.141      558.446     1323.468     1.770     0.004      1.039     0.031     0.042
#    749.000       0.000       0.000       0.000        0.000        2.000     1.000     0.000      0.000     0.000     0.000
#   1518.000     154.000     201.000     799.000     1476.000     9175.000     9.000     1.000     17.591     0.164     0.286
#     79.160      27.879      36.617      73.755      524.385     1109.735     0.934     0.066      1.122     0.031     0.023
#         mu         w      ltau       mind      meand       maxd        sdd         dp        tb
#   1232.848     2.435     0.126      5.343      8.693     11.972      3.023      8.411     0.853
#   1034.000     2.000     0.036      1.094      1.262      1.281      0.000      0.000     0.106
#   1518.000     5.000     1.099     16.453     33.917     69.484     28.623     13.000     3.110
#     53.564     0.675     0.066      2.335      4.508      8.428      3.797      1.357     0.432
# MOLS> ./laMols 7 data/SpecsCollection/3MOLSdiag "" count dom enu newv "" relpr 1 16 0,0,0,a,0 nds,43313 > AUS_000a0 &
# a=-9 best (reached satc=192, but was stopped).
# MOLS> ./laMols 7 data/SpecsCollection/3MOLSdiag "" count dom enu newv "" relpr 1 16 0,0,0,0,a,0 nds,43313 > AUS_0000a0 &
# a=-6 best:
#   weights: 0 0 0 0 -6 0 -> 0 0 1 1 1 0.015625 0.015625 0
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd st      nds      lvs    inds
#  7    count dom enu newv   asc  relpr   1      192    4337.963    3525135    14972    40375    14  0    25403    14972   10431
#       vals       props      elvals      prunes       mprune       probes    rounds      solc         tr   qelvals   qprunes
#   1214.105      25.670      35.151      82.813      581.202     1333.801     1.777     0.008      1.918     0.029     0.057
#    872.000       0.000       0.000       0.000        0.000        2.000     1.000     0.000      0.000     0.000     0.000
#   1518.000     136.000     186.000     864.000     1476.000     7924.000     8.000     1.000     14.983     0.148     0.482
#     70.879      23.852      32.281      87.746      531.335     1095.761     0.906     0.087      1.634     0.027     0.036
#         mu         w      ltau       mind       meand        maxd        sdd         dp        tb
#   1257.612     2.435     0.039     17.235      25.956      33.802      7.578      8.049     1.631
#   1086.000     2.000     0.014      3.000      11.098      11.469      0.000      0.000     0.548
#   1518.000     4.000     0.125     53.156     109.521     171.234     72.973     12.000     2.520
#     51.512     0.523     0.012      6.693      10.455      19.477      9.044      1.384     0.314
# MOLS> ./laMols 7 data/SpecsCollection/3MOLSdiag "" count dom enu newv "" relpr 1 16 0,0,0,0,0,a nds,43313 > AUS_00000a0 &
# all results very similar (close to 180, all stopped).
# Optimising on the best two parameters:
# MOLS> ./laMols 7 data/SpecsCollection/3MOLSdiag "" count dom enu newv "" relpr 1 16 0,0,a,0,-6,0 nds,25403 > AUS_00a0-60 &
# best a=8:
#   weights: 0 0 8 0 -6 0 -> 0 0 1 256 256 4 4 0
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd st      nds      lvs    inds
#  7    count dom enu newv   asc  relpr   1      192    2174.445    1878286     8872    23081    12  0    14209     8872    5337
#       vals       props      elvals      prunes       mprune       probes    rounds      solc         tr   qelvals   qprunes
#   1249.732      27.643      37.946     112.528      579.254     1293.507     1.749     0.014      1.368     0.031     0.094
#   1082.000       0.000       0.000       0.000        0.000        2.000     1.000     0.000      0.000     0.000     0.000
#   1518.000     124.000     167.000     847.000     1476.000     6475.000     7.000     2.000     11.631     0.131     1.833
#     67.577      23.753      31.710     113.444      531.980     1086.963     0.918     0.142      1.416     0.025     0.091
#         mu         w      ltau         mind         meand          maxd          sdd         dp        tb
#   1294.706     2.662     0.000     3206.620      4138.635      4989.661      787.788      7.316     1.224
#   1187.000     2.000     0.000      786.000      1812.500      2060.000        0.000      0.000     0.240
#   1518.000     4.000     0.001     7428.000     11888.500     16425.000     4542.877     11.000     2.998
#     58.708     0.583     0.000      911.972      1289.268      2226.121      976.729      1.439     0.618
# Optimising on the neighbour of the best parameter:
# MOLS> ./laMols 7 data/SpecsCollection/3MOLSdiag "" count dom enu newv "" relpr 1 16 0,0,0,a,-6,0 nds,25403 > AUS_000a-60 &
# only a=0 not aborted, so no progress here.
# Optimising again this parameter, this time as the "middle parameter":
# MOLS> ./laMols 7 data/SpecsCollection/3MOLSdiag "" count dom enu newv "" relpr 1 16 0,0,8,a,-6,0 nds,14209 > AUS_008a-60 &
# only a=0 not aborted. Finally optimising the special parameter:
# MOLS> ./laMols 7 data/SpecsCollection/3MOLSdiag "" count dom enu newv "" relpr 1 16 a,0,8,0,-6,0 nds,14209 > AUS_a080-60 &
# no influence for a <= 0.2, and for a >= 0.3 some small impairment.
# So the result here is "0,0,8,0,-6,0".

# N=8:

# Using the weights from N=7:

# MOLS> ./laMols 8 data/SpecsCollection/3MOLSdiag "" count dom enu newv "" relpr 1 16 0,0,8,0,-6,0 nds,200000 > AUS8_0080-60 &
#   weights: 0 0 8 0 -6 0 0 -> 0 0 1 256 256 4 4 4 0
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd st      nds      lvs    inds
#  8    count dom enu newv   asc  relpr   1        0   88242.977   44525992   121186   321201    26  1   200015   121193   78822
#       vals       props      elvals       prunes       mprune        probes     rounds      solc         tr   qelvals   qprunes
#   1404.294      28.915      37.523      129.035      669.548      1689.560      1.871     0.000      5.298     0.027     0.053
#    931.000       0.000       0.000        0.000        0.000         2.000      1.000     0.000      0.000     0.000     0.000
#   2358.000     217.000     260.000     1432.000     2310.000     14431.000     12.000     0.000     51.211     0.162     0.350
#    146.860      26.028      33.093      142.663      607.587      1414.203      1.008     0.000      4.743     0.023     0.040
#         mu         w      ltau          mind         meand          maxd           sdd         dp         tb
#   1491.496     2.540     0.000      4880.245      8694.663     12362.288      3385.041     20.311      4.390
#   1181.000     2.000     0.000        30.000        85.000        85.000         0.000      0.000      0.190
#   2358.000     6.000     0.021     24653.000     32499.750     48462.000     22439.500     30.000     10.335
#    113.792     0.546     0.000      2938.250      3868.259      7151.355      3528.334      2.089      0.966
# Trying all orders:
# MOLS> ./laMols 8 data/SpecsCollection/3MOLSdiag "" count dom enu newv - relpr 1 16 0,0,8,0,-6,0 nds,200000 > AUS8_0080-60-bo &
# no satisfying assignments found; the two descending versions perform less
# propagation; asc performs the most propagation (eliminations by la-reduction);
# one needed to see the average tau-value.
# Moving the block by one place:
# MOLS> ./laMols 8 data/SpecsCollection/3MOLSdiag "" count dom enu newv "" relpr 1 16 0,0,0,8,0,-6,0 nds,200000 > AUS8_0080-60 &
#   weights: 0 0 0 8 0 -6 0 -> 0 0 1 1 256 256 4 4 0
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd st      nds      lvs    inds
#  8    count dom enu newv   asc  relpr   1        0   55455.400   33737449   123433   323449    30  1   200016   123436   76580
#       vals       props      elvals       prunes       mprune        probes     rounds      solc         tr   qelvals   qprunes
#   1718.714      19.390      27.410      100.563      815.985      1597.024      1.725     0.000      3.146     0.016     0.047
#   1131.000       0.000       0.000        0.000        0.000         2.000      1.000     0.000      0.000     0.000     0.000
#   2358.000     166.000     292.000     1469.000     2310.000     14995.000     10.000     0.000     37.844     0.161     0.750
#     99.424      17.812      25.044      115.998      741.136      1502.068      0.905     0.000      3.023     0.014     0.032
#         mu         w      ltau          mind         meand          maxd           sdd         dp        tb
#   1773.691     2.616     0.000      3699.087      5924.472      7926.777      1902.443     17.963     3.336
#   1326.000     2.000     0.000       259.000      1118.000      1284.000         0.000      0.000     0.222
#   2358.000     7.000     0.001     20791.000     21983.333     26472.000     11167.000     33.000     5.556
#     94.054     0.619     0.000      1964.957      2349.730      3735.072      1738.336      2.866     0.604
# Less propagation, so should be worse.



squares A B C AB AC BC
ls A B C AB AC BC
rred A B C
diag A B C
antidiag A B C
rprod B AB A
rprod C AC A
rprod C BC B
