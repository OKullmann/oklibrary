# Counts for N >= 2:
# 0, 0, 0, 2, 0, 12, 0, 0, 0
# 12

# Question: it seems that the box-condition does not make much of a further
# restriction to EulerPandiag?!?
# Answer: for N up to 10 the number of solutions is the same,
# but for N=11 it is different: 56 for pandiag and 12 for pandiagsudoku.

# gcMols:

# MOLS> ./gcMols 6,7,8,9 data/SpecsCollection/Euler/pandiagsudoku "" count dom enu mindom "" 1 1 ""
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
#  6    count dom enu    mindom  asc   1         0       0.001           296           3           4      1  0
#  7    count dom enu    mindom  asc   1        12       0.007          7570          24          61      4  0
#  8    count dom enu    mindom  asc   1         0       0.106        167479        1148        2167      8  0
#  9    count dom enu    mindom  asc   1         0       0.058         80694         457         753     10  0

# N=9

# MOLS> ./gcMols 9 data/SpecsCollection/Euler/pandiagsudoku "" count - - - - 1 1 "t,1"
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
#  9    count dom bin     first  asc   1         0       0.017         27720         146         291      6  0
#  9    count dom bin     first desc   1         0       0.016         25751         136         271      7  0
#  9    count dom bin    mindeg  asc   1         0       0.019         29644         156         311      6  0
#  9    count dom bin    mindeg desc   1         0       0.018         27553         146         291      7  0
#  9    count dom enu     first  asc   1         0       0.017         27219         146         222      6  0
#  9    count dom enu     first desc   1         0       0.017         27219         146         222      7  0
#  9    count dom enu    mindeg  asc   1         0       0.018         29191         159         237      6  0
#  9    count dom enu    mindeg desc   1         0       0.018         29191         159         237      7  0
# leaf-wise the best is dom+bin+first+desc.

# N=10

# MOLS> time ./gcMols 10 data/SpecsCollection/Euler/pandiagsudoku "" count dom enu mindom "" 1 16 ""
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
# 10    count dom enu    mindom  asc   1         0    1167.142    1679151794     6262104    12264825     29  0
# real    1m45.688s user    19m27.145s sys     0m15.858s

# MOLS> time ./gcMols 10 data/SpecsCollection/Euler/pandiagsudoku "" count dom - - - 1 16 "t,120"
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
# 10    count dom bin     first  asc   1         0      95.452     133098192      649400     1298799     27  0
# 10    count dom bin     first desc   1         0      95.982     133506199      648093     1296185     24  0
# 10    count dom enu     first  asc   1         0     103.518     137248718      686573     1154923     21  0
# 10    count dom enu     first desc   1         0     104.043     137250660      686573     1154923     16  0
# Clearly best are bin+first and enu+first.

# N=11

# MOLS> time ./gcMols 11 data/SpecsCollection/Euler/pandiagsudoku "" count dom enu mindom "" 1 16 ""
# aborted after 18 hours wallclock without finding a solution

# MOLS> time ./gcMols 11 data/SpecsCollection/Euler/pandiagsudoku "" +count dom enu first "" 1 16 ""
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
# 11   +count dom enu     first  asc   1        12  280143.445  261605818142  1827258588  2685009347     30  0
# real    301m11.623s user    4669m3.453s sys     24m4.183s


# rlaMols

# N=10

# MOLS> time ./rlaMols 10 data/SpecsCollection/Euler/pandiagsudoku "" +count dom enu mindom asc "" 1 16 ""
#  N       rt  pl  bt        bv   bo    lar gcd     satc           t        ppc st      nds    inds      lvs
# 10   +count dom enu    mindom  asc  relpr   1        0       8.452        559  0        6       1        5
#     mu0  qfppc  pprunes  pmprune  pprobes  rounds   solc     tr  pelvals     dp
#1784.000  1.143    0.370  114.238  181.783   2.000  0.000  6.193    0.897  0.000
#1784.000  1.143    0.370  114.238  181.783   2.000  0.000  6.193    0.897  0.000
#1784.000  1.143    0.370  114.238  181.783   2.000  0.000  6.193    0.897  0.000
#   0.000  0.000    0.000    0.000    0.000   0.000  0.000  0.000    0.000  0.000
#     mu0  qfppc  pprunes  pmprune  pprobes  rounds   solc     tr  pelvals     dp
#1739.600  1.998    0.127    6.990   15.691   1.000  0.000  0.447    0.874  1.000
#1738.000  1.375    0.000    6.433    9.091   1.000  0.000  0.256    0.518  1.000
#1742.000  3.000    0.633    7.537   25.244   1.000  0.000  0.703    1.265  1.000
#   1.817  0.635    0.283    0.516    6.424   0.000  0.000  0.175    0.302  0.000
# real    0m0.544s user    0m8.460s sys     0m0.012s

# MOLS> ./rlaMols 10 data/SpecsCollection/Euler/pandiagsudoku "" +count dom - - - "" 1 16 "nds,6"
# Unstopped combinations:
#  N       rt  pl  bt        bv   bo    lar gcd     satc           t        ppc st      nds    inds      lvs
# 10   +count dom enu maxdegdom  asc  relpr   1        0       7.514        559  0        6       1        5
# 10   +count dom enu maxdegdom desc  relpr   1        0       7.259        558  0        6       1        5
# 10   +count dom enu    mindom  asc  relpr   1        0       7.283        559  0        6       1        5
# 10   +count dom enu    mindom desc  relpr   1        0       7.288        558  0        6       1        5
# The best leaf-wise are enu+maxdegdom and enu+mindom.
# Too few nodes to optimise weights for laMols.

# N=11

# MOLS> time ./rlaMols 11 data/SpecsCollection/Euler/pandiagsudoku "" +count dom enu mindom asc "" 1 16 ""
#  N       rt  pl  bt        bv   bo    lar gcd     satc           t        ppc st      nds    inds      lvs
# 11   +count dom enu    mindom  asc  relpr   1       12     250.588      24790  0       66      14       52
#     mu0  qfppc  pprunes  pmprune  pprobes  rounds   solc      tr  pelvals     dp
#2305.929  1.210    4.661   95.965  259.385   3.143  0.000  12.997    7.842  1.786
#2114.000  0.000    0.000   48.559  113.253   1.000  0.000   7.001    0.000  0.000
#2490.000  2.005   15.580  113.253  436.427   5.000  0.000  21.634   34.483  3.000
# 137.015  0.503    5.341   23.896   77.223   1.167  0.000   3.798   12.651  0.893
#     mu0  qfppc  pprunes  pmprune  pprobes  rounds   solc      tr  pelvals     dp
#1936.308  2.199    0.164   15.841   30.204   1.077  0.231   1.314    1.159  2.827
# 692.000  1.353    0.000    0.272    0.816   1.000  0.000   0.001    0.331  1.000
#2457.000  7.000    2.083   45.807  244.897   3.000  1.000  10.555    8.138  4.000
# 535.742  1.049    0.331   16.665   45.909   0.334  0.425   1.980    1.562  0.760
# real    0m15.702s user    4m10.592s sys     0m0.376s

# MOLS> ./rlaMols 11 data/SpecsCollection/Euler/pandiagsudoku "" +count dom - - - "" 1 16 "nds,67"
# Unstopped combinations:
#  N       rt  pl  bt        bv   bo    lar gcd     satc           t        ppc st      nds    inds      lvs
# 11   +count dom enu    mindom  asc  relpr   1       12     242.095      24790  0       66      14       52
# 11   +count dom enu    mindom desc  relpr   1       12      74.659      24653  0       66      14       52
# enu+mindom is the best here.
# Still too few nodes for optimising weights?

# N=12

# MOLS> time ./rlaMols 12 data/SpecsCollection/Euler/pandiagsudoku "" +count dom enu mindom asc "" 1 16 ""
# aborted after 18 hours wallclock without finding a solution


squares A B aux
rred A B aux
ls A B aux
rprod A aux B
moddiag A B
modantidiag A B
box A B
