# Counts for N >= 2:
# 0, 72, 6912, 6220800

#   hash=12022445848885784817

# These counts are obtained from the reduced counts in ./red by
# multiplication with: (N!)^2 * (N-1)! .
# This factor is 62'208'000 for N=6, and 18'289'152'000 for N=7.
# So the count for N=7 is 18289152000 * 342480 = 6'263'668'776'960'000.

# Roughly the number of leaves for N=6 with red and wdL/newv is 3000,
# so 62000000 * 3000 = 1.86e11 leaves expected here:
# The predictions below are somewhat better, but that could
# be wrong.


# gcMols:

# MOLS> ./gcMols 2,5 data/SpecsCollection/Euler_unred "" count "" enu mindom "" 1 1
#   N       rt  pl  bt        bv   bo  gcd        satc           t           ppc        flvs        gnds     gd
#   2    count dom enu    mindom  asc    1           0       0.000            84           4           7      2
#   3    count dom enu    mindom  asc    1          72       0.000          3568           0         130      5
#   4    count dom enu    mindom  asc    1        6912       0.140       2011982       20736       51809     11
#   5    count dom enu    mindom  asc    1     6220800     772.834    7916075800    72576000   132911726     19

# N=6:

# MOLS> time ./gcMols 6 data/SpecsCollection/Euler_unred "" count "" enu mindom "" 1 16
# aborted after 143 hours wallclock-time.



# laMols with wdL:

# Optimising TAUscan via Nomad (MAX_TIME 600s, rep=100):
# TAU_basis_6_wdL_ave> nomad np
# 106 32753368653.826656   0.0301     0.62       0.0401     0.0001
# Blackbox evaluations: 143 Cache hits: 9 Total number of evaluations: 152
# Reproduction:
# TAU_basis_6_wdL_ave> time ./TAUscan 6 ../basis "" wdL hash "0.0301,0.62,0.0401,0.0001" 100 1 all
# 100 : 8.79760892466805235308e+08 3.27533686538266556747e+10 5.91737435608699649572e+11; 7.68166365636545908526e+10
# real    0m38.969s user    0m38.636s sys     0m0.322s

# Alternative optimisation on ave+sd:
# TAU_basis_6_wdL_avepsd> nomad np
# 54 75706521078.575272   0.0001     0.12       0.09       0.08
# Blackbox evaluations: 140 Cache hits: 30 Total number of evaluations: 170
# Reproduction:
# TAU_basis_6_wdL_avepsd> time ./TAUscan 6 ../basis "" wdL hash "0.0001,0.12,0.09,0.08" 100 1 all
# 100 : 2.41105811492673242884e+09 3.69699061624764448777e+10 2.21234532573812525958e+11; 3.87366149160988284200e+10
# real    0m39.103s user    0m38.795s sys     0m0.294s

# Alternative optimisation on max:
# TAU_basis_6_wdL_max> nomad np
# 54 221234532573.812531   0.0001     0.12       0.09       0.08
# Blackbox evaluations: 140 Cache hits: 30 Total number of evaluations: 170
# Reproduction:
# same weights as for TAU_basis_6_wdL_avepsd.

# Alternative optimisation on sd:
# TAU_basis_6_wdL_sd> nomad np
# 54 38736614916.098831   0.0001     0.12       0.09       0.08
# Blackbox evaluations: 140 Cache hits: 30 Total number of evaluations: 170
# Reproduction:
# TAU_basis_6_wdL_sd>
# same weights as for TAU_basis_6_wdL_avepsd.

# New approach (version >= 0.99):
# XXX NO XXX

# TAUscan for simple values:
# In any of the directories below:
# > time ./TAUscan 6 ../../basis "" enu wdL hash "0.1" 100 10 all
# 100 : 3.54385288075292159035e+09 5.92828564217183979861e+10 6.66968586018858701527e+11; 1.08065099370215408392e+11
# real	0m3.837s user	0m36.922s sys	0m0.147s
# These values, and viewing them via R, don't look much different from below.
# So it appears that optimisation can't do much (anything) here.
# Actually, nomad gets a different hash-value:
# basis_6_wdL_ave> time ./TAUscan 6 ../../basis "" enu wdL hash "0.1,0.1,0.1,0.1" 100 10 all
# 100 : 3.90703665557957747229e+09 4.78831365588377916254e+10 2.95639118713900244266e+11; 5.83425935528715811148e+10
# real	0m3.903s user	0m37.461s sys	0m0.196s
# More "precision":
# > time ./TAUscan 6 ../../basis "" enu wdL hash "0.1" 1000 100 all
# 1000 : 3.54385288075292157196e+09 5.93362795462671436816e+10 3.63283150176803127027e+12; 1.67907871518036477566e+11
# real    0m6.988s user    10m34.585s sys     0m4.298s
# Viewing in R: the heavy tail is now more pronounced.
# Again, different hashing:
# > time ./TAUscan 6 ../../basis "" enu wdL hash "0.1,0.1,0.1,0.1" 1000 100 all
# 1000 : 3.54385288075292157196e+09 5.16362531869946837611e+10 1.12963532230940581739e+12; 9.11872015407383587137e+10
# real    0m7.023s user    10m34.720s sys     0m4.170s

# Optimising TAUscan via Nomad (MAX_TIME 600s, rep=100):
# TAU/basis_6_wdL_ave> nomad np
# 64 35804108716.560135   0.0001     0.42       0.0001     0.0001
# Blackbox evaluations: 133 Cache hits: 15 Total number of evaluations: 148
# Reproduction (exact):
# TAU/basis_6_wdL_ave> time ./TAUscan 6 ../../basis "" enu wdL hash "0.0001,0.42,0.0001,0.0001" 100 1 all
# 100 : 8.03692906735255177264e+07 3.58041087165601384006e+10 4.12393496586368163407e+11; 6.04890799976347304657e+10
# real    0m42.910s user    0m42.496s sys     0m0.401s
# Seems similar to the old values.
# Viewing in R (with "*" for the expansion):
#   E=read.table("TS_100_1_*", header=TRUE)
#   plot(E$est)
#   plot(density(E$est))
# an initial sharp peak, and a heavy tail.
# Likely the precision is too low here, so using rep=1000:
# TAU/basis_6_wdL_ave> nomad np2
# 1 51636253186.994682   0.1        0.1        0.1        0.1
# Blackbox evaluations: 92
# So here no improvements achieved: likely the achievements for rep=100
# are spurious.
# Giving more time (6000s):
# TAU/basis_6_wdL_ave> nomad np3
# 804 47146688391.016312   0.0966     0.1041     0.103      0.11
# Blackbox evaluations: 869 Cache hits: 334 Total number of evaluations: 1203
# Reproduction (not exact):
# TAU/basis_6_wdL_ave> time ./TAUscan 6 ../../basis "" enu wdL hash "0.0966,0.1041,0.103,0.11" 1000 100 all
# 1000 : 3.54886197369575232640e+09 4.97085552254785946757e+10 1.24073117481074249864e+12; 8.41401612120406359062e+10
# real    0m6.991s user    10m35.005s sys     0m4.281s
# All very close to all-0.1-values.
# Testing stability of optimisation by starting at all-1-values:
# TAU/basis_6_wdL_ave> nomad np4
# 229  66743114674.966179   7          1.9467     0.0001     0.0004
# 611  65376652301.440483   7.0        1.9467     0.0001     0.0004
# Blackbox evaluations: 829 Cache hits: 324 Total number of evaluations: 1153
# Reproduction (exact):
# TAU/basis_6_wdL_ave> time ./TAUscan 6 ../../basis "" enu wdL hash "7,1.9467,0.0001,0.0004" 1000 100 all
# 1000 : 1.24901616828738838558e+07 6.67431146749661802016e+10 2.81132191825418577385e+12; 2.24374018075310325712e+11
# real    0m7.333s user    11m3.037s sys     0m4.299s
# So nomad got stuck in a local optimum; trying a larger search:
# TAU/basis_6_wdL_ave> nomad np5
# 630  65376652301.440483   7.0        1.9467     0.0001     0.0004
# A termination criterion is reached: No termination (all). Mesh minimum precision reached (Algo)
# Blackbox evaluations: 979 Cache hits: 506 Total number of evaluations: 1485
# Aborted search preliminarily -- same result as above.
# With EVAL_OPPORTUNISTIC=no:
# TAU/basis_6_wdL_ave> nomad np6
# aborted since showing the exact same behaviour.
# Removed initial point X0:
# TAU/basis_6_wdL_ave> nomad np7
# we see the wrong behaviour of not using parallelism in the initial round(s);
# that should be corrected in the newest nomad-version 4.3.1
# https://github.com/bbopt/nomad/releases/tag/v.4.3.1
# (this version also enables controlling the display-precision, needed
# for precise reproduction).
# One sees a very slow iteration through the values of the first parameter:
# that is perhaps the first LH_SEARCH parameter in action now (which
# apparently for given X0 was doing nothing; thus reducing it from 5000 to 50;
# indeed the first parameter is the number of initial trials.
# 312  72773324119.060791   1.65816    2.676206   0.286071   0.27094
# 585  72492193345.778442   1.65816    2.676206   0.286071   0.27094
# 958  69624472078.530014   1.65816    2.676206   0.286071   0.27094
# A termination criterion is reached: No termination (all). Mesh minimum precision reached (Algo)
# Blackbox evaluations: 1036 Cache hits: 451 Total number of evaluations: 1487
# After the initial scanning (which worked fine now, except for the low
# number of scans due to non-parallel initial computation), nomad again
# zoomed in on a suboptimal local minimum.
# Now with version 4.3.1:
# TAU/basis_6_wdL_ave> nomad np8
# 1720  59201338836.436577   2.008138   0.0305     0.0015     0.0538
# A termination criterion is reached: No termination (all). Mesh minimum precision reached (Algo)
# Blackbox evaluations: 2788 Cache hits: 582 Total number of evaluations: 3370
# Still stuck in a local minimum.
# Trying to force it (10000 initial search-points):
# TAU/basis_6_wdL_ave> nomad np9
# 10427  75769735089.037323   1.131874   2.364665   0.362256   0.322331
# A termination criterion is reached: No termination (all). Mesh minimum precision reached (Algo)
# Blackbox evaluations: 11290 Cache hits: 433 Total number of evaluations: 11723
# Very weak result! The problem seems early abortion?
# Let's just try the default "opportunistic strategy":
# TAU/basis_6_wdL_ave> time nomad np10 | tee OUTPUT
# exactly the same solution as above, with
# Blackbox evaluations: 11259 Cache hits: 37 Total number of evaluations: 11296
# real 610m48.976s user    75523m1.831s sys     343m6.665s
# So basically exactly half of the available time has been used; the best of
# the 10000 LH-evaluations was
# 1619  85954004818.045319   1.132517   2.362558   0.36145    0.322448
# for which then some tiny (likely irrelevant) optimisations were performed.
# The best next step seems to provide the initial points ourselves!

# Alternative optimisation on ave+sd:
# TAU/basis_6_wdL_avepsd> nomad np
# 67  93521293281.968674   0.0001     0.06       0.08       0.12
# Blackbox evaluations: 136 Cache hits: 24 Total number of evaluations: 160
# Reproduction (not exact):
# TAU/basis_6_wdL_avepsd> time ./TAUscan 6 ../../basis "" enu wdL hash "0.0001,0.06,0.08,0.12" 100 1 all
# 100 : 2.83937549812355943536e+09 4.24346187360756406635e+10 2.90802946286743894249e+11; 5.10866745458930295780e+10
# real	0m34.798s user	0m34.482s sys	0m0.301s
# Basically similar to old results (though all values somewhat higher).
# Scheme of values different from ave-result (though TAUscan-values
# comparable).
# Viewing in R: An initial sharp peak, then a small peak and a heavy tail.

# Alternative optimisation on max:
# TAU/basis_6_wdL_max> nomad np
# 72 290224835833.615479   0.05       0.2        0.11       0.09
# Blackbox evaluations: 139 Cache hits: 21 Total number of evaluations: 160
# Reproduction (not exact):
# TAU/basis_6_wdL_max> time ./TAUscan 6 ../../basis "" enu wdL hash "0.05,0.2,0.11,0.09" 100 1 all
# 100 : 2.02676661230718693021e+09 4.59448076844077746421e+10 2.90224835833615491807e+11; 5.49391528983793066926e+10
# real	0m39.078s user	0m38.792s sys	0m0.272s
# Basically similar to old results (though all values somewhat higher).
# Scheme of values different from from above (though TAUscan-values
# comparable).
# Viewing in R: An initial sharp peak, and a heavy tail.

# Alternative optimisation on sd:
# TAU/basis_6_wdL_sd> nomad np
# 8  58342593552.871582   0.1        0.1        0.1        0.1
# Blackbox evaluations: 154 Cache hits: 2 Total number of evaluations: 156
# Reproduction (not exact):
# TAU/basis_6_wdL_sd> time ./TAUscan 6 ../../basis "" enu wdL hash "0.1,0.1,0.1,0.1" 100 1 all
# 100 : 3.90703665557957747229e+09 4.78831365588377916254e+10 2.95639118713900244266e+11; 5.83425935528715811148e+10
# real	0m35.047s user	0m34.763s sys	0m0.271s
# Nomad optimisation result is almost twice bigger.
# Basically similar to old results (average is lower).
# Scheme of values different from from above (though TAUscan-values
# comparable).
# Viewing in R: An initial sharp peak, small peak, and a heavy tail.

# All four optimisation also for uniform probabilities:
# XXX



# laMols with newvars:

# N=6:

# Optimising TAUscan via Nomad (MAX_TIME 600s, rep=100):
# TAU_basis_6_newv_ave> nomad np
# 57  10916304993.495291  -1          4        -10         -7        -10
# Blackbox evaluations: 110 Cache hits: 10 Total number of evaluations: 120
# Reproduction:
# TAU_basis_6_newv_ave> time ./TAUscan 6 ../basis "" newv hash "-1,4,10,-7,-10" 100 1 all
# 100 : 1.57881689350773441908e+09 1.02185097071459187709e+11 7.80897975453139375687e+11; 1.56733541159994666442e+11
# real    0m42.945s user    0m42.608s sys     0m0.322s
# time ./laMols 6 ../basis "" +count dom enu newv "" "" 1 16 "-1,4,10,-7,-10" "" ""
# aborted after 8 minutes wallclock-time.

# Alternative optimisation on ave+sd:
# TAU_basis_6_newv_avepsd> nomad np
# 52  20296913711.558559  -1          0         -9        -10         -6
# Blackbox evaluations: 103 Cache hits: 9 Total number of evaluations: 112
# Reproduction:
# TAU_basis_6_newv_avepsd> time ./TAUscan 6 ../basis "" newv hash "-1,0,-9,-10,-6" 100 1 all
# 100 : 4.81079455107429972762e+08 7.33715513279553592438e+09 9.58153588241425036341e+10; 1.29597585787630234035e+10
# real    0m43.047s user    0m42.713s sys     0m0.320s

# Alternative optimisation on max:
# TAU_basis_6_newv_max> nomad np
# 104  225547432826.752136  -0.41      -3         -6         -8         -2
# Blackbox evaluations: 106 Cache hits: 6 Total number of evaluations: 112
# Reproduction:
# TAU_basis_6_newv_max> time ./TAUscan 6 ../basis "" newv hash "-0.41,-3,-6,-8,-2" 100 1 all
# 100 : 7.97752951121982294280e+07 3.73470608356885504425e+10 2.25547432826752139717e+11; 4.50453864822287522741e+10
# real    0m43.469s user    0m43.220s sys     0m0.234s

# Alternative optimisation on sd:
# TAU_basis_6_newv_sd> nomad np
# 59  12959758578.763023  -1          0         -9        -10         -6
# Blackbox evaluations: 106 Cache hits: 14 Total number of evaluations: 120
# Reproduction:
# TAU_basis_6_newv_sd> time ./TAUscan 6 ../basis "" newv hash "-1,0,-9,-10,-6" 100 1 all
# 100 : 4.81079455107429972762e+08 7.33715513279553592438e+09 9.58153588241425036341e+10; 1.29597585787630234035e+10
# real    0m43.070s user    0m42.711s sys     0m0.344s

# New approach (version >= 0.99, higher rep and time):
# Optimising TAUscan via Nomad (MAX_TIME 20000s, 6 threads, rep=1000):
# TAU/basis_6_newv_ave> nomad np
# 1  138900441749.480316   0          0          0          0          0
# 20  21201934110.599575  -1         -1        -10        -10          7
#208  21073064652.675365  -1         -0.9867    -9.99      -9.9938     7.0077
# A termination criterion is reached: No termination (all). Mesh minimum precision reached (Algo)
# Blackbox evaluations:        931 Cache hits:                  361 Total number of evaluations: 1292
# This is a case where no model-evaluations were performed.
# TAU_basis_6_newv_ave> time ./TAUscan 6 ../../basis "" enu newv hash "-1,-1,-10,-10,7" 1000 10 all
# 1000 : 1.35528450090974572767e+09 2.12019341105995766278e+10 6.66338448839291947305e+11; 4.47476241906456983723e+10
# real    0m44.836s user    7m8.576s sys     0m3.037s
# Rerunning with "DISPLAY_DEGREE 4":
# TAU/basis_6_newv_ave> time nomad np | tee OUTPUT
# due to a bug with nomad-logging, for now not further pursued.



squares A B aux
ls A B aux
rprod B aux A
