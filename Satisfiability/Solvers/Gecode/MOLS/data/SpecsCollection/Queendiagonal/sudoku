# Counts for N >= 2:
# 0, 0, 0, 2, 0, 4, 0, 0, 0,
# 4, >= 2, ?, ?, ?, ?

#   hash=6630968238017515591

# See "m1sudoku" for N-1 Queens.
# See Pandiagonal/sudoku for the stronger pandiagional-conditions
# (the queens "wrap around diagonally").
# For a restricted number
# of queens see SpecsCollection/Sudoku.


# gcMols:

# For N <= 9 very easy:
# MOLS> ./gcMols 2,9 data/SpecsCollection/Queendiagonal/sudoku "" count dom bin maxdom asc 1 1 ""
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
#  2    count dom bin    maxdom  asc   1         0       0.000             4           1           0      0  0
#  3    count dom bin    maxdom  asc   1         0       0.000             9           1           0      0  0
#  4    count dom bin    maxdom  asc   1         0       0.000            28           1           0      0  0
#  5    count dom bin    maxdom  asc   1         2       0.000           202           2           7      1  0
#  6    count dom bin    maxdom  asc   1         0       0.000           524          10          19      2  0
#  7    count dom bin    maxdom  asc   1         4       0.002          8732         140         287      6  0
#  8    count dom bin    maxdom  asc   1         0       0.015         53433         881        1761      8  0
#  9    count dom bin    maxdom  asc   1         0       0.149        465700        6862       13723     11  0

# For N=7, running queen-sudoku-condition without rred:
# MOLS> ./gcMols 7 "@squares A\nls A\nbox A\nqueendiag A\nqueenantidiag A" "" count dom bin maxdom asc 1 6 ""
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
#  7    count dom bin    maxdom  asc   1     20160       0.907       2182945       13639       67597     21  0
# 20160 = 4 * 7! (where 4 is the number of solutions with rred).
# Equivalently, with gp7bishop-condition, but with different conditions:
# MOLS> ./gcMols 7 data/SpecsCollection/Sudoku/gp7bishop "" count dom bin maxdom asc 1 6 ""
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
#  7    count dom bin    maxdom  asc   1     20160       1.759       8412827       46687      133693     22  0
# We see that (naturally) the queens-conditions yield better propagation, since using
# all-different for complete diagaons (not broken into the different cases).
# To make sure, all combinations for gp7bishop are checked, and the best result was this:
# MOLS> ./gcMols 7 data/SpecsCollection/Sudoku/gp7bishop "" - - - - - 1 6 ""
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
#  7    count dom bin    maxdeg  asc   1     20160       1.830       8181843       43814      127947     22  0


# Best seems dom+bin+maxdom+desc; for N=10 asc in fact is somewhat better
# (second runtime under high load):
# MOLS> ./gcMols 10 data/SpecsCollection/Queendiagonal/sudoku "" count dom bin maxdom asc 1 1 ""
#    N       rt  pl  bt        bv   bo  gcd            satc          t          ppc        flvs        gnds     gd
#   10    count dom bin    maxdom  asc    1               0      2.467      6517122      103032      206063     18
# MOLS> ./gcMols 10 data/SpecsCollection/Queendiagonal/sudoku "" count dom bin maxdom desc 1 1 ""
#    N       rt  pl  bt        bv   bo  gcd            satc          t          ppc        flvs        gnds     gd
#   10    count dom bin    maxdom desc    1               0      5.560      7172755      118026      236051     17

# But for N=11 desc is quite a bit better:
# MOLS> time ./gcMols 11 data/SpecsCollection/Queendiagonal/sudoku "" +count dom bin maxdom asc 1 12 ""
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
# 11   +count dom bin    maxdom  asc   1         4    1980.154    2447323709    37691626    75383259     41  0
# real	3m44.283s user	33m0.156s sys	1m38.420s
# MOLS> time ./gcMols 11 data/SpecsCollection/Queendiagonal/sudoku "" count dom bin maxdom desc 1 12 ""
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
# 11    count dom bin    maxdom desc   1         4    1406.036    1686242110    26782437    53564881     34  0
# real	2m30.911s user	23m26.038s sys	1m20.025s


# For N <= 11 no additional solution compared to Pandiagonal/sudoku
# exist, but this changes for N=12:

# N=12:

# MOLS> ./gcMols 12 data/SpecsCollection/SudokuQueen "" +enum dom binbr maxdom desc 12
# aborted after 12 h wall-clock-time; two solutions found:

#  0  1  2  3  4  5  6  7  8  9 10 11
#  7  8  5  1  0  9  2 11 10  6  3  4
# 11  9  6 10  7  8  3  4  1  5  2  0
#  4 10 11  2  3  6  5  8  9  0  1  7
#  5  2  8  4 10 11  0  1  7  3  9  6
#  6  3  9  0  1  7  4 10 11  2  8  5
# 10 11  4  8  5  2  9  6  3  7  0  1
#  1  7  0  9  6  3  8  5  2 11  4 10
#  9  6  3  7 11 10  1  0  4  8  5  2
#  3  4 10  6  2  0 11  9  5  1  7  8
#  2  0  1  5  8  4  7  3  6 10 11  9
#  8  5  7 11  9  1 10  2  0  4  6  3

#  0  1  2  3  4  5  6  7  8  9 10 11
# 10  4  6 11  2  8  3  9  0  5  7  1
#  9  5  8  7 10  0 11  1  4  3  6  2
#  7  3 11  1  9  6  5  2 10  0  8  4
#  1  0  5  2  7  3  8  4  9  6 11 10
#  6  9 10  4  8 11  0  3  7  1  2  5
#  4 11  3  6  1  9  2 10  5  8  0  7
#  8  2  7  0  5 10  1  6 11  4  9  3
#  5 10  9  8 11  4  7  0  3  2  1  6
# 11  7  1  5  3  2  9  8  6 10  4  0
#  3  6  4  9  0  1 10 11  2  7  5  8
#  2  8  0 10  6  7  4  5  1  11 3  9

# The left side-diagonal of the main-diagonal contains 11, and so does the
# top-right-corner (similarly, bottom-left is 8/2, which is also contained in
# the right-side-diagonal).
# Nice for N=12 is that it is divisible by the box-size.

# Rerunning without "rred A":
# MOLS> ./gcMols 12 data/SpecsCollection/SudokuQueen "" +enum dom binbr maxdom desc 12
# After 80 min wall-clock aborted; perhaps not better.


# N=13:

# MOLS> ./gcMols 13 data/SpecsCollection/SudokuQueen "" +enum dom binbr maxdom desc 12
# aborted after 50h wall-clock without a solution found (while finding a
# solution for SudokuPandiagonal is rather easy)>
# Running without "rred A":
# MOLS> ./gcMols 13 data/SpecsCollection/SudokuQueen "" sats dom binbr maxdom desc 12
# aborted after 37h wall-clock without a solution found.
# For checking, "dom enumbr mindom" was run for nearly 60h wall-clock without finding a solution (with rred).


# N >= 14:

# MOLS> ./gcMols "13,15" data/SpecsCollection/Queendiagonal/sudoku "" count dom bin maxdom asc 1 6 "t,10"
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
# 13    count dom bin    maxdom  asc   1         0      44.727      48227379      714430     1428979     38  1
# 14    count dom bin    maxdom  asc   1         0      45.488      46656899      650741     1301612     47  1
# 15    count dom bin    maxdom  asc   1         0      45.449      30135232      523031     1046235     48  1

# N=16:

# All combinations:
# MOLS> ./gcMols 16 data/SpecsCollection/Queendiagonal/sudoku "" satd - - - - 1 2 "t,100"
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
# 16     satd def bin mindegdom desc   1         0     196.222      46311020    18509325    37018791    140  1
# 16     satd def bin maxdegdom desc   1         0     188.177     195431200     7932326    15864740     93  1
# 16     satd val bin    maxdom  asc   1         0     192.525      59043332    19033046    38066239    143  1
# 16     satd dom bin    mindom  asc   1         0     151.684     110275376      650517     1301103     78  1
# Here only showing rows that have maximum or minimum ppc or flvs.
# In general max-ppc is a bad measure, since easily caused by a large number of leaves.
# But for a given time-out and especially in the presense of threading, it is not possible to determine
# what the above means.


# Running maxdeg:
# MOLS> time ./gcMols 16 data/SpecsCollection/Queendiagonal/sudoku "" +enum dom bin maxdeg desc 1 6 ""
# XXX Running on server XXX



# rlaMols:

# MOLS> ./rlaMols 10 data/SpecsCollection/SudokuQueen "" satd dom enu maxdom asc relpr 1 1
#   N       rt  pl  bt        bv   bo    lar  gcd       satc          t        ppc     flvs     gnds    gd     larc      lvs
#  10     satd dom enu    maxdom  asc  relpr    1          0     11.989     103040      814     1743     7      929      814
#      vals      props      elvals      prunes      mprune       probes    rounds      solc         t   qelvals   qprunes
#   473.538     14.898      23.936       6.369     111.298      385.420     1.480     0.000     0.013     0.051     0.013
#   339.000      0.000       0.000       0.000       0.000        5.000     1.000     0.000     0.000     0.000     0.000
#   712.000     86.000     116.000     105.000     702.000     2914.000     7.000     0.000     0.110     0.214     0.109
#    67.824     13.001      18.395      13.089     150.057      484.698     0.959     0.000     0.017     0.038     0.015

# time ./rlaMols 11 data/SpecsCollection/SudokuQueen "" +count dom enu maxdom asc relpr 1 12
# aborted after 5h wallclock-time without finding a solution.
# ./rlaMols 11 data/SpecsCollection/SudokuQueen "" +count dom enu maxdom desc relpr 1 12
# aborted after 4h wallclock-time without finding a solution.
# So the "special magic" of maxdom seems lost here for N=11.


# N=16:

# Each run should complete in approximately 60 hours with 12 threads or 120 hours with 6 threads:
# MOLS> time ./rlaMols 16 data/SpecsCollection/Queendiagonal/sudoku "" +enum dom bin maxdeg desc - 1 6 "lvs,12781513073" -tree
# XXX running on server XXX



# laMols with dL:

# MOLS> time ./laMols 10 data/SpecsCollection/SudokuQueen "" count "" enu "" "" "" 1 6 ""
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd     larc      lvs   larbc
# 10    count dom enu   dL   asc  relpr   1        0     627.571    1184419    11934    28814    11    16880    11934    4946
#      vals       props      elvals      prunes      mprune       probes     rounds      solc        tr   qelvals   qprunes
#   485.639      18.437      27.440      15.292     221.199      691.414      1.993     0.000     0.158     0.057     0.020
#   264.000       0.000       0.000       0.000       0.000        3.000      1.000     0.000     0.000     0.000     0.000
#   712.000     110.000     148.000     185.000     702.000     4916.000     10.000     0.000     1.383     0.272     0.318
#    50.828      17.701      24.708      18.953     194.838      616.994      1.261     0.000     0.152     0.050     0.018
#      vals         w      ltau       mind       meand        maxd        sdd        tb
#   513.986     3.413     0.045     20.166      29.396      36.986      6.722     0.117
#   385.000     2.000     0.015      3.000      13.000      13.000      0.000     0.014
#   712.000     9.000     0.066     58.000     115.667     188.000     65.675     0.204
#    43.776     1.085     0.010      6.532      13.420      21.159      8.395     0.030
# real	2m8.036s user	10m27.573s sys	0m2.901s
# The "special magic" of maxdom is not captured.
# time ./laMols 12 data/SpecsCollection/SudokuQueen "" +enum "" enu "" ddesc "" 1 12
# aborted after 3h wallclock-time without a solution found.
# Similar with dasc.


# laMols with wdL:

# MOLS> time ./laMols 10 data/SpecsCollection/SudokuQueen "" count "" enu wdL "" "" 1 6 ""
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd     larc      lvs   larbc
# 10    count dom enu  wdL   asc  relpr   1        0     815.652    1812407    17621    43862    13    26241    17621    8620
#      vals       props      elvals      prunes      mprune       probes     rounds      solc        tr   qelvals   qprunes
#   482.248      15.938      24.663      14.915     218.333      564.106      1.758     0.000     0.110     0.052     0.030
#   279.000       0.000       0.000       0.000       0.000        2.000      1.000     0.000     0.000     0.000     0.000
#   712.000     108.000     132.000     251.000     702.000     4476.000     10.000     0.000     0.876     0.257     0.545
#    49.609      15.985      23.694      17.673     202.202      475.331      0.987     0.000     0.101     0.049     0.033
#        mu         w      ltau       mind      meand       maxd        sdd        tb
#   207.479     3.044     0.129      5.952      9.642     12.612      2.780     0.100
#   165.000     2.000     0.031      1.526      4.063      4.152      0.000     0.032
#   265.000     8.000     0.227     28.307     51.435     67.714     21.804     0.280
#    12.470     1.060     0.031      2.544      5.242      8.090      2.951     0.027
# real	3m5.218s user	13m35.657s sys	0m3.754s
# The simplest exponential pattern:
# MOLS> time ./laMols 10 data/SpecsCollection/SudokuQueen "" count "" enu wdL "" "" 1 6 "0.2" ""
#   weights: 0 0 1 1.1486983549970350068 1.3195079107728942593 1.5157165665103980823 1.7411011265922482781 1.9999999999999999998 2.2973967099940700133 2.6390158215457885185 3.0314331330207961643
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd st      nds      lvs    inds
# 10    count dom enu  wdL   asc  relpr   1        0      73.338     182624     1827     4232    10  0     2405     1827     578
#      vals       props      elvals      prunes      mprune       probes    rounds      solc        tr   qelvals   qprunes
#   503.216      19.124      28.814      11.385     197.258      641.987     1.870     0.000     0.055     0.058     0.016
#   347.000       0.000       0.000       0.000       0.000        5.000     1.000     0.000     0.000     0.000     0.000
#   712.000     102.000     144.000     165.000     702.000     4170.000     8.000     0.000     0.719     0.272     0.139
#    53.915      16.721      23.412      16.579     194.783      590.398     1.138     0.000     0.066     0.046     0.016
#        mu         w      ltau       mind      meand       maxd        sdd        dp        tb
#   151.047     4.159     0.182      6.168      9.169     11.787      2.183     5.042     0.047
#   108.000     2.000     0.050      1.908      3.800      4.098      0.025     0.000     0.013
#   202.000     9.000     0.247     18.308     24.268     36.234     12.095     9.000     0.183
#    13.181     1.159     0.046      2.160      4.807      7.239      2.643     1.559     0.027
# real	0m37.452s user	1m13.341s sys	0m0.080s
# MOLS> time ./laMols 10 data/SpecsCollection/SudokuQueen "" count "" enu wdL "" "" 1 12 "0.3" ""
#   weights: 0 0 1 1.2311444133449162845 1.5157165665103980824 1.866065983073614832 2.2973967099940700136 2.8284271247461900975 3.4822022531844965564 4.2870938501451726567 5.2780316430915770374
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd st      nds      lvs    inds
# 10    count dom enu  wdL   asc  relpr   1        0      84.928     178488     1828     4185    10  0     2357     1828     529
#      vals       props      elvals      prunes      mprune       probes    rounds      solc        tr   qelvals   qprunes
#   502.746      18.321      27.411       9.521     193.087      625.467     1.859     0.000     0.155     0.055     0.013
#   341.000       0.000       0.000       0.000       0.000        5.000     1.000     0.000     0.000     0.000     0.000
#   712.000     102.000     126.000     147.000     702.000     4170.000     8.000     0.000     3.328     0.207     0.095
#    54.767      16.030      22.016      13.976     189.845      574.180     1.122     0.000     0.267     0.044     0.012
#        mu         w      ltau       mind      meand       maxd        sdd        dp        tb
#   204.883     4.454     0.107     11.231     15.454     19.492      3.103     4.836     0.144
#   139.000     2.000     0.019      2.582      6.101      6.771      0.121     0.000     0.014
#   306.000     9.000     0.140     34.071     45.967     60.146     20.709     9.000     0.620
#    23.579     1.185     0.021      3.711      6.789     10.222      3.683     1.615     0.147
# real	0m32.800s user	1m24.938s sys	0m0.436s
# MOLS> time ./laMols 10 data/SpecsCollection/SudokuQueen "" count "" enu wdL "" "" 1 12 "0.4,0.3,0.3,0.1,0.3,0.2,0.4,0"
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd     larc      lvs   larbc
# 10    count dom enu  wdL   asc  relpr   1        0     102.235     136746     1342     3059    10     1717     1342     375
#      vals      props      elvals      prunes      mprune       probes     rounds      solc        tr   qelvals   qprunes
#   504.778     18.475      27.730       9.023     187.995      608.560      1.815     0.000     0.250     0.055     0.013
#   341.000      0.000       0.000       0.000       0.000        5.000      1.000     0.000     0.000     0.000     0.000
#   712.000     95.000     153.000     215.000     702.000     4888.000     10.000     0.000     2.749     0.271     0.109
#    60.993     15.751      21.886      14.130     189.459      544.270      1.046     0.000     0.308     0.043     0.013
#        mu         w      ltau       mind      meand       maxd        sdd        tb
#   194.688     4.576     0.135      9.232     13.186     16.374      2.683     0.235
#   129.000     2.000     0.021      2.055      5.168      6.060      0.049     0.049
#   276.000     9.000     0.183     34.918     64.609     72.588     20.747     0.603
#    20.613     1.262     0.033      3.879      7.292      9.823      3.309     0.138
# real	0m13.405s user	1m42.241s sys	0m0.480s

# MOLS> time ./laMols 11 data/SpecsCollection/SudokuQueen "" +count "" enu wdL - "" 1 12 "0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.3"
# aborted after 50m wallclock-time without finding a solution.

# N=10 looks promising.


# Really interesting cases are N=16, 25.



squares A
rred A
ls A
box A
queendiag A
queenantidiag A
