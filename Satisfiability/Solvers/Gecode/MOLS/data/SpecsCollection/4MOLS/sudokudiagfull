# Counts for N >= 2:
# 0, 0, 0, 0, 0, 0, 0, 0, 0
# 0, 0, 0, ?

# How to break the 4!-symmetry between A, B, C, D ?


# gcMols:

# 2 <= N <= 12:

# MOLS> ./gcMols 2,8 data/SpecsCollection/4MOLS/sudokudiagfull "" count "" enu mindom "" 1 1 ""
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
#  2    count dom enu    mindom  asc   1         0       0.000             4           1           0      0  0
#  3    count dom enu    mindom  asc   1         0       0.000            44           1           0      0  0
#  4    count dom enu    mindom  asc   1         0       0.000           185           1           0      0  0
#  5    count dom enu    mindom  asc   1         0       0.000           214           1           0      0  0
#  6    count dom enu    mindom  asc   1         0       0.000           887           4           5      1  0
#  7    count dom enu    mindom  asc   1         0       0.000          1109           4           5      1  0
#  8    count dom enu    mindom  asc   1         0       0.167          3502          24          31      2  0
#  9    count dom enu    mindom  asc   1         0       0.188          1650           6           7      1  0
# 10    count dom enu    mindom  asc   1         0       0.011          2175           6           7      1  0
# 11    count dom enu    mindom  asc   1         0       0.014          4732          30          38      2  0
# 12    count dom enu    mindom  asc   1         0       0.025         10590          54          64      2  0
# 13    count dom enu    mindom  asc   1         0       0.060         13469          54          64      2  0

# N=14:

# MOLS> time ./gcMols 14 data/SpecsCollection/4MOLS/sudokudiagfull "" +count "" enu mindom "" 1 16 ""
# running on server XXX



# rlaMols:

# 2 <= N <= 12:

# MOLS> ./rlaMols 2,12 data/SpecsCollection/4MOLS/sudokudiagfull "" count dom enu first "" "" 1 1 ""
# solved all problems relatively quickly (9 leaves for N=12).

# N=13:

# MOLS> ./rlaMols 13 data/SpecsCollection/4MOLS/sudokudiagfull "" count dom - - "" "" 1 12 "nds,10"
# best: bin+mindom:
#  N       rt  pl  bt        bv   bo    lar gcd     satc           t        ppc st      nds      lvs
# 13    count dom bin    mindom  asc  relpr   1        0     227.167        684  0        7        4
#      mu0  qfppc  pprunes  pmprune  pprobes  rounds   solc      tr  pelvals     dp
#16459.000  0.000    0.000  109.478  109.478   1.000  0.000  64.424    0.000  1.000
#16458.000  0.000    0.000  109.478  109.478   1.000  0.000  63.068    0.000  0.000
#16460.000  0.000    0.000  109.479  109.479   1.000  0.000  65.457    0.000  2.000
#    1.000  0.000    0.000    0.001    0.001   0.000  0.000   1.227    0.000  1.000
#      mu0  qfppc  pprunes  pmprune  pprobes  rounds   solc      tr  pelvals     dp
#16414.750  6.000    0.000   11.464   14.238   1.000  0.000   8.465    0.046  2.250
#16400.000  6.000    0.000   11.415   11.451   1.000  0.000   6.890    0.037  1.000
#16457.000  6.000    0.000   11.600   22.586   1.000  0.000  13.179    0.073  3.000
#   28.182  0.000    0.000    0.091    5.566   0.000  0.000   3.143    0.018  0.957

# MOLS> time ./rlaMols 14 data/SpecsCollection/4MOLS/sudokudiagfull "" +count dom bin mindom "" "" 1 16 ""
# running on server XXX




# laMols with newvars:

# N=14:

# Optimising TAUscan via Nomad (MAX_TIME 40000s, rep=100):
# sudokudiagfull_14_newv_ave$ nomad np
# 1 75898257714133195710889533815078366634568117451481759378046976.0        0          0          0          0          0          0          0          0          0          0          0          0          0
# 2                                                         141565.440443  -1         -3         -8         -4         -5          8          8          5          6          7         -6          1        -10
# A termination criterion is reached: Maximum allowed time reached (Base) No more points to evaluate
# Best feasible solution:     #11 ( -1 -3 -8 -4 -5 8 8 5 6 7 -6 1 -10 )   Evaluation OK    f = 141565.44044274603948
# Blackbox evaluations: 38
# sudokudiagfull_14_newv_ave$ time ./TAUscan 14 ../../sudokudiagfull "" enu newv hash "0" 100 10 all
# 100 : 2.20575022128184621195e+04 3.85126707044364034273e+63 3.82733962146218895118e+65; 3.82713413433175944711e+64
# real    125m0.830s user    834m11.515s sys     134m52.197s
# sudokudiagfull_14_newv_ave$ time ./TAUscan 14 ../../sudokudiagfull "" enu newv hash "-1,-3,-8,-4,-5,8,8,5,6,7,-6,1,-10" 100 10 all
# 100 : 6.52726349981986782467e+02 1.41565440442746037434e+05 4.89200351805177043343e+06; 6.20835030989864347816e+05
# real    7m13.795s user    63m46.028s sys     0m51.368
# sudokudiagfull_14_newv_ave$ time ./TAUscan 14 ../../sudokudiagfull "" enu newv hash "-1,-3,-8,-4,-5,8,8,5,6,7,-6,1,-10" 1000 60 all
# 1000 : 6.52726349981986782467e+02 2.74125479564723101232e+49 2.74125479564723040609e+52; 8.66860880110467260402e+50
# real    37m34.514s user    1198m56.742s sys     34m5.180s
# Looks very difficult; running it nevertheless a bit:
# TAU/sudokudiagfull_14_newv_ave$ time ./laMols 14 ../../sudokudiagfull "" +count dom enu newv "" "" 1 64 "-1,-3,-8,-4,-5,8,8,5,6,7,-6,1,-10" "" ""
# running on server2 XXX



squares A B C D  AB AC AD BC BD CD
ls A B C D  AB AC AD BC BD CD
rred A B C D AB AC AD BC BD CD
rprod B AB A
rprod C AC A
rprod D AD A
rprod C BC B
rprod D BD B
rprod D CD C
box A B C D
diag A B C D
antidiag A B C D
box AB AC AD BC BD CD
diag AB AC AD BC BD CD
antidiag AB AC AD BC BD CD
