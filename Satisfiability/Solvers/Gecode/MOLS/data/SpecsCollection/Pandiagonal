# Counts for N >= 2:
# 0, 0, 0, 2, 0, 4, 0, 0, 0,
# 8, 0, >= 129, 0, 0, 0

# Remark: count != 0 iff gcd(N,6) = 1.

# Apparently not on OEIS.


# gcMols:

# 2 <= N <= 12:

# MOLS> ./gcMols 2,16 data/SpecsCollection/Pandiagonal "" count dom bin mindegdom "" 1 12 "t,5"
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
#  2    count dom bin mindegdom  asc   1         0       0.191             5           1           0      0  0
#  3    count dom bin mindegdom  asc   1         0       0.035             7           1           0      0  0
#  4    count dom bin mindegdom  asc   1         0       0.014            11           1           0      0  0
#  5    count dom bin mindegdom  asc   1         2       0.009            81           0           3      1  0
#  6    count dom bin mindegdom  asc   1         0       0.008            61           2           3      1  0
#  7    count dom bin mindegdom  asc   1         4       0.022          1160          25          57      3  0
#  8    count dom bin mindegdom  asc   1         0       0.008          4487         126         251      5  0
#  9    count dom bin mindegdom  asc   1         0       0.064         26216         873        1745     14  0
# 10    count dom bin mindegdom  asc   1         0       0.319        288574        8257       16513     18  0
# 11    count dom bin mindegdom  asc   1         8       4.639       3996237      110267      220549     25  0
# 12    count dom bin mindegdom  asc   1         0       8.993       6166249      161829      323657     23  0
# 13    count dom bin mindegdom  asc   1         0      50.870      38546220      922320     1844770     30  1
# 14    count dom bin mindegdom  asc   1         0      47.971      23730115      582048     1164178     25  1
# 15    count dom bin mindegdom  asc   1         0      45.350      19972177      473568      947216     21  1
# 16    count dom bin mindegdom  asc   1         0      47.898      18195195      411801      823684     21  1
# enu+mindegdom performs worse.
# bin+maxdom seems equivalent.

# N=13:

# MOLS> ./gcMols 13 data/SpecsCollection/Pandiagonal "" +enum dom binbr maxdom desc 12
# aborted after 40h wall-clock and 129 solutions found.
# Visual inspection indicates that there are no Sudokus, but there are
# (see SodukuPandiagonal).

# N=17:

# Seems a hard satisfiable instance.


# Unsatisfiable cases only:

# MOLS> ./gcMols "2;3;4;6;8;9;10;12" data/SpecsCollection/Pandiagonal "" count dom bin maxdom "" 1 1 ""
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
#  2    count dom bin    maxdom  asc   1         0       0.000             5           1           0      0  0
#  3    count dom bin    maxdom  asc   1         0       0.000             7           1           0      0  0
#  4    count dom bin    maxdom  asc   1         0       0.000            11           1           0      0  0
#  6    count dom bin    maxdom  asc   1         0       0.000            61           2           3      1  0
#  8    count dom bin    maxdom  asc   1         0       0.001          4487         126         251      5  0
#  9    count dom bin    maxdom  asc   1         0       0.017         26216         873        1745      6  0
# 10    count dom bin    maxdom  asc   1         0       0.191        288574        8257       16513     11  0
# 12    count dom bin    maxdom  asc   1         0       5.912       6166249      161829      323657     13  0

# Seems equivalent to mindegdom:
# MOLS> ./gcMols "2;3;4;6;8;9;10;12" data/SpecsCollection/Pandiagonal "" count dom bin mindegdom "" 1 1 ""
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
#  2    count dom bin mindegdom  asc   1         0       0.000             5           1           0      0  0
#  3    count dom bin mindegdom  asc   1         0       0.000             7           1           0      0  0
#  4    count dom bin mindegdom  asc   1         0       0.000            11           1           0      0  0
#  6    count dom bin mindegdom  asc   1         0       0.000            61           2           3      1  0
#  8    count dom bin mindegdom  asc   1         0       0.003          4487         126         251      5  0
#  9    count dom bin mindegdom  asc   1         0       0.017         26216         873        1745      6  0
# 10    count dom bin mindegdom  asc   1         0       0.192        288574        8257       16513     11  0
# 12    count dom bin mindegdom  asc   1         0       5.950       6166249      161829      323657     13  0

# N=14:

# time ./gcMols "14" data/SpecsCollection/Pandiagonal "" count dom bin mindegdom "" 1 12 ""
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
# 14    count dom bin mindegdom  asc   1         0    7031.223    3045673231    76276913   152553825     43  0
# real	10m51.224s user	117m11.229s sys	1m58.296s


# Without rred, sat-decision seems much easier for N <= 16:

# MOLS> ./gcMols "2,20" "@squares A\nls A\nmoddiag A\nmodantidiag A\n" "" count dom bin mindegdom "" 1 12 "t,30"
#  N       rt  pl  bt        bv   bo gcd      satc           t           ppc        flvs        gnds     gd st
#  2    count dom bin mindegdom  asc   1         0       0.151            10           2           3      1  0
#  3    count dom bin mindegdom  asc   1         0       0.170            34           3           5      1  0
#  4    count dom bin mindegdom  asc   1         0       0.026           125           4           7      1  0
#  5    count dom bin mindegdom  asc   1       240       0.030         11021           0         479      5  0
#  6    count dom bin mindegdom  asc   1         0       0.010           368          17          33      2  0
#  7    count dom bin mindegdom  asc   1     20160       0.585       1448175        3132       46583     20  0
#  8    count dom bin mindegdom  asc   1         0       0.005          3594         103         205      3  0
#  9    count dom bin mindegdom  asc   1         0       0.039          8852         260         519      4  0
# 10    count dom bin mindegdom  asc   1         0       0.059         32019         897        1793     13  0
# 11    count dom bin mindegdom  asc   1   3186682     139.134     396676266     1275562     8924664     31  1
# 12    count dom bin mindegdom  asc   1         0       0.503        319530        8000       15999     24  0
# 13    count dom bin mindegdom  asc   1    145148     309.708     307005113     6017434    12325331     41  1
# 14    count dom bin mindegdom  asc   1         0       6.662       3816494       90501      181001     25  0
# 15    count dom bin mindegdom  asc   1         0      31.504      13977666      323758      647515     36  0
# 16    count dom bin mindegdom  asc   1         0     161.080      65851385     1439309     2878617     41  0
# 17    count dom bin mindegdom  asc   1         0     307.556     236217682     4318609     8637636     70  1
# 18    count dom bin mindegdom  asc   1         0     305.564      84787767     1756221     3512514     17  1
# 19    count dom bin mindegdom  asc   1         0     348.469     211838611     3596791     7194283     86  1
# 20    count dom bin mindegdom  asc   1         0     322.776      69648212     1368623     2737311     20  1




# rlaMols:

# 2 <= N <= 10:

# Quickly solved by bin/enu + maxdom/mindegdom/mindom.
# Indeed all combinations of heuristics seem succesful here.

# N=11:

# MOLS> ./rlaMols 11 data/SpecsCollection/Pandiagonal "" count "" - - "" "" 1 12 "lvs,5000"
# shows exactly four combinations succesful: bin/enu + maxdom/mindegdom,
# with bin being better, and maxdom equivalent to mindegdom.

# MOLS> time ./rlaMols 11 data/SpecsCollection/Pandiagonal "" count "" enu maxdom "" "" 1 12
#   N       rt  pl  bt        bv   bo    lar  gcd       satc           t        ppc     flvs     gnds    gd     larc      lvs
#  11    count dom enu    maxdom  asc  relpr    1          8     177.985     129308     2524     5409     7     2885     2524
#      vals      props      elvals    prunes      mprune       probes    rounds      solc         t   qelvals   qprunes
#   747.895     17.412      26.606     0.231     219.098      573.521     1.253     0.003     0.483     0.036     0.000
#   482.000      0.000       0.000     0.000      10.000       24.000     1.000     0.000     0.002     0.000     0.000
#   891.000     72.000     101.000     4.000     880.000     2095.000     4.000     1.000     2.086     0.134     0.011
#    42.484     13.567      18.177     0.514     216.346      348.813     0.472     0.053     0.325     0.025     0.001
# real	0m17.358s user	2m57.994s sys	0m0.972s
# MOLS> time ./rlaMols 11 data/SpecsCollection/Pandiagonal "" count "" bin maxdom "" "" 1 12
#   N       rt  pl  bt        bv   bo    lar  gcd       satc           t        ppc     flvs     gnds    gd     larc      lvs
#  11    count dom bin    maxdom  asc  relpr    1          8     151.897      19212      361     1082     9      721      361
#      vals      props     elvals     prunes      mprune       probes    rounds      solc         t   qelvals   qprunes
#   722.158      6.556     10.566      0.460     424.057      643.122     1.286     0.011     0.428     0.015     0.001
#   481.000      0.000      0.000      0.000      12.000       28.000     1.000     0.000     0.001     0.000     0.000
#   891.000     54.000     77.000     10.000     880.000     2565.000     4.000     1.000     2.323     0.137     0.016
#   103.917      9.805     13.594      1.185     316.755      467.815     0.586     0.105     0.426     0.020     0.002
# real	0m16.606s user	2m31.901s sys	0m0.036s
# Seems to confirm that here bin+maxdom/mindegdom work well.

# N=12:

# MOLS> ./rlaMols 12 data/SpecsCollection/Pandiagonal "" count dom bin maxdom "" "" 1 12 ""
#  N       rt  pl  bt        bv   bo    lar gcd     satc           t        ppc st      nds    inds      lvs
# 12    count dom bin    maxdom  asc  relpr   1        0     202.228      29538  0     1213     606      607
#     mu0  qfppc  pprunes  pmprune  pprobes  rounds   solc     tr  pelvals      dp
# 963.528  0.241    0.036  113.424  134.528   1.272  0.000  1.203    0.046  10.612
# 892.000  0.000    0.000  111.893  112.264   1.000  0.000  0.418    0.000   0.000
#1068.000  2.000    0.401  114.350  382.548   4.000  0.000  5.051    1.304  24.000
#  35.788  0.436    0.074    0.412   45.113   0.530  0.000  0.613    0.119   4.207
#     mu0  qfppc  pprunes  pmprune  pprobes  rounds   solc     tr  pelvals      dp
# 930.542  2.411    0.032   23.607   74.502   1.300  0.000  0.636    2.033  12.591
# 862.000  1.206    0.000    1.856    3.353   1.000  0.000  0.008    0.694   5.000
#1022.000  9.000    0.837  109.402  430.401   4.000  0.000  5.247    5.686  25.000
#  32.854  1.419    0.092   18.888   81.562   0.669  0.000  0.758    0.819   3.991
# Equivalent to mindegdom.

# N=13:

# MOLS> ./rlaMols 13 data/SpecsCollection/Pandiagonal "" +count dom bin maxdom "" "" 1 12 ""
# csltok2 XXX



# laMols with dL:

# N=10:

# MOLS> time ./laMols 10 data/SpecsCollection/Pandiagonal "" +count "" enu dL "" "" 1 12 ""
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd     larc      lvs   larbc
# 10   +count dom enu   dL   asc  relpr   1        0       8.826        988       19       41     3       22       19       3
#      vals      props     elvals     prunes      mprune       probes    rounds      solc        tr   qelvals   qprunes
#   592.409      7.909     13.591      3.182     193.864      405.955     1.091     0.000     0.331     0.023     0.006
#   557.000      0.000      0.000      0.000      50.000      166.000     1.000     0.000     0.144     0.000     0.000
#   650.000     15.000     21.000     23.000     640.000     1174.000     2.000     0.000     0.960     0.034     0.020
#    26.586      3.544      5.404      6.200     178.038      281.089     0.294     0.000     0.230     0.009     0.007
#        mu         w      ltau       mind      meand       maxd        sdd        dp        tb
#   625.333     7.000     0.058     28.333     35.667     48.333      8.190     0.667     0.512
#   613.000     7.000     0.055     27.000     30.143     33.000      2.100     0.000     0.483
#   650.000     7.000     0.065     29.000     38.429     56.000     11.236     1.000     0.528
#    21.362     0.000     0.006      1.155      4.784     13.279      5.275     0.577     0.025
# real	0m0.752s user	0m8.835s sys	0m0.000s
# MOLS> time ./laMols 11 data/SpecsCollection/Pandiagonal "" +enum "" enu dL "" "" 1 12 ""
# aborted after 2min wallclock-time without finding a solution.



# laMols with wdL:

# N=11:

# MOLS> time ./laMols 11 data/SpecsCollection/Pandiagonal "" +count "" enu wdL "" "" 1 12 ""
# aborted after 3min wallclock-time without finding a solution.
# Some hand-optimisation yields
# time ./laMols 11 data/SpecsCollection/Pandiagonal "" +count "" enu wdL "" "" 1 12 "0.1,0.2,0.2,0.2,0.2,1,1,1,1"
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd     larc      lvs   larbc
# 11   +count dom enu  wdL   asc  relpr   1        8     119.193      72164     1320     2857    10     1537     1320     217
#      vals      props     elvals    prunes      mprune       probes    rounds      solc        tr   qelvals   qprunes
#   730.277     17.868     25.855     0.193     250.700      700.064     1.492     0.005     0.210     0.036     0.000
#   487.000      0.000      0.000     0.000       0.000        7.000     1.000     0.000     0.000     0.000     0.000
#   891.000     48.000     70.000     4.000     880.000     2294.000     4.000     1.000     2.284     0.143     0.011
#    60.851     12.764     16.748     0.504     235.271      435.731     0.612     0.072     0.319     0.023     0.001
#        mu         w      ltau       mind      meand       maxd       sdd        dp        tb
#   240.378     7.078     0.094     23.794     26.348     29.122     1.739     3.521     0.266
#   128.000     3.000     0.037      4.853      5.582      5.672     0.000     0.000     0.016
#   410.000     8.000     0.288     55.982     55.982     55.982     3.862     8.000     0.997
#    50.014     1.170     0.054     11.236     11.896     13.003     0.831     1.418     0.301
# real	0m41.486s user	1m59.197s sys	0m0.202s
# MOLS> time ./laMols 11 data/SpecsCollection/Pandiagonal "" +count "" bin wdL "" "" 1 12 "0.1,0.2,0.2,0.2,0.2,1,1,1,1"
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd     larc      lvs   larbc
# 11   +count dom bin  wdL   asc  relpr   1        8   12338.953    1431490    29658    88973    15    59315    29658   29657
#      vals      props      elvals     prunes      mprune       probes    rounds      solc        tr   qelvals   qprunes
#   666.586      4.815       8.340      0.089     361.829      443.041     1.045     0.000     0.464     0.013     0.000
#   432.000      0.000       0.000      0.000       0.000        5.000     1.000     0.000     0.000     0.000     0.000
#   891.000     96.000     119.000     16.000     880.000     3400.000     6.000     1.000     3.962     0.155     0.024
#    67.277      7.851      11.509      0.396     311.371      305.552     0.249     0.012     0.376     0.017     0.001
#        mu         w      ltau      mind      meand       maxd        sdd        tb
#   185.307     2.000     0.314     0.544      5.085      9.627      4.541     0.849
#   124.000     2.000     0.045     0.159      2.752      5.293      2.542     0.099
#   410.000     2.000     0.453     1.866     31.406     62.571     31.164     2.082
#    31.248     0.000     0.110     0.643      3.694      6.881      3.200     0.308
# real	19m36.109s user	205m38.958s sys	1m30.242s
# Trying to extend that weight-tuple, by extending the 0.2-middle-part:
# MOLS> time ./laMols 12 data/SpecsCollection/Pandiagonal "" satd "" enu wdL "" relpr 1 12 "0.1,0.2,0.2,0.2,0.2,0.2,1,1,1,1"
# aborted after 11h wallclock-time without decision.



# laMols with newvars:

# N=11:

# MOLS> time ./laMols 11 data/SpecsCollection/Pandiagonal "" +count "" enu newv "" "" 1 12 "0,0,0,0,0,0,10,0,0,0"
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd     larc      lvs   larbc
# 11   +count dom enu newv   asc  relpr   1        8     174.010      77177     1422     3083    10     1661     1422     239
#      vals      props     elvals    prunes      mprune       probes    rounds      solc        tr   qelvals   qprunes
#   727.683     18.201     26.031     0.196     252.067      717.053     1.528     0.005     0.801     0.036     0.000
#   487.000      0.000      0.000     0.000       0.000        6.000     1.000     0.000     0.001     0.000     0.000
#   891.000     49.000     74.000     4.000     880.000     2549.000     4.000     1.000     3.419     0.124     0.007
#    59.547     12.986     17.069     0.464     237.097      448.901     0.638     0.069     0.522     0.024     0.001
#           mu         w      ltau          mind         meand          maxd          sdd        dp        tb
#    84847.079     6.946     0.005      9271.167     10685.980     12303.552     1019.743     3.632     0.847
#    15425.000     3.000     0.000        19.000        20.800        21.000        0.000     0.000     0.383
#   112640.000     8.000     0.077     28673.000     28673.000     28673.000     2225.907     8.000     1.255
#    22142.529     1.104     0.017      6057.231      6463.584      7148.132      494.843     1.414     0.165
# real	0m17.278s user	2m54.012s sys	0m1.685s
# Small improvement:
# MOLS> time ./laMols 11 data/SpecsCollection/Pandiagonal "" +count "" enu newv "" "" 1 12 "0,0,0,0,2,0,10,0,0,0"
#  N       rt  pl lbt  dis   lbo    lar gcd     satc           t        ppc     flvs     gnds    gd     larc      lvs   larbc
# 11   +count dom enu newv   asc  relpr   1        8     108.659      76692     1414     3063     8     1649     1414     235
#      vals      props     elvals    prunes      mprune       probes    rounds      solc        tr   qelvals   qprunes
#   728.571     18.151     25.927     0.192     251.410      716.491     1.527     0.005     0.435     0.036     0.000
#   488.000      0.000      0.000     0.000       0.000        6.000     1.000     0.000     0.000     0.000     0.000
#   891.000     49.000     75.000     4.000     880.000     2549.000     4.000     1.000     2.168     0.153     0.007
#    58.830     12.926     16.941     0.460     237.026      449.396     0.637     0.070     0.349     0.024     0.001
#           mu         w      ltau           mind          meand           maxd          sdd        dp        tb
#   342859.123     7.013     0.001      37709.511      43465.055      50045.417     4148.340     3.557     0.498
#    61700.000     4.000     0.000         62.000         67.600         71.000        0.000     0.000     0.059
#   450560.000     8.000     0.024     114689.000     114689.000     114689.000     8903.627     7.000     0.990
#    85180.923     0.985     0.005      23945.278      25462.819      28101.377     1922.546     1.304     0.223
# real	0m14.909s user	1m48.660s sys	0m0.715s
# N=12, with a zero added at the end to the weights:
# MOLS> time ./laMols 12 data/SpecsCollection/Pandiagonal "" satd "" enu newv - "" 1 12 "0,0,0,0,0,0,10,0,0,0,0"
# asc aborted after 90min wallclock, desc aborted after 25min.


squares A
rred A
ls A
moddiag A
modantidiag A
