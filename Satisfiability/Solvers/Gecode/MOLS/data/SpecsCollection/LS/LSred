# Counts for n >= 2:
# 1, 1, 4, 56, 9408, 16942080

# https://oeis.org/A000315 :
# 1, 1, 1, 4, 56, 9408, 16942080, 535281401856, 377597570964258816, 7580721483160132811489280, 5363937773277371298119673540771840

# gcMols:

# Running all variable-selections, with fixed domain-propagation:
# MOLS> ./gcMols 7 data/SpecsCollection/LSred "" count "" "-" "" ""
#  - first-var, min-deg-va, max-deg-var are exactly identical
#    (each having roughly twice as many nodes as solutions)
#  - min-dom-var is very similar to those three, max-dom-var is 50% worse
#  - min-deg/dom-var is similar to max-dom-var, max-deg/dom-var is similar
#    to min-dim-var
#  - min-min-reg-var is in a middle position, max-min-reg-var is more similar
#    to the first group, min-max-reg-var is inbetween these two,
#    max-max-reg-var again more similar to the first group.
# So best is first-var: unsatisfiability for these benchmarks is very easy
# (for these N), the only problem is the large number of solutions
# Now looking for the fastest form of propagation:
# MOLS> ./gcMols 7 data/SpecsCollection/LSred "" count "-" "first" "" ""
# domain-prop first-var bin-branch-min 16942080 52.848 336588091 0 33884159 27
# default-prop first-var bin-branch-min 16942080 37.791 234239296 1320436 36525031 29
# values-prop first-var bin-branch-min 16942080 37.750 234239296 1320436 36525031 29
# bounds-prop first-var bin-branch-min 16942080 68.112 346209659 102212 34088583 27
#
# So values-prop with first-var seems best.
#
# Concerning binary vs enumerate branching, all seem very similar:
# MOLS> ./gcMols 7 data/SpecsCollection/LSred "" count "val" "first" "-" ""
# values-prop first-var bin-branch-min 16942080 38.150 234239296 1320436 36525031 29
# values-prop first-var bin-branch-max 16942080 40.187 233668480 1320436 36525031 29
# values-prop first-var enum-branch-min 16942080 40.717 233298591 1320436 34124615 20
# values-prop first-var enum-branch-max 16942080 38.567 233389877 1320436 34124615 20

# For sat-decision (larger N) best seems dom+enu+maxdeg+desc:
# MOLS> ./gcMols "60,80,5" data/SpecsCollection/LSred "" satd dom enu maxdeg desc 1
#    N       rt  pl  bt        bv   bo           satc          t          ppc        flvs        gnds     gd
#   60     satd dom enu    maxdeg desc              1      2.125       142083           0        2624   2623
#   65     satd dom enu    maxdeg desc              1      3.426       186649           0        3228   3227
#   70     satd dom enu    maxdeg desc              1      5.337       229797           0        3678   3677
#   75     satd dom enu    maxdeg desc              1      8.385       280361           0        4194   4193
#   80     satd dom enu    maxdeg desc              1     12.237       336124           0        4711   4710


# rlaMols:

# Has a much worse performance fpr sat-decision(nearly no la-reductions);
# best seems bnd+enu+first+asc+eagnpr for say N<=24 (taking around 34s).


squares A
ls A
red A
