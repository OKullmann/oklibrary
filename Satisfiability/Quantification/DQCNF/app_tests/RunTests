#!/bin/bash
set -o errexit
set -o nounset

program="RunTests"
version="0.1.1"

testdir="app_tests"

tempfile="${program}_$$"

# translator1="valgrind -q --exit-on-first-error=yes ./autL1_debug"
translator1="valgrind -q ./autL1_debug"
translator2="./autL1"
declare -a translators=("${translator1}" "${translator2}")

countsolver1=${1:-"ctawSolver"}
satsolver1=${2:-"tawSolver"}
satsolver2=${3:-"OKsolver_2002-O3-DNDEBUG"}

for S in "${translators[@]}"; do

set +e
  echo "" | $S "-cin" -nil -nil g 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 25 )); then
    echo "ERROR with translator \"${S}\" on empty input: wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo -e "c\nc\nc" | $S "-cin" -nil -nil g 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 25 )); then
    echo "ERROR with translator \"${S}\" on empty line: wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo " " | $S "-cin" -nil -nil g 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 26 )); then
    echo "ERROR with translator \"${S}\" on bad comment-line: wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo "p0" | $S "-cin" -nil -nil g 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 3 )); then
    echo "ERROR with translator \"${S}\" on bad p-line (no space): wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo "p" | $S "-cin" -nil -nil g 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 3 )); then
    echo "ERROR with translator \"${S}\" on bad p-line: wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo "p " | $S "-cin" -nil -nil g 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 3 )); then
    echo "ERROR with translator \"${S}\" on bad p-line (no \"cnf\"): wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo "p cnf" | $S "-cin" -nil -nil g 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 3 )); then
    echo "ERROR with translator \"${S}\" on bad p-line (no n): wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo "p cnf x" | $S "-cin" -nil -nil g 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 3 )); then
    echo "ERROR with translator \"${S}\" on bad p-line (bad n): wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo "p cnf 3000000000" | $S "-cin" -nil -nil g 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 4 )); then
    echo "ERROR with translator \"${S}\" on bad p-line (large n): wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo "p cnf 0" | $S "-cin" -nil -nil g 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 27 )); then
    echo "ERROR with translator \"${S}\" on bad p-line (bad c): wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo "p cnf 0 0 " | $S "-cin" -nil -nil g 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 3 )); then
    echo "ERROR with translator \"${S}\" on bad p-line (trailing): wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo -e "p cnf 0 0\nc" | $S "-cin" -nil -nil n 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 28 )); then
    echo "ERROR with translator \"${S}\" on illegal comment: wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo -e "p cnf 0 0\nc" | $S "-cin" -nil -nil g 2
  returncode=$?
set -e
  if(( returncode != 0 )); then
    echo "ERROR with translator \"${S}\" on legal comment: wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo -e "p cnf 1 0\na 1 0\na 0" | $S "-cin" -nil -nil n 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 11 )); then
    echo "ERROR with translator \"${S}\" on repeated a-line: wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo -e "p cnf 1 0\na 1 0\na 0" | $S "-cin" -nil -nil g 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 0 )); then
    echo "ERROR with translator \"${S}\" on legal repeated (empty) a-line: wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo -e "p cnf 1 0\na x 0" | $S "-cin" -nil -nil n 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 13 )); then
    echo "ERROR with translator \"${S}\" on bad a-read: wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo -e "p cnf 1 0\na 2 0" | $S "-cin" -nil -nil n 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 7 )); then
    echo "ERROR with translator \"${S}\" on too big a-read: wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo -e "p cnf 1 0\na 1 1 0" | $S "-cin" -nil -nil g 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 15 )); then
    echo "ERROR with translator \"${S}\" on repeated a-read: wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo -e "p cnf 1 0\na 0" | $S "-cin" -nil -nil n 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 19 )); then
    echo "ERROR with translator \"${S}\" on empty a-line: wrong return-code ${returncode}."
    exit 1
  fi

set +e
  echo -e "p cnf 1 0\na 0" | $S "-cin" -nil -nil g 2> /dev/null
  returncode=$?
set -e
  if(( returncode != 0 )); then
    echo "ERROR with translator \"${S}\" on legal empty a-line: wrong return-code ${returncode}."
    exit 1
  fi

# XXXXX

  file="${testdir}/Maxima_2903.dqdimacs"
set +e
  $S ${file} ${tempfile} ${tempfile} vs 1
  returncode=$?
set -e
  if (( returncode != 0 )); then
    echo "ERROR with translator \"${S}\" on ${file}."
    exit 1
  fi
  result=$(${countsolver1} ${tempfile} | awk '/number_of_solutions/{print $3}')
  if (( result != 2903 )); then
    echo -e "Wrong count with translator \"${S}\" on ${file}."
    exit 2
  fi
  rm ${tempfile}

  file="${testdir}/Maxima_271.dqdimacs"
set +e
  $S ${file} ${tempfile} ${tempfile} vs 1
  returncode=$?
set -e
  if (( returncode != 0 )); then
    echo "ERROR with translator \"${S}\" on ${file}."
    exit 3
  fi
  result=$(${countsolver1} ${tempfile} | awk '/number_of_solutions/{print $3}')
  if (( result != 270 )); then
    echo -e "Wrong count ${result} with translator \"${S}\" on ${file}."
    exit 4
  fi
  rm ${tempfile}

   file="${testdir}/bloem_ex2.dqdimacs"
set +e
  $S ${file} ${tempfile} ${tempfile} g 1
  returncode=$?
set -e
  if (( returncode != 0 )); then
    echo "ERROR with translator \"${S}\" on ${file}: return-code ${returncode}."
    exit 5
  fi
set +e
  ${satsolver1} ${tempfile} -nil -nil
  returncode=$?
set -e
  if (( returncode != 10 )); then
    echo "ERROR with solver ${satsolver1} on ${file}: return-code ${returncode}."
    exit 6
  fi
  rm ${tempfile}
set +e
  $S ${file} ${tempfile} ${tempfile} n 1 2> /dev/null
  returncode=$?
set -e
  if (( returncode != 28 )); then
    echo "ERROR with translator \"${S}\" on ${file}: return-code ${returncode}."
    exit 7
  fi
  rm ${tempfile}

   file="${testdir}/bloem_sh_u.dqdimacs"
set +e
  $S ${file} ${tempfile} ${tempfile} g 1
  returncode=$?
set -e
  if (( returncode != 0 )); then
    echo "ERROR with translator \"${S}\" on ${file}."
    exit 8
  fi
set +e
  ${satsolver2} ${tempfile} > /dev/null
  returncode=$?
set -e
  if (( returncode != 20 )); then
    echo "ERROR with ${satsolver2} on ${file}."
    exit 9
  fi
  rm ${tempfile}

done
