#!/usr/bin/env bash
# Oliver Kullmann, 2.4.2020 (Swansea)
# Copyright 2020 Oliver Kullmann
# This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
# it and/or modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation and included in this library; either version 3 of the
# License, or any later version. */

# USAGE:

# SATWrap_minisat ...

# reads from standard input, creates a directory, containing the files
#  - err    : contains error-output (to standard error) of the solver
#  - log    : contains all the normal output (to standard output) of the solver
#  - status : the return-code of the solver
#  - pass   : the partial assignments, as a clause (the literals set to true)

# No error iff the err-file is empty iff status contains one of 0,10,20.
# If pass is not disable: (by setting it to /dev/null -- see below):
#   minisat determined unsatisfiability iff pass exists and is empty.
#   minisat determined satisfiability iff pass exists and is non-empty.

# Variables for customisation, and their default-values:

# solvercall      = "minisat-2.2.0"
# inputfile       = "/dev/stdin"

# outputdirectory = "$SATWrap_minisat_${inputfilename}_${timestamp}"

# outputfile      = "/dev/stdout"
# assignmentfile  = "${outputdirectory}/pass"
# logfile         = "${outputdirectory}/log"
# errfile         = "${outputdirectory}/err"
# statusfile      = "${outputdirectory}/status"

# Not producing one of the five outputs can happen via using "/dev/null".

# EXAMPLES:

# Solving a random CNF:
# ./BRG "500*100,3" | SATWrap_minisat

# Using a file for input, plus arguments:
# > ./BRG "800*200,3" "" "" ""
# Output to file "BlRaGe_200_800_1009.dimacs".
# > inputfile="BlRaGe_200_800_1009.dimacs" ./SATWrap_minisat -no-pre
# SATWrap_minisat_BlRaGe_200_800_1009.dimacs_1585826233155635533
# > ls -l SATWrap_minisat_BlRaGe_200_800_1009.dimacs_1585826233155635533
# 0 Apr  2 12:17 err
# 2017 Apr  2 12:17 log
# 788 Apr  2 12:17 pass
# 3 Apr  2 12:17 status


# #########################

set -o errexit
set -o nounset

program="SATWrap_minisat"
version="0.2.1"

: ${solvercall:="minisat-2.2.0"}

: ${inputfile:="/dev/stdin"}
inputfilename="$(basename ${inputfile})"

: ${outputfile:="/dev/stdout"}

timestamp="$(date +%s%N)"

: ${outputdirectory:="${program}_${inputfilename}_${timestamp}"}

mkdir ${outputdirectory}

: ${assignmentfile:="${outputdirectory}/pass"}
: ${logfile:="${outputdirectory}/log"}
: ${errfile:="${outputdirectory}/err"}
: ${statusfile:="${outputdirectory}/status"}


handler() {
  echo "0" > ${statusfile}
  if [ ${assignmentfile} != "/dev/null" ]; then
    sed -i "1d" ${assignmentfile}
  fi
  echo " ${outputdirectory}" >> ${outputfile}
  exit 0
}

trap handler SIGINT


if [ ${assignmentfile} == "/dev/null" ]; then
  set +e
  ${solvercall} "$@" ${inputfile} 1> ${logfile} 2> ${errfile}
  exitstatus=$?
  set -e
  echo "${exitstatus}" > ${statusfile}
else
  set +e
  ${solvercall} "$@" ${inputfile} ${assignmentfile} 1> ${logfile} 2> ${errfile}
  exitstatus=$?
  set -e
  echo "${exitstatus}" > ${statusfile}
  if [[ ${exitstatus} == 0 ]] || [[ ${exitstatus} == 10 ]] || [[ ${exitstatus} == 20 ]]; then
    sed -i "1d" ${assignmentfile}
  fi
fi

echo "${outputdirectory}" >> ${outputfile}
