A) Computing wtau

> ./ExperimentsTau -v
** Information on the program:
author:             "Oliver Kullmann"
 url:               "https://github.com/OKullmann/oklibrary/blob/master/Satisfiability/Transformers/Generators/Numerics/ExperimentsTau.cpp"
 license:           "GPL v3"
program name:       ExperimentsTau
 version:           0.1.0
 last change:       8.11.2020
 git-id:            35764ed3a7c51a2ba3a74b2b81fe2ae9f2273d8b
machine name:       cs-kullmann-server.swan.ac.uk
 bogomips:          5400
compiler version:   g++ 10.2.0
 date:              Nov_8_2020 21:57:11
 options:           "--std=c++17 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-signed-zeros -fno-math-errno -fno-trapping-math -fno-finite-math-only -fno-unsafe-math-optimizations -fno-associative-math -fno-reciprocal-math"
 NDEBUG:            defined
 OPTIMIZE:          on
** Digits of arithmetic types:
 unsigned:          32
 unsigned long:     64
 unsigned long long:64
 double:            53
 long double:       64
 radix long double: 2
The random device uses unsigned, and reports entropy 0.
** Current date, time, and ticks since the Unix epoch (1.1.1970):
  08.11.2020 22:06:19_+0000 1604873179600973939
  Number of ticks per nanosecond = 1.
  Underlying arithmetic type of ticks-count: signed integral with 63 digits.


First ge1:

Numerics> time ./ExperimentsTau 21 4 100000 1 > Out1 &
real    907m33.800s
user    907m31.350s
sys     0m0.025s
> E=read.table("Out1", head=TRUE)
> summary(E)
       x                   it             sdit
 Min.   :1.000e+00   Min.   :0.000   Min.   :0.0000
 1st Qu.:3.500e+05   1st Qu.:2.000   1st Qu.:0.1263
 Median :6.000e+10   Median :3.052   Median :0.3611
 Mean   :3.175e+19   Mean   :2.527   Mean   :0.2820
 3rd Qu.:8.499e+15   3rd Qu.:3.248   3rd Qu.:0.4199
 Max.   :1.100e+21   Max.   :4.408   Max.   :0.8364
> postscript("Out1.ps")
> plot(log(E$x)/log(10), E$it)
> lines(log(E$x)/log(10), E$sd)
> dev.off()

A nice plot.
Roughly 7MB ps-file.

Rerunning with version 0.1.1, now with maximum and minimum:
> time ./ExperimentsTau 21 4 100000 1 > Out1_minmax &
> E=read.table("Out1_minmax", header=TRUE)
> summary(E)
       x                  min             max             mean
 Min.   :1.000e+00   Min.   :0.000   Min.   :0.000   Min.   :0.000
 1st Qu.:3.500e+05   1st Qu.:2.000   1st Qu.:2.000   1st Qu.:2.000
 Median :6.000e+10   Median :3.000   Median :4.000   Median :3.052
 Mean   :3.175e+19   Mean   :2.364   Mean   :3.287   Mean   :2.527
 3rd Qu.:8.499e+15   3rd Qu.:3.000   3rd Qu.:4.000   3rd Qu.:3.248
 Max.   :1.100e+21   Max.   :4.000   Max.   :8.000   Max.   :4.408
       sd
 Min.   :0.0000
 1st Qu.:0.1263
 Median :0.3611
 Mean   :0.2820
 3rd Qu.:0.4199
 Max.   :0.8364
> table(E$max)
    0     1     2     3     4     5     6     7     8
23622 21865 10205 40376 61865 35537 13901  2607     1
> plot(E$x[E$x<=3], E$mean[E$x<=3])
> abline(v=seq(1,3,0.1))

The maximum is reached for 1.4 <= x <= 1.8.



Deficient lower bound for le1:

Numerics> time ./ExperimentsTau 21 4 100000 0 > Out0 &
real    6892m36.465s
user    6892m17.804s
sys     0m0.042s
> E=read.table("Out0", header=TRUE)
> summary(E)
       x                   it              sdit
 Min.   :0.0000000   Min.   : 2.042   Min.   :0.01516
 1st Qu.:0.0000000   1st Qu.:14.234   1st Qu.:0.33049
 Median :0.0000000   Median :26.098   Median :0.37673
 Mean   :0.0126857   Mean   :25.888   Mean   :0.37760
 3rd Qu.:0.0000029   3rd Qu.:37.267   3rd Qu.:0.42649
 Max.   :0.9990010   Max.   :49.130   Max.   :0.71172
> plot(log(E$x)/log(10), E$it)
> L = lm(E$it ~ log(E$x/log(10)))
> summary(L)
Residuals:
    Min      1Q  Median      3Q     Max
-0.7398 -0.2746 -0.0128  0.2348  1.5108
Coefficients:
                   Estimate Std. Error t value Pr(>|t|)
(Intercept)       1.789e+00  1.703e-03    1050   <2e-16 ***
log(E$x/log(10)) -9.452e-01  5.859e-05  -16133   <2e-16 ***
Residual standard error: 0.3747 on 209977 degrees of freedom
Multiple R-squared:  0.9992,    Adjusted R-squared:  0.9992
F-statistic: 2.603e+08 on 1 and 209977 DF,  p-value: < 2.2e-16

The plot looks like a perfect step-function on a straight line.


B) Computing wtau with improved le1

> ./ExperimentsTau -v
program name:       ExperimentsTau
 version:           0.1.2
 last change:       13.11.2020
 git-id:            0c8bab4b48da8a22325a40a459836c9d34f6cbe0
machine name:       cs-kullmann-server.swan.ac.uk
 bogomips:          5400
compiler version:   g++ 10.2.0
 date:              Nov_13_2020 22:00:10
 options:           "--std=c++20 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-signed-zeros -fno-math-errno -fno-trapping-math -fno-finite-math-only -fno-unsafe-math-optimizations -fno-associative-math -fno-reciprocal-math"
 NDEBUG:            defined
 OPTIMIZE:          on

ge1:

Numerics> time ./ExperimentsTau 21 4 100000 1 > Out1_2 &
real    909m8.228s
user    909m5.731s
sys     0m0.018s
> E=read.table("Out1_2", header=TRUE)
> summary(E)
       x                  min             max             mean
 Min.   :1.000e+00   Min.   :0.000   Min.   :0.000   Min.   :0.000
 1st Qu.:3.500e+05   1st Qu.:2.000   1st Qu.:2.000   1st Qu.:2.000
 Median :6.000e+10   Median :3.000   Median :4.000   Median :3.052
 Mean   :3.175e+19   Mean   :2.364   Mean   :3.287   Mean   :2.527
 3rd Qu.:8.499e+15   3rd Qu.:3.000   3rd Qu.:4.000   3rd Qu.:3.248
 Max.   :1.100e+21   Max.   :4.000   Max.   :8.000   Max.   :4.408
       sd
 Min.   :0.0000
 1st Qu.:0.1263
 Median :0.3611
 Mean   :0.2820
 3rd Qu.:0.4199
 Max.   :0.8364


le1:

Numerics> time ./ExperimentsTau 21 4 100000 0 > Out0_2 &
real    1247m5.478s
user    1247m1.785s
sys     0m0.064s
> E=read.table("Out0_2", header=TRUE)
> summary(E)
       x                  min             max            mean
 Min.   :0.0000000   Min.   :2.000   Min.   :3.00   Min.   :2.042
 1st Qu.:0.0000000   1st Qu.:3.000   1st Qu.:4.00   1st Qu.:3.169
 Median :0.0000000   Median :3.000   Median :5.00   Median :3.256
 Mean   :0.0126857   Mean   :3.365   Mean   :4.86   Mean   :3.576
 3rd Qu.:0.0000029   3rd Qu.:4.000   3rd Qu.:5.00   3rd Qu.:4.119
 Max.   :0.9990010   Max.   :4.000   Max.   :7.00   Max.   :4.360
       sd
 Min.   :0.01516
 1st Qu.:0.33789
 Median :0.37746
 Mean   :0.38192
 3rd Qu.:0.42493
 Max.   :0.69429

Improved, but still substantially worse than ge1.


B) Computing wtau with new alternative use of upper bound

> ./ExperimentsTau -v
program name:       ExperimentsTau
 version:           0.2.1
 last change:       15.11.2020
 git-id:            0768ebcf263745193488722f01de01a8a6d86a99
machine name:       cs-kullmann-server.swan.ac.uk
 bogomips:          5400
compiler version:   g++ 10.2.0
 date:              Nov_15_2020 20:46:22
 options:           "--std=c++20 -pedantic -Ofast -DNDEBUG -march=native -fwhole-program -static -fno-signed-zeros -fno-math-errno -fno-trapping-math -fno-finite-math-only -fno-unsafe-math-optimizations -fno-associative-math -fno-reciprocal-math"
 NDEBUG:            defined
 OPTIMIZE:          on


Lower bound:

Numerics> time ./ExperimentsTau 21 4 100000 0 > Out0_3 &
real    915m45.490s
user    915m42.950s
sys     0m0.097s

Upper bound:

Numerics> time ./ExperimentsTau 21 4 100000 1 > Out1_3 &
real    792m6.141s
user    792m3.923s
sys     0m0.012s

> E0=read.table("Out0_3", header=TRUE)
> summary(E0)
       x                  min             max             mean
 Min.   :1.000e+00   Min.   :0.000   Min.   :0.000   Min.   :0.000
 1st Qu.:3.500e+05   1st Qu.:2.000   1st Qu.:2.000   1st Qu.:2.000
 Median :6.000e+10   Median :3.000   Median :4.000   Median :3.052
 Mean   :3.175e+19   Mean   :2.364   Mean   :3.287   Mean   :2.527
 3rd Qu.:8.499e+15   3rd Qu.:3.000   3rd Qu.:4.000   3rd Qu.:3.248
 Max.   :1.100e+21   Max.   :4.000   Max.   :8.000   Max.   :4.408
       sd
 Min.   :0.0000
 1st Qu.:0.1263
 Median :0.3611
 Mean   :0.2820
 3rd Qu.:0.4199
 Max.   :0.8364
> E1=read.table("Out1_3", header=TRUE)
> summary(E1)
       x                  min             max             mean
 Min.   :1.000e+00   Min.   :0.000   Min.   :0.000   Min.   :0.000
 1st Qu.:3.500e+05   1st Qu.:1.000   1st Qu.:2.000   1st Qu.:1.024
 Median :6.000e+10   Median :2.000   Median :3.000   Median :2.156
 Mean   :3.175e+19   Mean   :1.872   Mean   :2.777   Mean   :2.032
 3rd Qu.:8.499e+15   3rd Qu.:3.000   3rd Qu.:4.000   3rd Qu.:3.167
 Max.   :1.100e+21   Max.   :4.000   Max.   :7.000   Max.   :4.459
       sd
 Min.   :0.00000
 1st Qu.:0.09773
 Median :0.36258
 Mean   :0.28044
 3rd Qu.:0.41816
 Max.   :1.49667
> Dm = E0$mean - E1$mean
> summary(Dm)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
-1.7390  0.0000  0.4180  0.4957  0.9881  2.0000
> plot(log10(E0$x), Dm)
> abline(h=seq(-2,2,0.1))
> abline(v=seq(1,21,0.5))

For log10(x) <= 15.5 (roughly) there seems a periodical movement, alternating
between Dm ~ 1 and Dm ~ 0, while for log10(x) > 15.5 it looks more
equally distributed between -1 and 1.

> Dstart = Dm[log10(E0$x) <= 15.5]
> summary(Dstart)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
-0.4395  0.0407  0.7056  0.5374  0.9754  1.4900
> Drest = Dm[log10(E0$x) >= 15.5]
> summary(Drest)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
-1.7390  0.0000  0.0000  0.3858  1.0000  2.0000
> plot(Drest)

Actually, also for 15.5 <= log10(x) <= 17 most points seem > 0:
> summary(Dmiddle)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
-1.0000  0.0000  0.2690  0.3996  0.8913  2.0000
> plot(Dmiddle)
> Drest2 = Dm[log10(E0$x) >= 17]
> summary(Drest2)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
-1.7390  0.0000  0.0000  0.3802  1.0000  2.0000
> plot(Drest2)

Perhaps it's an issue of precision.

One would assume that the ub-version (version 1) takes somewhat longer.
Thus perhaps for log10(x) >= 17 version 0 should be preferred.
