// x''(t) = -sgn(x(t)) / x(t)^2

// F(t, y) = (y[1], FP::copysign(1/FP::sq(y[0]), -y[0])):
const F_t F = [](const x_t, const y_t y)
  {return y_t{y[1], FP::copysign(1/FP::sq(y[0]), -y[0])};};

constexpr x_t x0 = 0;
constexpr Float_t a = 1; // fixed for now
constexpr Float_t b = 2;
const y_t y0h = {a,b};

const f_t sol = [](const x_t)
  {return y_t{};};

constexpr Float_t E = FP::sq(b) / 2;

constexpr Float_t max_x = E >= 1 ? FP::pinfinity : 1 / (1 - E);
constexpr Float_t min_v = E >= 1 ? FP::sqrt(FP::sq(b) - 2) : FP::minfinity;
