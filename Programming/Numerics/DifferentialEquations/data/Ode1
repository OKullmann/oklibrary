1) Extreme spikes of accuracies

Using

  const FP::float80 c = 10;
  const RK41d_80::F_t F = [](const FP::float80 x, const FP::float80 y)
  {return FP::fma(FP::cos(x), y + x*x, - 2*x);};
  const RK41d_80::f_t sol = [](const FP::float80 x)
  {return c * FP::exp(FP::sin(x)) - x*x;};
  const FP::float80 x0 = 0, y0h = sol(x0);

that is,

  F(x,y) = cos(x) (y + x^2) - 2x

  sol(x) = c exp(sin(x)) - x^2
  sol(0) = c

yields

> ./Ode1 -10 10 1000 1000
1000 1000 25000
x  : -10 0 10
y  : (-94.195903379527587101,10) -34.65542515257776238 (24.885053074372062341,1.46)
  ms: -20.863253535788473048 31.218207540743567614
span_y / span_x = 5.954047822694982472
acc: 0 (1998977,-5.0599999999999999999)
  msm: 2482.3176823176823176 63178.015484473874082 102

has one extreme spike (and two much smaller spikes); median-accuracy = 102.

> ./Ode1 -10 10 5000 5000
5000 5000 25000
x  : -10 0 10
y  : (-94.195903379527583701,10) -34.655404847300224441 (24.885093684927134821,1.4639999999999999993)
  ms: -20.809119626840431934 31.171505777237594045
span_y / span_x = 5.9540498532227359258
acc: 0 (3718413,-5.0600000000000000004)
  msm: 2524.425514897020596 63432.388900861733319 404

Three smaller spikes show up; again median-accuracy = 404.

> ./Ode1 -10 10 10000 10000
10000 10000
x  : -10 10
y  : (-94.1959,10) (24.8851,1.462)
-20.8024 31.1657
acc: 0 (1.93055e+07,-5.06)
6990.48 211537 1040

Same picture.

> ./Ode1 -10 10 20000 20000
20000 20000
x  : -10 10
y  : (-94.1959,10) (24.8851,1.462)
-20.799 31.1627
acc: 0 (7.50976e+07,-3.105)
22216.5 706197 1363

Now the smaller spike got larger (still four spikes) --
perhaps they are all similar.

> ./Ode1 -10 10 100000 100000
100000 100000
x  : -10 10
y  : (-94.1959,10) (24.8851,1.4624)
-20.7963 31.1604
acc: 0 (2.33891e+08,-2.0122)
27573 978313 4071

Again the four spikes, but different heights.

These are just the zeros of the solution! And zero is "much more sensitive".


Considering the first root:

> ./Ode1 -5.060057 -5.060056 1000 1000
1000 1000 25000
x  : -5.0600570000000000001 -5.0600565000000000001 -5.060056
y  : (-1.5727463126704784776e-05,-5.0600570000000000001) -6.3056626798548668788e-06 (3.1161377669950510183e-06,-5.060056)
  ms: -6.3056607567695256293e-06 5.4451159861411319918e-06
span_y / span_x = 18.843600893697334738
acc: 54132812 (238785034454,-5.0600561649999999999)
  msm: 1126303730.8511488511 8760323523.2125291126 224969446

It seems basically impossible to improved the low accuracy here:

> ./Ode1 -5.060057 -5.060056 1000 1000 1e5
1000 1000 100000
x  : -5.0600570000000000001 -5.0600565000000000001 -5.060056
y  : (-1.5727463126655132407e-05,-5.0600570000000000001) -6.3056626798052145019e-06 (3.1161377670447034037e-06,-5.060056)
  ms: -6.3056607567198732494e-06 5.4451159861411319959e-06
span_y / span_x = 18.843600893697334753
acc: 24119797 (115851687400,-5.0600561649999999999)
  msm: 532909372.41958041958 4192252984.1892064407 104917363

One needs to check whether the solution is indeed given with high precision.
