/* Oliver Kullmann, 11.5.2013 (Swansea) */
/* Copyright 2013 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/Generators/tests/LinearEquations.mac
  \brief Tests for clause-set-generators

Use by

oklib_load("OKlib/ComputerAlgebra/Satisfiability/Lisp/Generators/tests/LinearEquations.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$

kill(f)$


/* *********************
   * Parity conditions *
   *********************
*/

okltest_even_parity_cl(f) := (
  assert(f(0) = []),
  assert(f(1) = [{-1}]),
  assert(f(2) = [{-2,1},{-1,2}]),
  assert(f(3) = [{-3,-2,-1},{-3,2,1},{3,-2,1},{3,2,-1}]),
  true)$

okltest_even_parity_wv_cl(f) := (
  assert(okltest_even_parity_cl(buildq([f], lambda([n], f(create_list(i,i,1,n))))) = true),
  assert(f([5,7]) = [{-7,5},{-5,7}]),
  assert(f([4,5,6]) = [{-6,-5,-4},{-6,5,4},{-5,4,6},{-4,5,6}]),
  assert(f([6,5,4]) = [{-6,-5,-4},{-6,5,4},{-5,4,6},{-4,5,6}]),
  assert(f([2,4,6]) = [{-6,-4,-2},{-6,4,2},{-4,2,6},{-2,4,6}]),
  true)$

okltest_even_parity_fcl(f) := (
  assert(okltest_even_parity_cl(buildq([f], lambda([n], fcl2cl(f(n))))) = true),
  assert(f(0) = [[],[]]),
  assert(f(1) = [[1],[{-1}]]),
  assert(f(2) = [[1,2],[{-2,1},{-1,2}]]),
  true)$

okltest_odd_parity_cl(f) := (
  assert(f(0) = [{}]),
  assert(f(1) = [{1}]),
  assert(f(2) = [{-1,-2},{2,1}]),
  assert(f(3) = [{-3,-2,1},{-3,2,-1},{3,-2,-1},{1,2,3}]),
  true)$

okltest_odd_parity_wv_cl(f) := (
  assert(okltest_odd_parity_cl(buildq([f], lambda([n], f(create_list(i,i,1,n))))) = true),
  assert(f([5,7]) = [{-7,-5},{5,7}]),
  assert(f([4,5,6]) = [{-6,-5,4},{-6,-4,5},{-5,-4,6},{4, 5, 6}]),
  assert(f([6,5,4]) = [{-6,-5,4},{-6,-4,5},{-5,-4,6},{4, 5, 6}]),
  assert(f([2,4,6]) = [{-6,-4,2},{-6,-2,4},{-4,-2,6},{2, 4, 6}]),
  true)$

okltest_odd_parity_fcl(f) := (
  assert(okltest_odd_parity_cl(buildq([f], lambda([n], fcl2cl(f(n))))) = true),
  assert(f(0) = [[],[{}]]),
  assert(f(1) = [[1],[{1}]]),
  assert(f(2) = [[1,2],[{-1,-2},{2,1}]]),
  true)$


/* **********************
   * Parity constraints *
   **********************
*/

okltest_gprt2prt(f) := (
  assert(f([[],0]) = []),
  assert(f([[],1]) = false),
  assert(f([[1],0]) = [1]),
  assert(f([[1],1]) = [-1]),
  assert(f([[1,1],0]) = []),
  assert(f([[1,1],1]) = false),
  assert(f([[1,-1],0]) = false),
  assert(f([[1,-1],1]) = []),
  assert(f([[1,1,-1],0]) = [-1]),
  assert(f([[1,1,-1],1]) = [1]),
  assert(f([[1,1,-1,-1],0]) = []),
  assert(f([[1,1,-1,-1],1]) = false),
  assert(f([[1,1,2,-1,-1],0]) = [2]),
  assert(f([[1,1,2,-1,-1],1]) = [-2]),
  assert(f([[1,1,2,-1,-1,2],0]) = []),
  assert(f([[1,1,2,-1,-1,2],1]) = false),
  assert(f([[-2,1,1,2,-1,-1,2],0]) = [-2]),
  assert(f([[-2,1,1,2,-1,-1,2],1]) = [2]),
  assert(f([[-2,1,1,2,-1,-1,2,1,3],0]) = [-1,2,3]),
  assert(f([[-2,1,1,2,-1,-1,2,-1,-3],1]) = [1,2,3]),
  assert(f([[-2,1,1,2,-1,-1,2,-1,-3],0]) = [-1,2,3]),
  assert(f([[-2,1,1,2,-1,-1,2,-1,-3,-1,3,-3],0]) = [-2,3]),
  assert(f([[-2,1,1,2,-1,-1,2,-1,-3,-1,3,-3,1],0]) = [-1,2,3]),
  true)$


/* **********************************
   * Translating parity constraints *
   **********************************
*/

okltest_prt2cl_0(f) := (
  assert(okltest_even_parity_wv_cl(f) = true),
  assert(f([-1]) = [{1}]),
  assert(f([1]) = [{-1}]),
  assert(f([-1,-2]) = [{-2,1},{-1,2}]),
  assert(f([1,-2]) = [{-2,-1},{1,2}]),
  assert(f([1,2,3]) = [{-3,-2,-1}, {-3, 2, 1}, {3, -2, 1}, {3, 2, -1}]),
  assert(f([-4,-5,-6]) = [{-6,-5,4},{-6,5,-4},{6,-5,-4},{4,5,6}]),
  assert(f([-6,-5,-4]) = [{-6,-5,4},{-6,5,-4},{6,-5,-4},{4,5,6}]),
  true)$

okltest_prt2cl_aux_1(f) := (
  assert(f([],[]) = []),
  assert(f([5],[]) = [{-5}]),
  assert(f([-2,3],[]) = [{-3,-2},{2,3}]),
  assert(f([1,2,3],[4]) = [{-1,-2,-4},{1,2,-4},{1,-2,4},{-1,2,4}, {-4,3},{-3,4}]),
  assert(f([1,2,3,4],[5,6]) = [{-1,-2,-5},{1,2,-5},{1,-2,5},{-1,2,5}, {-5,-6,-3},{-6,5,3},{-5,6,3},{-3,5,6}, {-6,4},{-4,6}]),
  true)$

okltest_gen_2xor_fcl(f) := (
  assert(f(0) = [[],[{}]]),
  assert(f(1) = [[1],[{-1},{1}]]),
  assert(f(2) = [[1,2],[{-1,-2},{-1,2},{-2,1},{1,2}]]),
  assert(f(3) = [[1,2,3,4,5],[{-1,-2,-4},{1,2,-4},{1,-2,4},{-1,2,4},{-4,3},{-3,4}, {-1,-2,-5},{1,2,-5},{1,-2,5},{-1,2,5},{-5,-3},{3,5}]]),
  assert(f(4) = [[1,2,3,4,5,6,7,8], [{-1,-2,-5},{1,2,-5},{1,-2,5},{-1,2,5}, {-5,-6,-3},{-6,5,3},{-5,6,3},{-3,5,6},{-6,4},{-4,6}, {-1,-2,-7},{1,2,-7},{1,-2,7},{-1,2,7}, {-7,-8,-3},{-8,7,3},{-7,8,3},{-3,7,8},{-8,-4},{4,8}]]),
  true)$

okltest_gprt2s2cl_aux_2(f) := (
  assert(f([[],0],[],[[],0],[],[]) = []),
  assert(f([[],1],[],[[],0],[],[]) = [{}]),
  assert(f([[],0],[],[[],1],[],[]) = [{}]),
  assert(f([[1],0],[],[[-1],0],[],[]) = [{}]),
  assert(f([[1],0],[],[[1],1],[],[]) = [{}]),
  assert(f([[1,2],0],[],[[1,-2],0],[],[]) = [{}]),
  assert(f([[1,2,3],0],[],[[1,2,-3],0],[],[]) = [{}]),
  assert(f([[3,2,1],0],[],[[-3,2,1],0],[],[]) = [{}]),
  assert(f([[3,2,1],0],[],[[1,2,-3],0],[],[]) = [{}]),
  assert(f([[1,2,3],0],[],[[1,-2,3],0],[],[]) = [{}]),
  assert(f([[1,2,3],0],[],[[-1,2,3],0],[],[]) = [{}]),
  assert(f([[-1,-2,-3],0],[],[[1,-2,-3],0],[],[]) = [{}]),
  assert(f([[-1,-2,-3],0],[],[[-1,2,-3],0],[],[]) = [{}]),
  assert(f([[1,2],0],[],[[1,2],0],[],[]) = [{-2,1},{-1,2},{-2,1},{-1,2}]),
  assert(f([[1,2],0],[],[[1,3],0],[],[]) = [{-2,1},{-1,2},{-3,1},{-1,3},{-3,2},{-2,3}]),
  assert(f([[1,2,3],0],[5],[[1,2,4],0],[6],[]) = [{-5,-2,-1},{-5,1,2},{-2,1,5},{-1,2,5},{-5,3},{-3,5},{-6,-2,-1},{-6,2,1},{-2,1,6},{-1,2,6},{-6,4},{-4,6},{-4,3},{-3,4}]),
  assert(f([[1,2,3,4],0],[6,7],[[1,2,5],0],[8],[9]) = [{-6,-2,-1},{-6,1,2},{-2,1,6},{-1,2,6},{-7,-3,-6},{-7,6,3},{-6,3,7},{-3,6,7},{-7,4},{-4,7},{-8,-2,-1},{-8,2,1},{-2,1,8},{-1,2,8},{-8,5},{-5,8},{-9,-4,-3},{-9,3,4},{-4,3,9},{-3,4,9},{-9,5},{-5,9}]),
  assert(f([[1,2,3,-4],1],[6,7],[[1,2,-5],1],[8],[9]) = [{-6,-2,-1},{-6,1,2},{-2,1,6},{-1,2,6},{-7,-3,-6},{-7,6,3},{-6,3,7},{-3,6,7},{-7,4},{-4,7},{-8,-2,-1},{-8,2,1},{-2,1,8},{-1,2,8},{-8,5},{-5,8},{-9,-4,-3},{-9,3,4},{-4,3,9},{-3,4,9},{-9,5},{-5,9}]),
  assert(f([[-1,2,3,4],0],[6,7],[[1,2,5],0],[8],[9]) = [{-6,-2,1},{-6,-1,2},{-2,-1,6},{1,2,6},{-7,-3,-6},{-7,6,3},{-6,3,7},{-3,6,7},{-7,4},{-4,7},{-8,-2,-1},{-8,2,1},{-2,1,8},{-1,2,8},{-8,5},{-5,8},{-9,-4,3},{-9,-3,4},{-4,-3,9},{3,4,9},{-9,5},{-5,9}]),
  assert(f([[1,-2,3,4],0],[6,7],[[1,2,5],0],[8],[9]) = [{-6,-2,1},{-6,-1,2},{-2,-1,6},{1,2,6},{-7,-3,-6},{-7,6,3},{-6,3,7},{-3,6,7},{-7,4},{-4,7},{-8,-2,-1},{-8,2,1},{-2,1,8},{-1,2,8},{-8,5},{-5,8},{-9,-4,3},{-9,-3,4},{-4,-3,9},{3,4,9},{-9,5},{-5,9}]),
  assert(f([[1,2,3,-4],0],[6,7],[[1,2,5],0],[8],[9]) = [{-6,-2,1},{-6,-1,2},{-2,-1,6},{1,2,6},{-7,-3,-6},{-7,6,3},{-6,3,7},{-3,6,7},{-7,4},{-4,7},{-8,-2,-1},{-8,2,1},{-2,1,8},{-1,2,8},{-8,5},{-5,8},{-9,-4,3},{-9,-3,4},{-4,-3,9},{3,4,9},{-9,5},{-5,9}]),
  assert(f([[1,2,3,4],1],[6,7],[[1,2,5],0],[8],[9]) = [{-6,-2,1},{-6,-1,2},{-2,-1,6},{1,2,6},{-7,-3,-6},{-7,6,3},{-6,3,7},{-3,6,7},{-7,4},{-4,7},{-8,-2,-1},{-8,2,1},{-2,1,8},{-1,2,8},{-8,5},{-5,8},{-9,-4,3},{-9,-3,4},{-4,-3,9},{3,4,9},{-9,5},{-5,9}]),
  assert(f([[1,2,3,4],0],[6,7],[[-1,2,5],0],[8],[9]) = [{-6,-2,-1},{-6,1,2},{-2,1,6},{-1,2,6},{-7,-3,-6},{-7,6,3},{-6,3,7},{-3,6,7},{-7,4},{-4,7},{-8,-2,1},{-8,2,-1},{-2,-1,8},{1,2,8},{-8,5},{-5,8},{-9,-4,3},{-9,-3,4},{-4,-3,9},{3,4,9},{-9,5},{-5,9}]),
  assert(f([[1,2,3,4],0],[6,7],[[1,2,-5],0],[8],[9]) = [{-6,-2,-1},{-6,1,2},{-2,1,6},{-1,2,6},{-7,-3,-6},{-7,6,3},{-6,3,7},{-3,6,7},{-7,4},{-4,7},{-8,-2,1},{-8,2,-1},{-2,-1,8},{1,2,8},{-8,5},{-5,8},{-9,-4,3},{-9,-3,4},{-4,-3,9},{3,4,9},{-9,5},{-5,9}]),
  assert(f([[1,2,3,4],0],[6,7],[[1,2,5],1],[8],[9]) = [{-6,-2,-1},{-6,1,2},{-2,1,6},{-1,2,6},{-7,-3,-6},{-7,6,3},{-6,3,7},{-3,6,7},{-7,4},{-4,7},{-8,-2,1},{-8,2,-1},{-2,-1,8},{1,2,8},{-8,5},{-5,8},{-9,-4,3},{-9,-3,4},{-4,-3,9},{3,4,9},{-9,5},{-5,9}]),
  true)$

okltest_gprt2s2cl_aux_s(f) := (
  assert(okltest_prt2cl_aux_1(buildq([f], lambda([P,aux], f([P,0],aux,[[],0],[])))) = true),
  assert(okltest_prt2cl_aux_1(buildq([f], lambda([P,aux], f([[],0],[],[P,0],aux)))) = true),
  assert(okltest_prt2cl_aux_1(buildq([f], lambda([P,aux], f([P,0],aux,[P,0],aux)))) = true),
  assert(f([[],1],[],[[],0],[]) = [{}]),
  assert(f([[],0],[],[[],1],[]) = [{}]),
  assert(f([[1,2,3,4],0],[5,6],[[7,8,9,10],0],[11,12]) = [{-1,-2,-5},{1,2,-5},{1,-2,5},{-1,2,5},{-5,-6,-3},{-6,5,3},{-5,6,3},{-3,5,6},{-6,4},{-4,6}, {-7,-8,-11},{7,8,-11},{7,-8,11},{-7,8,11},{-11,-12,-9},{-12,11,9},{-11,12,9},{-9,11,12},{-12,10},{-10,12}]),
  assert(f([[1],0],[],[[1],1],[]) = [{}]),
  assert(f([[1],0],[],[[1],0],[]) = [{-1}]),
  assert(f([[1,2],0],[],[[1,-2],0],[]) = [{}]),
  assert(f([[1,2],0],[],[[1,3],0],[]) = [{-2,1},{-1,2},{-3,1},{-1,3}]),
  assert(f([[1,2],0],[],[[1,2,4],0],[]) = [{-2,1},{-1,2},{-4}]),
  assert(f([[1,2],1],[],[[1,2,4],0],[]) = [{-2,-1},{1,2},{4}]),
  assert(f([[1,2],1],[],[[1,2,-4],0],[]) = [{-2,-1},{1,2},{-4}]),
  assert(f([[1,2],1],[],[[1,2,-4],1],[]) = [{-2,-1},{1,2},{4}]),
  assert(f([[1,-2],1],[],[[1,2,-4],1],[]) = [{-2,1},{-1,2},{-4}]),
  assert(f([[1,-2],1],[],[[-1,2,-4],1],[]) = [{-2,1},{-1,2},{4}]),
  assert(f([[1,-2,3],1],[5],[[-1,2,-4],1],[]) = [{-1,-2,-5},{-5,1,2},{-2,1,5},{-1,2,5},{-5,3},{-3,5}, {-5,-4},{4,5}]),
  assert(f([[1,-2,-3],1],[5],[[-1,2,-4],1],[]) = [{-1,-2,-5},{-5,1,2},{-2,1,5},{-1,2,5},{-5,-3},{3,5}, {-5,-4},{4,5}]),
  assert(f([[1,-2,3,4],1],[6,7],[[-1,2,3,-5],1],[]) = [{-1,-2,-6},{-6,1,2},{-2,1,6},{-1,2,6},{-3,-6,-7},{-7,3,6},{-6,3,7},{-3,6,7}, {-7,4},{-4,7}, {-5,-7},{5,7}]),
  assert(f([[1,2,3,4],0],[7,8],[[1,2,3,5,6],1],[9]) = [{-1,-2,-7},{-7,1,2},{-2,1,7},{-1,2,7},{-3,-7,-8},{-8,3,7},{-7,3,8},{-3,7,8},{-8,4},{-4,8}, {5,-6,-9},{-9,-5,6},{-5,-6,9},{5,6,9},{-9,8},{-8,9}]),
  assert(f([[1,-2,3,4],1],[7,8],[[-1,2,3,-5,6],1],[9]) = [{-1,-2,-7},{-7,1,2},{-2,1,7},{-1,2,7},{-3,-7,-8},{-8,3,7},{-7,3,8},{-3,7,8},{-8,4},{-4,8}, {5,-6,-9},{-9,-5,6},{-5,-6,9},{5,6,9},{-9,8},{-8,9}]),
  assert(f([[-1,2,3,4],1],[7,8],[[-1,2,3,-5,6],1],[9]) = [{-1,-2,-7},{-7,1,2},{-2,1,7},{-1,2,7},{-3,-7,-8},{-8,3,7},{-7,3,8},{-3,7,8},{-8,4},{-4,8}, {5,-6,-9},{-9,-5,6},{-5,-6,9},{5,6,9},{-9,8},{-8,9}]),
  assert(f([[4,2,3,-1],1],[7,8],[[-1,2,3,-5,6],1],[9]) = [{-1,-2,-7},{-7,1,2},{-2,1,7},{-1,2,7},{-3,-7,-8},{-8,3,7},{-7,3,8},{-3,7,8},{-8,4},{-4,8}, {5,-6,-9},{-9,-5,6},{-5,-6,9},{5,6,9},{-9,8},{-8,9}]),
  true)$

okltest_sprt2cl_0(f) := (
  assert(okltest_prt2cl_0(buildq([f], lambda([P], f([P])))) = true),
  for n : 1 thru 5 do block([F:f([listn(n),endcons(-n,listn(n-1))])],
    assert(length(F) = 2^n),
    assert(setify(F) = full_cs(n))
  ),
  true)$

okltest_sprt2cl_aux_1(f) := (
  assert(okltest_prt2cl_aux_1(buildq([f], lambda([P,a], f([[P,a]])))) = true),
  assert(okltest_gen_2xor_fcl(buildq([f], lambda([n], if n<=2 then full_fcl(n) else [listn(3*n-4),f([[listn(n),listmn(n+1,2*n-2)],[endcons(-n,listn(n-1)),listmn(2*n-1,3*n-4)]])]))) = true),
  true)$

/*!
\endhtmlonly
*/
