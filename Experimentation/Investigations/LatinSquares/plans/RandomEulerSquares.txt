// Oliver Kullmann, 30.6.2021 (Swansea)

Creating random Euler-square completion problems

1. Planning the experimentation for measuring the SAT-probabilities

Parameters: - N (dimension)
            - q (the proportion of randomly filled cells in the first square

The creation is such that the first square is always satisfiable (can be
completed to a ls).

Example for a single run (N = 7, q = m/N^2):

> LSRG 7,2 "-co" "1*0,0,m;1*0,0,0" t | solving-program

Here the "50%" value appears to be m ~ 15.

N = 5, 7, 8, 9, 10 will be investigated. There are no solutions for N=6,
so it is omitted.

> LSRG 7,2 "-co" "1*0,0,m;1*0,0,0" seed-sequence | solving-program

0. ID of OKlibrary (this is fixed)
1. ID of the "experiment" (always best a timestamp); possibly with sub-experiments
   (numbered 0, ...).
2. Number of "machine" (0,1,2, ... by default); possibly "sub-machines", threads ...
4. The running number of the output: 0, 1, 2, ... (by default "unbounded").

m should be varied from N^2 to 2 with step 1. Cases N^2 and N^2-1 are
trivial, but they are useful for checking that the propagator works well.

