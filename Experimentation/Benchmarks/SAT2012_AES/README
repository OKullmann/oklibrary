# Matthew Gwynne, 11.4.2012 (Swansea)

Authors:
 - Matthew Gwynne, csmg@swansea.ac.uk
 - Oliver Kullmann, O.Kullmann@Swansea.ac.uk
 Swansea University, Computer Science, United Kingdom


I Directory content:

  - Benchmarks/B/aes_B_N_keyfind_*.cnf are the N round B-bit AES benchmark
    instances
  - Assignments/B/aes_ass_B_N_keyfind_*.cnf are the N round B-bit AES benchmark
    plain-text/cipher-text variable assignments
  - Formulas/B/aes_ass_B_N_keyfind_*.cnf are the N round B-bit AES benchmark
    uninstantiated AES formulas
  - MD5_BenchmarksB contains the md5 hash values of the B-bit AES
    benchmark instances for B = 16, 20, 24, or 32.
  - MD5_FormulasB contains the md5 hash values of the B-bit AES
    formulas for B = 16, 20, 24, or 32.
  - MD5_AssignmentsB contains the md5 hash values of the B-bit AES
    assignments for B = 16, 20, 24, or 32.
  - clause-set concatenation tool ./AppendDimacs-O3-DNDEBUG
  - this README file.


II Advanced Encryption Standard II benchmarks

We provide translations of small scale variants of the Advanced Encryption
Standard (AES) as key discovery problems. All provided instances are 
satisfiable and the solutions for these benchmarks correspond to valid keys
for fixed choices of plain-text and cipher-text. We also provide template 
formulas for generating more key discovery instances (see IV).


III Background

We call the translation used to generate these instances "the minimum box 
translation". This translation uses CNF representations of minimum size of 
the components of the AES, with the aim of producing a translation with as
few clauses as possible. These components ("boxes") are 4-bit or 8-bit
permutations and yield 8-bit or 16-bit boolean functions. Composition
happens by using new variables.

Whether some of these boxes are in fact of minimum size is still an open
question. See the related SAT2011 benchmarks for MAXSAT and pseudo-boolean
benchmarks for these optimisation problems.

Such an approach is a natural starting point, minimising size, but just the
beginning. We investigate better representations in the OKlibrary (see X) and
consider what constitutes a good translation in a forthcoming technical report
on attacking the AES cipher using SAT

@TechReport{GwynneKullmann2012AES,
  author =       {Matthew Gwynne and Oliver Kullmann},
  title =        {Attacking {AES} via {SAT}},
  institution =  {arXiv},
  year =         2012,
  number =       {arXiv:??? [cs.DM]},
  month =        {June},
  annote =       {In preparation.}
}

Additional to this benchmark set, we separately provided "The AES 
challenge" benchmark to SAT 2011, a single 10 round AES instance with
an unknown key; an open challenge to the SAT community. 


IV The 50 instances are already provided, but can also be generated by running

bits=32; for r in $(seq 1 2); do for s in $(seq 1 5); do AppendDimacs-O3-DNDEBUG Formulas/${bits}/aes_${bits}_${r}.cnf Assignments/${bits}/aes_ass_${bits}_${r}_keyfind_${s}.cnf > Benchmarks/${bits}/aes_${bits}_${r}_keyfind_${s}.cnf; done; done

bits=24; for r in 3 4; do for s in $(seq 1 5); do AppendDimacs-O3-DNDEBUG Formulas/${bits}/aes_${bits}_${r}.cnf Assignments/${bits}/aes_ass_${bits}_${r}_keyfind_${s}.cnf > Benchmarks/${bits}/aes_${bits}_${r}_keyfind_${s}.cnf; done; done

bits=20; r=20; for s in $(seq 1 5); do AppendDimacs-O3-DNDEBUG Formulas/${bits}/aes_${bits}_${r}.cnf Assignments/${bits}/aes_ass_${bits}_${r}_keyfind_${s}.cnf > Benchmarks/${bits}/aes_${bits}_${r}_keyfind_${s}.cnf; done

bits=16; for r in 3 4 5 6 10; do for s in $(seq 1 5); do AppendDimacs-O3-DNDEBUG Formulas/${bits}/aes_${bits}_${r}.cnf Assignments/${bits}/aes_ass_${bits}_${r}_keyfind_${s}.cnf > Benchmarks/${bits}/aes_${bits}_${r}_keyfind_${s}.cnf; done; done

in this directory.


V Instances

  - with size in bytes
  - Estimated difficulty and time to solve:
      "e" for easy (< 1m to solve), 
      "me" for "medium-easy" (between 5 minutes and 15 minutes to solve),
      "m" for "medium" (between 15 minutes and 1 hour to solve),
      "mh" for "medium-hard" (between 1 hour and 3 hours),
      "h" for "hard" (> 3 hours)

 663829 aes_16_3_keyfind_1.cnf    sat (e)
 663827 aes_16_3_keyfind_2.cnf    sat (e)
 663831 aes_16_3_keyfind_3.cnf    sat (e)
 663824 aes_16_3_keyfind_4.cnf    sat (e)
 663828 aes_16_3_keyfind_5.cnf    sat (e)
 885705 aes_16_4_keyfind_1.cnf    sat (me)
 885709 aes_16_4_keyfind_2.cnf    sat (me)
 885709 aes_16_4_keyfind_3.cnf    sat (me)
 885704 aes_16_4_keyfind_4.cnf    sat (me)
 885707 aes_16_4_keyfind_5.cnf    sat (me)
1107572 aes_16_5_keyfind_1.cnf    sat (m)
1107574 aes_16_5_keyfind_2.cnf    sat (m)
1107573 aes_16_5_keyfind_3.cnf    sat (m)
1107576 aes_16_5_keyfind_4.cnf    sat (m)
1107573 aes_16_5_keyfind_5.cnf    sat (m)
1329452 aes_16_6_keyfind_1.cnf    sat (mh)
1329457 aes_16_6_keyfind_2.cnf    sat (mh)
1329458 aes_16_6_keyfind_3.cnf    sat (mh)
1329451 aes_16_6_keyfind_4.cnf    sat (mh)
1329450 aes_16_6_keyfind_5.cnf    sat (mh)
2232505 aes_16_10_keyfind_1.cnf   sat (h)
2232506 aes_16_10_keyfind_2.cnf   sat (h)
2232509 aes_16_10_keyfind_3.cnf   sat (h)
2232503 aes_16_10_keyfind_4.cnf   sat (h)
2232505 aes_16_10_keyfind_5.cnf   sat (me)
804556  aes_20_20_keyfind_1.cnf   sat (me)
804555  aes_20_20_keyfind_2.cnf   sat (me)
804563  aes_20_20_keyfind_3.cnf   sat (me)
804557  aes_20_20_keyfind_4.cnf   sat (me)
804555  aes_20_20_keyfind_5.cnf   sat (me)
368669  aes_24_3_keyfind_1.cnf    sat (m)
368664  aes_24_3_keyfind_2.cnf    sat (m)
368662  aes_24_3_keyfind_3.cnf    sat (m)
368663  aes_24_3_keyfind_4.cnf    sat (m)
368662  aes_24_3_keyfind_5.cnf    sat (m)
489876  aes_24_4_keyfind_1.cnf    sat (mh)
489877  aes_24_4_keyfind_2.cnf    sat (mh)
489871  aes_24_4_keyfind_3.cnf    sat (mh)
489872  aes_24_4_keyfind_4.cnf    sat (mh)
489870  aes_24_4_keyfind_5.cnf    sat (mh)
418609  aes_32_1_keyfind_1.cnf    sat (m)
418605  aes_32_1_keyfind_2.cnf    sat (m)
418607  aes_32_1_keyfind_3.cnf    sat (m)
418606  aes_32_1_keyfind_4.cnf    sat (m)
418606  aes_32_1_keyfind_5.cnf    sat (m)
826536  aes_32_2_keyfind_1.cnf    sat (mh)
826524  aes_32_2_keyfind_2.cnf    sat (mh)
826533  aes_32_2_keyfind_3.cnf    sat (mh)
826516  aes_32_2_keyfind_4.cnf    sat (mh)
826525  aes_32_2_keyfind_5.cnf    sat (mh)


VI Template formulas

For each of the benchmarks in Benchmarks/B/aes_B_N_keyfind_*.cnf the 
uninstantiated B-bit AES formula for N rounds is provided in 
Formulas/B/aes_B_N.cnf. The plain-text/cipher-text assignments, given as 
clause-sets with 2*N unit clauses, are then provided in 
Assignments/B/aes_ass_B_N_keyfind_*.cnf. The hexidecimal representations
of the plain-text, key and cipher-text are given in the first comment line
of the assignment files.

See IV for instructions on generating the provided benchmarks using the 
uninstantiated formulas and assignments.


VII The Advanced Encryption Standard and variants

We provide translations of the Advanced Encryption Standard key discovery 
problem into SAT. Benchmarks/B/aes_B_N_keyfind_S.cnf is a clause-set which is 
satisfied by a total assignment phi iff for the variables 1,...,3*B, we have 
that
  
  AES((1,...,B),(B+1,...,2*B)) = (2*B+1,...,3*B)

for N round B-bit AES. That is, that the plain-text variables, given by 1,...,B 
and key variables given by B+1,...,2*B encrypt using the corresponding AES
encryption to the cipher-text bits 2*B+1,...,3*B. All other variables within 
the clause-sets are uniquely determined given the plain-text, key and 
cipher-text variables. 

All AES instances refer to small scale variants of the standard AES given in
[Algebraic Aspects of the Advanced Encryption Standard; Cid, Murphy and
Robshaw]. For more information, see the following references:

@Book{DaemenRijmen2001Rijndael,
  author =	 {Joan Daemen and Vincent Rijmen},
  title = 	 {The Design of Rijndael},
  publisher = 	 {Springer},
  year = 	 2001,
  address =	 {Berlin},
  note =	 {ISBN 3-540-42580-2; QA76.9.A25 D32 2001}
}

@Book{CidMurphyRobshaw2006AlgebraicAES,
  author =       {Carlos Cid and Sean Murphy and Matthew Robshaw},
  title =        {Algebraic Aspects of the Advanced Encryption Standard},
  publisher =    {Springer},
  year =         2006,
  note =         {ISBN-10 0-387-24363-1}
}


VIII Example

Finding the key 32-bit key FFCB8985 from the plain-text 258CEB48 and
cipher-text F11E5E5D for the 1 round 32-bit AES:

SAT2011_AES> AppendDimacs-O3-DNDEBUG Formulas/32/aes_32_1.cnf Assignments/32/aes_ass_32_1_keyfind_1.cnf > Benchmarks/32/aes_32_1_keyfind_1.cnf
SAT2011_AES> ./solve Benchmarks/32/aes_32_1_keyfind_1.cnf

where "./solve" is a SAT solver of your choice. Assuming the SAT solver solves
the instances, examining variables 33,...,64 yields the key
86FE8B9D1965FC8EB292EA3214D49C44.

The key can be read from the variables 33,...,64, and the assignment

33 34 35 36 37 38 39 40 41 42 -43 -44 45 -46 47 48 49 -50 -51 -52
53 -54 -55 56 57 -58 -59 -60 -61 62 -63 64

gives the key FFCB8985.



IX On the choice of instances

The Advanced Encryption Standard is a widely used encryption algorithm and
the performance of SAT solvers on these instances has a bearing the 
cryptographic security of the cipher.

We present a range of small scale variant instances with similar
construction and cryptographic properties to the full AES algorithm that
finding their solutions should yield insights into the AES itself or the
notions of security surrounding block ciphers. Such smaller instances are
more tractable and have been chosen to offer instances with a range of
solve-times.


X The OKlibrary http://www.ok-sat-library.org

All developments took place within the OKlibrary, an open-source research
platform around the SAT problem. Also the translation framework used to
generate the instances, formulas and assignments is provided there.

List of relevant directories in OKplatform/OKsystem/OKlib (where OKplatform
is the directory of the unpacked OKlibrary-package):

 - Experimentation/Benchmarks: all our benchmark packages (typically without
   the instances)
 - Experimentation/Investigations/Cryptography/AdvancedEncryptionStandard: all
   current investigations into AES
 - ComputerAlgebra/Cryptology/Lisp/CryptoSystems/Rijndael/: an AES 
   implementation in the Maxima computer algebra system
 - ComputerAlgebra/Cryptology/Lisp/Cryptanalysis/Rijndael/: the AES 
   translation in the Maxima computer algebra system

The OKlibrary-internal documentation for the SAT2011-benchmarks is provided at

http://cs.swan.ac.uk/~csoliver/ok-sat-library/internet_html/doc/doxygen_html/d3/d83/SAT2012_8hpp.html

