# Matthew Gwynne 29.2.2011 (Swansea)

I Directory content:

  - aes_challenge.cnf is the 128-bit AES key discovery challenge
  - MD5_Challenge contains the md5 hash value of the AES challenge
  - this README file.


II The AES Challenge

As a challenge to the SAT community, we present a SAT translation of the 
128-bit Advanced Encryption Standard cipher as a key discovery problem. 
The provided instance is satisfiable, and a solution corresponds to a
valid key for some fixed choice of plain-text and cipher-text.


III Choice of plain-text, cipher-text and key

The cipher-text was encrypted using a key determined by 128 coin flips.
The key has been destroyed and the only way to rediscover it is to solve this
instance.

The challenge amounts to finding a key which encrypts the plain-text

  CF964488F8FD93A6F30E9B4EDE0FE07E

to the cipher-text

  3DE819D1BB624DDA35E4445D12C31762.


IV Background

The Advanced Encryption Standard is a widely used encryption algorithm.
Solving this instance in a reasonable time would break the AES, and would have
a significant impact in the cryptographic community.

We call the translation used to generate this instance "the minimum box 
translation". This translation uses CNF representations of minimum size of the
components of the AES, with the aim of producing a translation with as few
clauses as possible. These components ("boxes") are 8-bit permutations and
yield 16-bit boolean functions. Composition happens by using new variables.

In fact, for some of these boxes we couldn't prove that we have minimum
size CNF representations. See the related SAT2011 benchmarks for MAXSAT
and pseudo-boolean problems.

This translation is the natural first choice, minimising size.
More powerful translations are the subject of the forthcoming technical report

@TechReport{GwynneKullmann2008AES,
  author =       {Matthew Gwynne and Oliver Kullmann},
  title =        {Attacking {AES} via {SAT}},
  institution =  {arXiv},
  year =         2011,
  number =       {arXiv:??? [cs.DM]},
  month =        {April},
  annote =       {In preparation.}
}

A wider range of AES benchmarks is available as the "Advanced Encryption
Standard I" benchmark set for SAT2011 competition.


V Instance

The instance has 

 - 19,211,831 bytes
 - 8080 variables
 - 153304 clauses
 - 940464 literal occurrences

and should be extremely hard for any solver to solve.

The occurring clause-lengths are 1 to 9, and we have the following numbers
of clauses belonging to these clause-lengths:
1 336
2 1152
3 14896
4 3376
5 20016
6 26464
7 75888
8 11032
9 144

The unit-clauses are the
 - 128 plain-text bits
 - 128 cipher-text bits
 - 10 * 8 bits representing the so-called "round constants".


VI The OKlibrary http://www.ok-sat-library.org

All developments took place within the OKlibrary, an open-source research
platform around the SAT problem. Also the translation framework used to
generate the instance is provided there, as well as a more general set of
benchmarks with reduced variants of the AES.

List of relevant directories in OKplatform/OKsystem/OKlib (where OKplatform
is the directory of the unpacked OKlibrary-package):

 - Experimentation/Benchmarks: all our benchmark packages (typically without
   the instances)
 - Experimentation/Investigations/Cryptography/AdvancedEncryptionStandard: all
   current investigations into AES
 - ComputerAlgebra/Cryptology/Lisp/CryptoSystems/Rijndael/: an AES 
   implementation in the Maxima computer algebra system
 - ComputerAlgebra/Cryptology/Lisp/Cryptanalysis/Rijndael/: the AES 
   translation in the Maxima computer algebra system

The OKlibrary-internal documentation for the SAT2011-benchmarks is provided at

http://cs.swan.ac.uk/~csoliver/ok-sat-library/internet_html/doc/doxygen_html/d3/d83/SAT2011_8hpp.html
